{
	"info": {
		"_postman_id": "cd9d403c-caa6-4481-bc07-63ea3030cfc5",
		"name": "IONOS DBaaS PostgreSQL REST API",
		"description": "An enterprise-grade Database is provided as a Service (DBaaS) solution that\ncan be managed through a browser-based \"Data Center Designer\" (DCD) tool or\nvia an easy to use API.\n\nThe API allows you to create additional PostgreSQL database clusters or modify existing\nones. It is designed to allow users to leverage the same power and\nflexibility found within the DCD visual tool. Both tools are consistent with\ntheir concepts and lend well to making the experience smooth and intuitive.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "clusters",
			"item": [
				{
					"name": "{clusterId}",
					"item": [
						{
							"name": "backups",
							"item": [
								{
									"name": "List backups of cluster",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/backups?limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"backups"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element to return. Use together with 'limit' for pagination."
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves a list of all backups of the given PostgreSQL cluster."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/backups?limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"backups"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"collection\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"DEGRADED\"\n      },\n      \"properties\": {\n        \"id\": \"<string>\",\n        \"clusterId\": \"<string>\",\n        \"version\": \"<string>\",\n        \"isActive\": \"<boolean>\",\n        \"earliestRecoveryTargetTime\": \"<dateTime>\",\n        \"size\": \"<integer>\",\n        \"location\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"collection\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"properties\": {\n        \"id\": \"<string>\",\n        \"clusterId\": \"<string>\",\n        \"version\": \"<string>\",\n        \"isActive\": \"<boolean>\",\n        \"earliestRecoveryTargetTime\": \"<dateTime>\",\n        \"size\": \"<integer>\",\n        \"location\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": 0,\n  \"limit\": 100,\n  \"links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/backups?limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"backups"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "restore",
							"item": [
								{
									"name": "In-place restore of a cluster",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"backupId\": \"<string>\",\n  \"recoveryTargetTime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"restore"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Triggers an in-place restore of the given PostgreSQL."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"backupId\": \"<string>\",\n  \"recoveryTargetTime\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"restore"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"backupId\": \"<string>\",\n  \"recoveryTargetTime\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"restore"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "logs",
							"item": [
								{
									"name": "Get logs of your cluster",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/logs?start=<dateTime>&end=<dateTime>&direction=BACKWARD&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"logs"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>",
													"description": "The start time for the query in RFC3339 format. Must not be more than 30 days ago but before the end parameter. The default is 30 days ago."
												},
												{
													"key": "end",
													"value": "<dateTime>",
													"description": "The end time for the query in RFC3339 format. Must not be greater than now. The default is the current timestamp."
												},
												{
													"key": "direction",
													"value": "BACKWARD",
													"description": "The direction in which to scan through the logs. The logs are returned in order of the direction."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximal number of log lines to return.  If the limit is reached then log lines will be cut at the end (respecting the scan direction)."
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves PostgreSQL logs based on the given parameters."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/logs?start=<dateTime>&end=<dateTime>&direction=BACKWARD&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"logs"
													],
													"query": [
														{
															"key": "start",
															"value": "<dateTime>",
															"description": "The start time for the query in RFC3339 format. Must not be more than 30 days ago but before the end parameter. The default is 30 days ago."
														},
														{
															"key": "end",
															"value": "<dateTime>",
															"description": "The end time for the query in RFC3339 format. Must not be greater than now. The default is the current timestamp."
														},
														{
															"key": "direction",
															"value": "BACKWARD",
															"description": "The direction in which to scan through the logs. The logs are returned in order of the direction."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximal number of log lines to return.  If the limit is reached then log lines will be cut at the end (respecting the scan direction)."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"instances\": [\n    {\n      \"name\": \"<string>\",\n      \"messages\": [\n        {\n          \"time\": \"<dateTime>\",\n          \"message\": \"<string>\"\n        },\n        {\n          \"time\": \"<dateTime>\",\n          \"message\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"messages\": [\n        {\n          \"time\": \"<dateTime>\",\n          \"message\": \"<string>\"\n        },\n        {\n          \"time\": \"<dateTime>\",\n          \"message\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/logs?start=<dateTime>&end=<dateTime>&direction=BACKWARD&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"logs"
													],
													"query": [
														{
															"key": "start",
															"value": "<dateTime>",
															"description": "The start time for the query in RFC3339 format. Must not be more than 30 days ago but before the end parameter. The default is 30 days ago."
														},
														{
															"key": "end",
															"value": "<dateTime>",
															"description": "The end time for the query in RFC3339 format. Must not be greater than now. The default is the current timestamp."
														},
														{
															"key": "direction",
															"value": "BACKWARD",
															"description": "The direction in which to scan through the logs. The logs are returned in order of the direction."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximal number of log lines to return.  If the limit is reached then log lines will be cut at the end (respecting the scan direction)."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "versions",
							"item": [
								{
									"name": "Supported PostgreSQL versions of cluster",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"versions"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves a list of all PostgreSQL versions available for this cluster."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"versions"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"versions"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "postgresversions",
							"item": [
								{
									"name": "List PostgreSQL versions",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/postgresversions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"postgresversions"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves a list of all PostgreSQL versions available for this cluster\nincluding the current version.\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/postgresversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"postgresversions"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/postgresversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"postgresversions"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{username}",
									"item": [
										{
											"name": "Get user",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the cluster."
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) The authentication username."
														}
													]
												},
												"description": "Retrieves a single user"
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"system\": \"<boolean>\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<uuid>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"resourceURN\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Type",
															"value": "application/problem+json",
															"description": {
																"content": "application/problem+json",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Patch user",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the cluster."
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) The authentication username."
														}
													]
												},
												"description": "Patches a single user. Only changing the password is supported. System users cannot be patched."
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"system\": \"<boolean>\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<uuid>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"resourceURN\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Type",
															"value": "application/problem+json",
															"description": {
																"content": "application/problem+json",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete user",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the cluster."
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) The authentication username."
														}
													]
												},
												"description": "Deletes a single user"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Type",
															"value": "application/problem+json",
															"description": {
																"content": "application/problem+json",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List users",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/users?limit=100&offset=0&system=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element to return. Use together with 'limit' for pagination."
												},
												{
													"key": "system",
													"value": "<boolean>",
													"description": "If set to 'true' all users, including system users are returned. System users cannot be deleted or updated."
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves a list of users"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users?limit=100&offset=0&system=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														},
														{
															"key": "system",
															"value": "<boolean>",
															"description": "If set to 'true' all users, including system users are returned. System users cannot be deleted or updated."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"href\": \"<string>\",\n      \"id\": \"<string>\",\n      \"properties\": {\n        \"username\": \"<string>\",\n        \"system\": \"<boolean>\"\n      },\n      \"type\": \"cluster\",\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<uuid>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"resourceURN\": \"<string>\"\n      }\n    },\n    {\n      \"href\": \"<string>\",\n      \"id\": \"<string>\",\n      \"properties\": {\n        \"username\": \"<string>\",\n        \"system\": \"<boolean>\"\n      },\n      \"type\": \"cluster\",\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<uuid>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"resourceURN\": \"<string>\"\n      }\n    }\n  ],\n  \"type\": \"cluster\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users?limit=100&offset=0&system=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														},
														{
															"key": "system",
															"value": "<boolean>",
															"description": "If set to 'true' all users, including system users are returned. System users cannot be deleted or updated."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a user",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"users"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Create a new Postgres User"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"system\": \"<boolean>\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<uuid>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"resourceURN\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"users"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "databases",
							"item": [
								{
									"name": "{databasename}",
									"item": [
										{
											"name": "Get database",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases",
														":databasename"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the cluster."
														},
														{
															"key": "databasename",
															"value": "<string>",
															"description": "(Required) The database name."
														}
													]
												},
												"description": "Retrieves a single database"
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"databases",
																":databasename"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "databasename"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<uuid>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"resourceURN\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"databases",
																":databasename"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "databasename"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Type",
															"value": "application/problem+json",
															"description": {
																"content": "application/problem+json",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete database",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases",
														":databasename"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the cluster."
														},
														{
															"key": "databasename",
															"value": "<string>",
															"description": "(Required) The database name."
														}
													]
												},
												"description": "Deletes a single database"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"databases",
																":databasename"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "databasename"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clusters/:clusterId/databases/:databasename",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clusters",
																":clusterId",
																"databases",
																":databasename"
															],
															"variable": [
																{
																	"key": "clusterId"
																},
																{
																	"key": "databasename"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Type",
															"value": "application/problem+json",
															"description": {
																"content": "application/problem+json",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List databases",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/databases?limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"databases"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element to return. Use together with 'limit' for pagination."
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Retrieves a list of databases"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases?limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"href\": \"<string>\",\n      \"id\": \"<string>\",\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\"\n      },\n      \"type\": \"database\",\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<uuid>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"resourceURN\": \"<string>\"\n      }\n    },\n    {\n      \"href\": \"<string>\",\n      \"id\": \"<string>\",\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"owner\": \"<string>\"\n      },\n      \"type\": \"collection\",\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<uuid>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"resourceURN\": \"<string>\"\n      }\n    }\n  ],\n  \"type\": \"collection\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases?limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element to return. Use together with 'limit' for pagination."
														}
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a database",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId/databases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId",
												"databases"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the cluster."
												}
											]
										},
										"description": "Create a new database"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<uuid>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"resourceURN\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clusters/:clusterId/databases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														":clusterId",
														"databases"
													],
													"variable": [
														{
															"key": "clusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Fetch a cluster",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters/:clusterId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										":clusterId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the cluster."
										}
									]
								},
								"description": "You can retrieve a PostgreSQL cluster by using its ID. This value can be\nfound in the response body when a PostgreSQL cluster is created or when\nyou GET a list of PostgreSQL clusters.\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"cluster\",\n  \"id\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"postgresVersion\": \"<string>\",\n    \"location\": \"<string>\",\n    \"dnsName\": \"<string>\",\n    \"backupLocation\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Sunday\"\n    },\n    \"synchronizationMode\": \"STRICTLY_SYNCHRONOUS\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Patch a cluster",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"displayName\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Friday\"\n    },\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters/:clusterId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										":clusterId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the cluster."
										}
									]
								},
								"description": "Patch attributes of a PostgreSQL cluster."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"displayName\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Friday\"\n    },\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"cluster\",\n  \"id\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"postgresVersion\": \"<string>\",\n    \"location\": \"<string>\",\n    \"dnsName\": \"<string>\",\n    \"backupLocation\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Sunday\"\n    },\n    \"synchronizationMode\": \"STRICTLY_SYNCHRONOUS\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"displayName\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Friday\"\n    },\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a cluster",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters/:clusterId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										":clusterId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the cluster."
										}
									]
								},
								"description": "Delete a PostgreSQL cluster."
							},
							"response": [
								{
									"name": "The deleted cluster with `metadata.state` set to \"DESTROYING\".\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"cluster\",\n  \"id\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"postgresVersion\": \"<string>\",\n    \"location\": \"<string>\",\n    \"dnsName\": \"<string>\",\n    \"backupLocation\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Sunday\"\n    },\n    \"synchronizationMode\": \"STRICTLY_SYNCHRONOUS\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "backups",
					"item": [
						{
							"name": "{backupId}",
							"item": [
								{
									"name": "Fetch a cluster backup",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/backups/:backupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												"backups",
												":backupId"
											],
											"variable": [
												{
													"key": "backupId",
													"value": "<string>",
													"description": "(Required) The unique ID of the backup."
												}
											]
										},
										"description": "Retrieve a PostgreSQL cluster backup by using its ID. This value can be\nfound when you GET a list of PostgreSQL cluster backups.\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/backups/:backupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														"backups",
														":backupId"
													],
													"variable": [
														{
															"key": "backupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"database\",\n  \"id\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"DESTROYING\"\n  },\n  \"properties\": {\n    \"id\": \"<string>\",\n    \"clusterId\": \"<string>\",\n    \"version\": \"<string>\",\n    \"isActive\": \"<boolean>\",\n    \"earliestRecoveryTargetTime\": \"<dateTime>\",\n    \"size\": \"<integer>\",\n    \"location\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clusters/backups/:backupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clusters",
														"backups",
														":backupId"
													],
													"variable": [
														{
															"key": "backupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Type",
													"value": "application/problem+json",
													"description": {
														"content": "application/problem+json",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List cluster backups",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters/backups?limit=100&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										"backups"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element to return. Use together with 'limit' for pagination."
										}
									]
								},
								"description": "Retrieves a list of all PostgreSQL cluster backups."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/backups?limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												"backups"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element to return. Use together with 'limit' for pagination."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"collection\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"DEGRADED\"\n      },\n      \"properties\": {\n        \"id\": \"<string>\",\n        \"clusterId\": \"<string>\",\n        \"version\": \"<string>\",\n        \"isActive\": \"<boolean>\",\n        \"earliestRecoveryTargetTime\": \"<dateTime>\",\n        \"size\": \"<integer>\",\n        \"location\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"collection\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"properties\": {\n        \"id\": \"<string>\",\n        \"clusterId\": \"<string>\",\n        \"version\": \"<string>\",\n        \"isActive\": \"<boolean>\",\n        \"earliestRecoveryTargetTime\": \"<dateTime>\",\n        \"size\": \"<integer>\",\n        \"location\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": 0,\n  \"limit\": 100,\n  \"links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/backups?limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												"backups"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element to return. Use together with 'limit' for pagination."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "postgresversions",
					"item": [
						{
							"name": "List all PostgreSQL versions",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters/postgresversions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										"postgresversions"
									]
								},
								"description": "Retrieves a list of all available PostgreSQL versions."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/postgresversions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												"postgresversions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/postgresversions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												"postgresversions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List clusters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clusters?limit=100&offset=0&filter.name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusters"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element to return. Use together with 'limit' for pagination."
								},
								{
									"key": "filter.name",
									"value": "<string>",
									"description": "Response filter to list only the PostgreSQL clusters that contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
								}
							]
						},
						"description": "Retrieves a list of PostgreSQL clusters."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters?limit=100&offset=0&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element to return. Use together with 'limit' for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only the PostgreSQL clusters that contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"database\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"type\": \"backup\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"properties\": {\n        \"displayName\": \"<string>\",\n        \"postgresVersion\": \"<string>\",\n        \"location\": \"<string>\",\n        \"dnsName\": \"<string>\",\n        \"backupLocation\": \"<string>\",\n        \"instances\": \"<integer>\",\n        \"ram\": \"<integer>\",\n        \"cores\": \"<integer>\",\n        \"storageSize\": \"<integer>\",\n        \"storageType\": \"SSD\",\n        \"connections\": [\n          {\n            \"datacenterId\": \"<string>\",\n            \"lanId\": \"<string>\",\n            \"cidr\": \"<string>\"\n          }\n        ],\n        \"maintenanceWindow\": {\n          \"time\": \"<string>\",\n          \"dayOfTheWeek\": \"Wednesday\"\n        },\n        \"synchronizationMode\": \"STRICTLY_SYNCHRONOUS\",\n        \"connectionPooler\": {\n          \"enabled\": \"<boolean>\",\n          \"poolMode\": \"session\"\n        }\n      }\n    },\n    {\n      \"type\": \"backup\",\n      \"id\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"AVAILABLE\"\n      },\n      \"properties\": {\n        \"displayName\": \"<string>\",\n        \"postgresVersion\": \"<string>\",\n        \"location\": \"<string>\",\n        \"dnsName\": \"<string>\",\n        \"backupLocation\": \"<string>\",\n        \"instances\": \"<integer>\",\n        \"ram\": \"<integer>\",\n        \"cores\": \"<integer>\",\n        \"storageSize\": \"<integer>\",\n        \"storageType\": \"HDD\",\n        \"connections\": [\n          {\n            \"datacenterId\": \"<string>\",\n            \"lanId\": \"<string>\",\n            \"cidr\": \"<string>\"\n          }\n        ],\n        \"maintenanceWindow\": {\n          \"time\": \"<string>\",\n          \"dayOfTheWeek\": \"Sunday\"\n        },\n        \"synchronizationMode\": \"ASYNCHRONOUS\",\n        \"connectionPooler\": {\n          \"enabled\": \"<boolean>\",\n          \"poolMode\": \"session\"\n        }\n      }\n    }\n  ],\n  \"offset\": 0,\n  \"limit\": 100,\n  \"links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters?limit=100&offset=0&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with 'offset' for pagination."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element to return. Use together with 'limit' for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only the PostgreSQL clusters that contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": {
										"content": "application/problem+json",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a cluster",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD Standard\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"location\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"synchronizationMode\": \"ASYNCHRONOUS\",\n    \"backupLocation\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Saturday\"\n    },\n    \"fromBackup\": {\n      \"backupId\": \"<string>\",\n      \"recoveryTargetTime\": \"<dateTime>\"\n    },\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"session\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusters"
							]
						},
						"description": "Creates a new PostgreSQL cluster.\nIf the `fromBackup` field is populated, the new cluster will be created\nbased on the given backup.\n"
					},
					"response": [
						{
							"name": "The created cluster is returned with `metadata.state` set to \"BUSY\".\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD Standard\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"location\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"synchronizationMode\": \"ASYNCHRONOUS\",\n    \"backupLocation\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Saturday\"\n    },\n    \"fromBackup\": {\n      \"backupId\": \"<string>\",\n      \"recoveryTargetTime\": \"<dateTime>\"\n    },\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"session\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"cluster\",\n  \"id\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"postgresVersion\": \"<string>\",\n    \"location\": \"<string>\",\n    \"dnsName\": \"<string>\",\n    \"backupLocation\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Sunday\"\n    },\n    \"synchronizationMode\": \"STRICTLY_SYNCHRONOUS\",\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"transaction\"\n    }\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEGRADED\"\n  },\n  \"properties\": {\n    \"postgresVersion\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD Standard\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"location\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"synchronizationMode\": \"ASYNCHRONOUS\",\n    \"backupLocation\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Saturday\"\n    },\n    \"fromBackup\": {\n      \"backupId\": \"<string>\",\n      \"recoveryTargetTime\": \"<dateTime>\"\n    },\n    \"connectionPooler\": {\n      \"enabled\": \"<boolean>\",\n      \"poolMode\": \"session\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": {
										"content": "application/problem+json",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "versions",
			"item": [
				{
					"name": "PostgreSQL versions for new clusters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"versions"
							]
						},
						"description": "Retrieves a list of available PostgreSQL versions for new clusters."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"versions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": {
										"content": "application/problem+json",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "infos",
			"item": [
				{
					"name": "version",
					"item": [
						{
							"name": "Get the current API version",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/infos/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"infos",
										"version"
									]
								},
								"description": "Retrieves the current version of the responding API."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/infos/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"infos",
												"version"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"swaggerUrl\": \"<string>\"\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/infos/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"infos",
												"version"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "versions",
					"item": [
						{
							"name": "Fetch all API versions",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/infos/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"infos",
										"versions"
									]
								},
								"description": "Retrieves all available versions of the responding API."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/infos/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"infos",
												"versions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"swaggerUrl\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"swaggerUrl\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error),\n402 (trial access), 403 (insufficient permissions), 404 (not found),\n405 (unsupported HTTP method), 415 (unsupported content type,\n422 (validation error), 429 (request rate limit exceeded),\n5",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/infos/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"infos",
												"versions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json",
											"description": {
												"content": "application/problem+json",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.ionos.com/databases/postgresql"
		}
	]
}