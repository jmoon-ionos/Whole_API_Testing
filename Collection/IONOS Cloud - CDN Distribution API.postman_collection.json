{
	"info": {
		"_postman_id": "2cfed083-20d2-4fa2-bea5-9fb095d36aff",
		"name": "IONOS Cloud - CDN Distribution API",
		"description": "This API manages CDN distributions.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "distributions",
			"item": [
				{
					"name": "{distributionId}",
					"item": [
						{
							"name": "Retrieve Distribution",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions/:distributionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions",
										":distributionId"
									],
									"variable": [
										{
											"key": "distributionId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Distribution."
										}
									]
								},
								"description": "Returns the Distribution by ID."
							},
							"response": [
								{
									"name": "Getting Distribution was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"distribution\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"publicEndpointIpv4\": \"<ipv4>\",\n    \"publicEndpointIpv6\": \"<ipv6>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"domain\": \"p.p.GaV1ZK2lhe9Om4.R8FPvL5RII03GSpesA0GCi9kycQjx0fphuhLBpHQwb7B8n.MPrWELFSi3YwbBrGZoZDzVCMgylCFEsWNDvjJDncq8tXiRHh9Iw38NEffrW.dNEmPStJBYEhlkiqPeT.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/n2jV]]]]]\",\n        \"upstream\": {\n          \"host\": \"3r1oCdw1.GfwhCyERtZFKNOTVe5vLj9VCTs-rfAXhLxWey2vRAatkGwlydckCWb.l.j.mnHiKgNwdi\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"distribution\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"AZ\",\n              \"VA\"\n            ]\n          }\n        },\n        \"scheme\": \"https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Ensure Distribution",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions/:distributionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions",
										":distributionId"
									],
									"variable": [
										{
											"key": "distributionId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Distribution."
										}
									]
								},
								"description": "Ensures that the Distribution with the provided ID is created or modified.\nThe full Distribution needs to be provided to ensure\n(either update or create) the Distribution. Non present data will\nonly be filled with defaults or left empty, but not take\nprevious values into consideration.\n"
							},
							"response": [
								{
									"name": "Distribution successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"distribution\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"publicEndpointIpv4\": \"<ipv4>\",\n    \"publicEndpointIpv6\": \"<ipv6>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"domain\": \"p.p.GaV1ZK2lhe9Om4.R8FPvL5RII03GSpesA0GCi9kycQjx0fphuhLBpHQwb7B8n.MPrWELFSi3YwbBrGZoZDzVCMgylCFEsWNDvjJDncq8tXiRHh9Iw38NEffrW.dNEmPStJBYEhlkiqPeT.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/n2jV]]]]]\",\n        \"upstream\": {\n          \"host\": \"3r1oCdw1.GfwhCyERtZFKNOTVe5vLj9VCTs-rfAXhLxWey2vRAatkGwlydckCWb.l.j.mnHiKgNwdi\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"distribution\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"AZ\",\n              \"VA\"\n            ]\n          }\n        },\n        \"scheme\": \"https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "Distribution successfully ensured.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"distribution\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"publicEndpointIpv4\": \"<ipv4>\",\n    \"publicEndpointIpv6\": \"<ipv6>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"domain\": \"p.p.GaV1ZK2lhe9Om4.R8FPvL5RII03GSpesA0GCi9kycQjx0fphuhLBpHQwb7B8n.MPrWELFSi3YwbBrGZoZDzVCMgylCFEsWNDvjJDncq8tXiRHh9Iw38NEffrW.dNEmPStJBYEhlkiqPeT.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/n2jV]]]]]\",\n        \"upstream\": {\n          \"host\": \"3r1oCdw1.GfwhCyERtZFKNOTVe5vLj9VCTs-rfAXhLxWey2vRAatkGwlydckCWb.l.j.mnHiKgNwdi\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"distribution\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"AZ\",\n              \"VA\"\n            ]\n          }\n        },\n        \"scheme\": \"https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Distribution",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions/:distributionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions",
										":distributionId"
									],
									"variable": [
										{
											"key": "distributionId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Distribution."
										}
									]
								},
								"description": "Deletes the specified Distribution."
							},
							"response": [
								{
									"name": "Deleting Distribution was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/distributions/:distributionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"distributions",
												":distributionId"
											],
											"variable": [
												{
													"key": "distributionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all Distributions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"distributions"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								},
								{
									"key": "filter.domain",
									"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
									"description": "filters resources by domain."
								},
								{
									"key": "filter.state",
									"value": "BUSY",
									"description": "filters resources by state."
								}
							]
						},
						"description": "This endpoint enables retrieving all Distributions using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested Distributions successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"distribution\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"publicEndpointIpv4\": \"<ipv4>\",\n        \"publicEndpointIpv6\": \"<ipv6>\",\n        \"message\": \"<string>\"\n      },\n      \"properties\": {\n        \"domain\": \"c0cnVbWy9YYF8exIw-Ib4tivFublp5xpwcfFKekQCaHykRg9Iddt-JQSYbS.4TwOIgfXR7LbAk5S0091NV7DkI.FHxm0f2y05z7ufUKp8TPay45M0X.P.u.zQLeBU02zWJSPv-5.Y.EqgcnmbLkaLvsOMJJfHLpqChrxibOFgwTCHPUhYCOl\",\n        \"routingRules\": [\n          {\n            \"prefix\": \"/E4E]]\",\n            \"upstream\": {\n              \"host\": \"N.EAG.b.4l4FACPhqMMkUBPGtRTug7F7Uv.iZVVmBVRbWtoRhFRtGcNf\",\n              \"caching\": \"<boolean>\",\n              \"waf\": \"<boolean>\",\n              \"rateLimitClass\": \"R50\",\n              \"sniMode\": \"origin\",\n              \"geoRestrictions\": {\n                \"blockList\": [\n                  \"JP\",\n                  \"LI\"\n                ]\n              }\n            },\n            \"scheme\": \"https\"\n          }\n        ],\n        \"certificateId\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"distribution\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"publicEndpointIpv4\": \"<ipv4>\",\n        \"publicEndpointIpv6\": \"<ipv6>\",\n        \"message\": \"<string>\"\n      },\n      \"properties\": {\n        \"domain\": \"GMdj2uaHCG-U1zS6XcU9ApoDO1hsXP3GpqbyM3sFOCznjL3rC6XUJQkGsPeL.2HEtRfs8xYJFjYTykYp4izpcZ2YuRK63Sp9sSBpKLYOvvd8.zKvDztDrYDrERSnGswfvRNbfmslnhUiEkRrxFXrzCsLWNgmXzvcJ\",\n        \"routingRules\": [\n          {\n            \"prefix\": \"/UAxb-BEqQWqMna]]]]]]]\",\n            \"upstream\": {\n              \"host\": \"m.d4UcxbxE83EKsa6pIyd5C4md0UGrQ5Pjb.QUhmZkGpFMUbIYBYquHUQnOJSlzcBR\",\n              \"caching\": \"<boolean>\",\n              \"waf\": \"<boolean>\",\n              \"rateLimitClass\": \"R50\",\n              \"sniMode\": \"distribution\",\n              \"geoRestrictions\": {\n                \"blockList\": [\n                  \"PA\",\n                  \"WS\"\n                ]\n              }\n            },\n            \"scheme\": \"http/https\"\n          }\n        ],\n        \"certificateId\": \"<uuid>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/distributions?offset=0&limit=100&filter.domain=OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr&filter.state=BUSY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.domain",
											"value": "OVG9NbLKfz7gplTAF55XbPix9a8sAy7qPIhYHi5I46PWb2waLUnzedcCd6.HjEMRipdy1z7wcEDBG83BjML3l7pqaIcSaR7fqC.5.DaZJYEKJxh9hwZ7RK7dxmG3HbQT.Cp-S4F.byu6ryfraxmLQSYRYtN1MwpIvcA.1j7.7xeLPRC10-Ar1UJJWKL48TSVj2sYtdD7y7xVczVRV1ljfHCR9XisEa77JsGN0.VdXMjgX0Elj6l86Fy680tlr",
											"description": "filters resources by domain."
										},
										{
											"key": "filter.state",
											"value": "BUSY",
											"description": "filters resources by state."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Distribution",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/distributions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"distributions"
							]
						},
						"description": "Creates a new Distribution.\n\nThe full Distribution needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "Distribution successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"distribution\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"publicEndpointIpv4\": \"<ipv4>\",\n    \"publicEndpointIpv6\": \"<ipv6>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"domain\": \"p.p.GaV1ZK2lhe9Om4.R8FPvL5RII03GSpesA0GCi9kycQjx0fphuhLBpHQwb7B8n.MPrWELFSi3YwbBrGZoZDzVCMgylCFEsWNDvjJDncq8tXiRHh9Iw38NEffrW.dNEmPStJBYEhlkiqPeT.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/n2jV]]]]]\",\n        \"upstream\": {\n          \"host\": \"3r1oCdw1.GfwhCyERtZFKNOTVe5vLj9VCTs-rfAXhLxWey2vRAatkGwlydckCWb.l.j.mnHiKgNwdi\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"distribution\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"AZ\",\n              \"VA\"\n            ]\n          }\n        },\n        \"scheme\": \"https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"domain\": \"RvSaAhjb3fasOkYe3fn.mLKp3QCSYBaCG8xfTUpT8FAb8q.VAE1dr1fGeI-BOlMfZpXYc27RgMt8DbTYL9Hpv1NUz8smuGovIyuc3d3EKp4U.O.3QZvvX-q0KXMusSizvZxP5WoCZM6AwS3s6ka.O.D.x.B.pmqUO998ks4ffkPhfiJ-HgflEFzhOJMsB13y8YQtt-DIUC.chQgVmEInAASrZ.\",\n    \"routingRules\": [\n      {\n        \"prefix\": \"/NX3V=KvVCS62]]]]]]]]\",\n        \"upstream\": {\n          \"host\": \"k.9XLPTdw1DgbD1qvICRTK5zkJXw4QAd4FV.WOfWjsnmVSveNKqTZcuHIOVNxnVZt\",\n          \"caching\": \"<boolean>\",\n          \"waf\": \"<boolean>\",\n          \"rateLimitClass\": \"R10\",\n          \"sniMode\": \"origin\",\n          \"geoRestrictions\": {\n            \"blockList\": [\n              \"CH\",\n              \"BN\"\n            ]\n          }\n        },\n        \"scheme\": \"http/https\"\n      }\n    ],\n    \"certificateId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"ullamco0fa\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/distributions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"distributions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "ips",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve EdgeServerIpInfo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the EdgeServerIpInfo."
										}
									]
								},
								"description": "Returns the EdgeServerIpInfo by ID."
							},
							"response": [
								{
									"name": "Getting EdgeServerIpInfo was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"edgeserveripinfo\",\n  \"href\": \"<string>\",\n  \"metadata\": {},\n  \"properties\": {\n    \"type\": \"ipv4\",\n    \"cidr\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ips/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ips",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all Ips",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ips?offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ips"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "This endpoint enables retrieving all Ips using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested Ips successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"edgeserveripinfo\",\n      \"href\": \"<string>\",\n      \"metadata\": {},\n      \"properties\": {\n        \"type\": \"ipv4\",\n        \"cidr\": {\n          \"format\": \"ipv4\"\n        },\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"edgeserveripinfo\",\n      \"href\": \"<string>\",\n      \"metadata\": {},\n      \"properties\": {\n        \"type\": \"ipv6\",\n        \"cidr\": {\n          \"format\": \"ipv4\"\n        },\n        \"description\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ips?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ips"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://cdn.de-fra.ionos.com"
		}
	]
}