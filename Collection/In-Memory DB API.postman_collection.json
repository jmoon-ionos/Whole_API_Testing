{
	"info": {
		"_postman_id": "616417de-2e4e-4617-8c87-f4a3f3735e79",
		"name": "In-Memory DB API",
		"description": "API description for the IONOS In-Memory DB\n\nContact Support:\n Name: IONOS Cloud Support\n Email: support@cloud.ionos.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "replicasets",
			"item": [
				{
					"name": "{replicasetId}",
					"item": [
						{
							"name": "Retrieve ReplicaSet",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets/:replicasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets",
										":replicasetId"
									],
									"variable": [
										{
											"key": "replicasetId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the ReplicaSet."
										}
									]
								},
								"description": "Returns the ReplicaSet by ID."
							},
							"response": [
								{
									"name": "Getting ReplicaSet was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"replicaset\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"dnsName\": \"<string>\",\n    \"state\": \"BUSY\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"<integer>\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"95rehcEgvv\",\n      \"password\": 30150341.0020985\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Ensure ReplicaSet",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets/:replicasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets",
										":replicasetId"
									],
									"variable": [
										{
											"key": "replicasetId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the ReplicaSet."
										}
									]
								},
								"description": "Ensures that the ReplicaSet with the provided ID is created or modified.\nThe full ReplicaSet needs to be provided to ensure\n(either update or create) the ReplicaSet. Non present data will\nonly be filled with defaults or left empty, but not take\nprevious values into consideration.\n"
							},
							"response": [
								{
									"name": "ReplicaSet successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"replicaset\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"dnsName\": \"<string>\",\n    \"state\": \"BUSY\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"<integer>\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"95rehcEgvv\",\n      \"password\": 30150341.0020985\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "ReplicaSet successfully ensured.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"replicaset\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"dnsName\": \"<string>\",\n    \"state\": \"BUSY\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"<integer>\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"95rehcEgvv\",\n      \"password\": 30150341.0020985\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": true\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"iXOpwtrKN0LN60n\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"laboris30_\": -28781210.42265986\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete ReplicaSet",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets/:replicasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets",
										":replicasetId"
									],
									"variable": [
										{
											"key": "replicasetId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the ReplicaSet."
										}
									]
								},
								"description": "Deletes the specified ReplicaSet."
							},
							"response": [
								{
									"name": "Deleting ReplicaSet was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/replicasets/:replicasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replicasets",
												":replicasetId"
											],
											"variable": [
												{
													"key": "replicasetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all ReplicaSet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"replicasets"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								},
								{
									"key": "filter.name",
									"value": "<string>",
									"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
								}
							]
						},
						"description": "This endpoint enables retrieving all ReplicaSet using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested ReplicaSet successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"replicaset\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"dnsName\": \"<string>\",\n        \"state\": \"BUSY\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"properties\": {\n        \"displayName\": \"<string>\",\n        \"version\": \"<string>\",\n        \"replicas\": \"<integer>\",\n        \"resources\": {\n          \"cores\": \"<integer>\",\n          \"ram\": \"<integer>\",\n          \"storage\": \"<integer>\"\n        },\n        \"persistenceMode\": \"None\",\n        \"evictionPolicy\": \"allkeys-lru\",\n        \"connections\": [\n          {\n            \"datacenterId\": \"<string>\",\n            \"lanId\": \"<string>\",\n            \"cidr\": \"<string>\"\n          }\n        ],\n        \"credentials\": {\n          \"username\": \"Oqjye9X5c4eB\",\n          \"password\": -11372961.370926544\n        },\n        \"maintenanceWindow\": {\n          \"time\": \"<string>\",\n          \"dayOfTheWeek\": \"Monday\"\n        },\n        \"backup\": {\n          \"location\": \"<string>\"\n        },\n        \"initialSnapshotId\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"replicaset\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"dnsName\": \"<string>\",\n        \"state\": \"UNKNOWN\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\"\n      },\n      \"properties\": {\n        \"displayName\": \"<string>\",\n        \"version\": \"<string>\",\n        \"replicas\": \"<integer>\",\n        \"resources\": {\n          \"cores\": \"<integer>\",\n          \"ram\": \"<integer>\",\n          \"storage\": \"<integer>\"\n        },\n        \"persistenceMode\": \"None\",\n        \"evictionPolicy\": \"allkeys-lru\",\n        \"connections\": [\n          {\n            \"datacenterId\": \"<string>\",\n            \"lanId\": \"<string>\",\n            \"cidr\": \"<string>\"\n          }\n        ],\n        \"credentials\": {\n          \"username\": \"CENkaUw0YhZ\",\n          \"password\": \"eu cupidatat irure\"\n        },\n        \"maintenanceWindow\": {\n          \"time\": \"<string>\",\n          \"dayOfTheWeek\": \"Monday\"\n        },\n        \"backup\": {\n          \"location\": \"<string>\"\n        },\n        \"initialSnapshotId\": \"<uuid>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/replicasets?offset=0&limit=100&filter.name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create ReplicaSet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/replicasets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"replicasets"
							]
						},
						"description": "Creates a new ReplicaSet.\n\nThe full ReplicaSet needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "ReplicaSet successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"replicaset\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"dnsName\": \"<string>\",\n    \"state\": \"BUSY\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"<integer>\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"95rehcEgvv\",\n      \"password\": 30150341.0020985\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Wednesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"displayName\": \"<string>\",\n    \"version\": \"<string>\",\n    \"replicas\": \"<integer>\",\n    \"resources\": {\n      \"cores\": \"<integer>\",\n      \"ram\": \"<integer>\",\n      \"storage\": \"laborum consectetur sint fugiat\"\n    },\n    \"persistenceMode\": \"None\",\n    \"evictionPolicy\": \"allkeys-lru\",\n    \"connections\": [\n      {\n        \"datacenterId\": \"<string>\",\n        \"lanId\": \"<string>\",\n        \"cidr\": \"<string>\"\n      }\n    ],\n    \"credentials\": {\n      \"username\": \"s3N4k\",\n      \"password\": \"<string>\"\n    },\n    \"maintenanceWindow\": {\n      \"time\": \"<string>\",\n      \"dayOfTheWeek\": \"Tuesday\"\n    },\n    \"backup\": {\n      \"location\": \"<string>\"\n    },\n    \"initialSnapshotId\": \"<uuid>\"\n  },\n  \"metadata\": {\n    \"anim_35\": 89979354,\n    \"fugiat7d\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/replicasets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replicasets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "snapshots",
			"item": [
				{
					"name": "{snapshotId}",
					"item": [
						{
							"name": "restores",
							"item": [
								{
									"name": "{restoreId}",
									"item": [
										{
											"name": "Retrieve Restore",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores",
														":restoreId"
													],
													"variable": [
														{
															"key": "snapshotId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the Snapshot."
														},
														{
															"key": "restoreId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the Restore."
														}
													]
												},
												"description": "Returns the Restore by ID."
											},
											"response": [
												{
													"name": "Getting Restore was successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"restore\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\",\n    \"restoreTime\": \"<dateTime>\",\n    \"restoredSnapshotId\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}"
												},
												{
													"name": "### Bad Request\nThe request send to the API was malformed.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Found\nThe resource that was requested could not be found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/restores/:restoreId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"restores",
																":restoreId"
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "restoreId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve all Restore",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId",
												"restores"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with offset for pagination."
												},
												{
													"key": "filter.name",
													"value": "<string>",
													"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
												}
											],
											"variable": [
												{
													"key": "snapshotId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the Snapshot."
												}
											]
										},
										"description": "This endpoint enables retrieving all Restore using\npagination and optional filters.\n"
									},
									"response": [
										{
											"name": "Returned all requested Restore successfully.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"restore\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\",\n        \"restoreTime\": \"<dateTime>\",\n        \"restoredSnapshotId\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"replicasetId\": \"<uuid>\",\n        \"displayName\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"restore\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\",\n        \"restoreTime\": \"<dateTime>\",\n        \"restoredSnapshotId\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"replicasetId\": \"<uuid>\",\n        \"displayName\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores?offset=0&limit=100&filter.name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Response filter to list only items contain\nthe specified name. The value is case insensitive and matched on the\n'displayName' field.\n"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Restore",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId",
												"restores"
											],
											"variable": [
												{
													"key": "snapshotId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the Snapshot."
												}
											]
										},
										"description": "Creates a new Restore.\n\nThe full Restore needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
									},
									"response": [
										{
											"name": "Restore successfully created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"restore\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\",\n    \"restoreTime\": \"<dateTime>\",\n    \"restoredSnapshotId\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"replicasetId\": \"<uuid>\",\n    \"displayName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"metadata\": {\n    \"exercitation_132\": 92112362,\n    \"dolore86\": \"minim est ex\",\n    \"pariatur_d\": 60337067.491553366,\n    \"consectetur_74c\": -35962423.875394344\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/restores",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"restores"
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve Snapshot",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshotId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshotId"
									],
									"variable": [
										{
											"key": "snapshotId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Snapshot."
										}
									]
								},
								"description": "Returns the Snapshot by ID."
							},
							"response": [
								{
									"name": "Getting Snapshot was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"datacenterId\": \"<uuid>\",\n    \"replicasetId\": \"<uuid>\",\n    \"state\": \"FAILED\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"message\": \"<string>\",\n    \"snapshotTime\": \"<dateTime>\"\n  },\n  \"properties\": {}\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all Snapshot",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "This endpoint enables retrieving all Snapshot using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested Snapshot successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"datacenterId\": \"<uuid>\",\n        \"replicasetId\": \"<uuid>\",\n        \"state\": \"FAILED\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\",\n        \"snapshotTime\": \"<dateTime>\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"datacenterId\": \"<uuid>\",\n        \"replicasetId\": \"<uuid>\",\n        \"state\": \"FAILED\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"message\": \"<string>\",\n        \"snapshotTime\": \"<dateTime>\"\n      },\n      \"properties\": {}\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://in-memory-db.de-fra.ionos.com"
		}
	]
}