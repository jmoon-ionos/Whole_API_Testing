{
	"info": {
		"_postman_id": "f27831e7-074c-4490-910e-9a777c4eb45d",
		"name": "Container Registry service",
		"description": "## Overview\nContainer Registry service enables IONOS clients to manage docker and OCI\ncompliant registries for use by their managed Kubernetes clusters. Use a\nContainer Registry to ensure you have a privately accessed registry to\nefficiently support image pulls.\n## Changelog\n### 1.1.0\n - Added new endpoints for Repositories\n - Added new endpoints for Artifacts\n - Added new endpoints for Vulnerabilities\n - Added registry vulnerabilityScanning feature\n### 1.2.0\n - Added registry `apiSubnetAllowList`\n### 1.2.1\n - Amended `apiSubnetAllowList` Regex\n\n\nContact Support:\n Name: IONOS Cloud Support\n Email: support@cloud.ionos.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "locations",
			"item": [
				{
					"name": "Get container registry locations",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "names",
			"item": [
				{
					"name": "{name}",
					"item": [
						{
							"name": "Get container registry name availability",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "HEAD",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/names/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"names",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "hnb70qbnn-f85gj39arnhnpxfzfjrccdy86",
											"description": "(Required) The desired registry name"
										}
									]
								},
								"description": "Validate that the name is suitable to use for a new registry:\n- it uses only the characters \"a-z\", \"0-9\", or \"-\"\n- and starts with a letter and ends with a letter or number\n- and is between 3 to 63 characters in length\n- and is available"
							},
							"response": [
								{
									"name": "OK. The registry name is valid but already in use",
									"originalRequest": {
										"method": "HEAD",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/names/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"names",
												":name"
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "HEAD",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/names/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"names",
												":name"
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not found. The registry name is available and valid",
									"originalRequest": {
										"method": "HEAD",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/names/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"names",
												":name"
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "registries",
			"item": [
				{
					"name": "{registryId}",
					"item": [
						{
							"name": "artifacts",
							"item": [
								{
									"name": "Retrieve all Artifacts by Registry",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId",
												"artifacts"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with offset for pagination."
												},
												{
													"key": "filter.vulnerabilityId",
													"value": "<string>",
													"description": "Filter resources by vulnerabilityId."
												},
												{
													"key": "orderBy",
													"value": "-pullCount",
													"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
												}
											],
											"variable": [
												{
													"key": "registryId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the Registry."
												}
											]
										},
										"description": "This endpoint enables retrieving all Artifacts using\npagination and optional filters.\n"
									},
									"response": [
										{
											"name": "Returned all requested Artifacts successfully.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"artifacts\",\n  \"type\": \"collection\",\n  \"href\": \"<string>\",\n  \"offset\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"artifact\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"lastPushedAt\": \"<dateTime>\",\n        \"pushCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastScannedAt\": \"<dateTime>\",\n        \"vulnMaxSeverity\": \"<string>\",\n        \"vulnTotalScore\": \"<float>\",\n        \"vulnTotalCount\": \"<long>\",\n        \"vulnFixableCount\": \"<long>\"\n      },\n      \"properties\": {\n        \"repositoryName\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"mediaType\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"artifact\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"lastPushedAt\": \"<dateTime>\",\n        \"pushCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastScannedAt\": \"<dateTime>\",\n        \"vulnMaxSeverity\": \"<string>\",\n        \"vulnTotalScore\": \"<float>\",\n        \"vulnTotalCount\": \"<long>\",\n        \"vulnFixableCount\": \"<long>\"\n      },\n      \"properties\": {\n        \"repositoryName\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"mediaType\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/artifacts?offset=0&limit=100&filter.vulnerabilityId=<string>&orderBy=-pullCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"artifacts"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.vulnerabilityId",
															"value": "<string>",
															"description": "Filter resources by vulnerabilityId."
														},
														{
															"key": "orderBy",
															"value": "-pullCount",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "repositories",
							"item": [
								{
									"name": "{repositoryName}",
									"item": [
										{
											"name": "artifacts",
											"item": [
												{
													"name": "{digest}",
													"item": [
														{
															"name": "vulnerabilities",
															"item": [
																{
																	"name": "Retrieve all Vulnerabilities",
																	"request": {
																		"auth": {
																			"type": "apikey",
																			"apikey": [
																				{
																					"key": "key",
																					"value": "Authorization",
																					"type": "string"
																				},
																				{
																					"key": "value",
																					"value": "{{apiKey}}",
																					"type": "string"
																				},
																				{
																					"key": "in",
																					"value": "header",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest",
																				"vulnerabilities"
																			],
																			"query": [
																				{
																					"key": "offset",
																					"value": "0",
																					"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																				},
																				{
																					"key": "limit",
																					"value": "100",
																					"description": "The maximum number of elements to return. Use together with offset for pagination."
																				},
																				{
																					"key": "filter.severity",
																					"value": "<string>",
																					"description": "Filter resources by vulnerability severity."
																				},
																				{
																					"key": "filter.fixable",
																					"value": "<boolean>",
																					"description": "Filter resources by fixable (i.e. remediation action is available)"
																				},
																				{
																					"key": "orderBy",
																					"value": "-score",
																					"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																				}
																			],
																			"variable": [
																				{
																					"key": "registryId",
																					"value": "<uuid>",
																					"description": "(Required) The ID (UUID) of the Registry."
																				},
																				{
																					"key": "repositoryName",
																					"value": "<string>",
																					"description": "(Required) The Name of the Repository."
																				},
																				{
																					"key": "digest",
																					"value": "<string>",
																					"description": "(Required) The Digest of the Artifact."
																				}
																			]
																		},
																		"description": "This endpoint enables retrieving all Vulnerabilities using\npagination and optional filters.\n"
																	},
																	"response": [
																		{
																			"name": "Returned all requested Vulnerabilities successfully.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"id\": \"vulnerabilities\",\n  \"type\": \"collection\",\n  \"href\": \"<string>\",\n  \"offset\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"vulnerability\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"publishedAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"description\": \"<string>\",\n        \"dataSource\": {\n          \"id\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"fixable\": \"<boolean>\",\n        \"severity\": \"<string>\",\n        \"score\": \"<float>\",\n        \"affects\": [\n          {\n            \"type\": \"<string>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ],\n        \"recommendations\": \"<string>\",\n        \"references\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"vulnerability\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"publishedAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"description\": \"<string>\",\n        \"dataSource\": {\n          \"id\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        \"fixable\": \"<boolean>\",\n        \"severity\": \"<string>\",\n        \"score\": \"<float>\",\n        \"affects\": [\n          {\n            \"type\": \"<string>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ],\n        \"recommendations\": \"<string>\",\n        \"references\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Bad Request\nThe request send to the API was malformed.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Service Unavailable",
																			"code": 503,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest/vulnerabilities?offset=0&limit=100&filter.severity=<string>&filter.fixable=<boolean>&orderBy=-score",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"registries",
																						":registryId",
																						"repositories",
																						":repositoryName",
																						"artifacts",
																						":digest",
																						"vulnerabilities"
																					],
																					"query": [
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																						},
																						{
																							"key": "limit",
																							"value": "100",
																							"description": "The maximum number of elements to return. Use together with offset for pagination."
																						},
																						{
																							"key": "filter.severity",
																							"value": "<string>",
																							"description": "Filter resources by vulnerability severity."
																						},
																						{
																							"key": "filter.fixable",
																							"value": "<boolean>",
																							"description": "Filter resources by fixable (i.e. remediation action is available)"
																						},
																						{
																							"key": "orderBy",
																							"value": "-score",
																							"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																						}
																					],
																					"variable": [
																						{
																							"key": "registryId"
																						},
																						{
																							"key": "repositoryName"
																						},
																						{
																							"key": "digest"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Retrieve Artifact",
															"request": {
																"auth": {
																	"type": "apikey",
																	"apikey": [
																		{
																			"key": "key",
																			"value": "Authorization",
																			"type": "string"
																		},
																		{
																			"key": "value",
																			"value": "{{apiKey}}",
																			"type": "string"
																		},
																		{
																			"key": "in",
																			"value": "header",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts",
																		":digest"
																	],
																	"variable": [
																		{
																			"key": "registryId",
																			"value": "<uuid>",
																			"description": "(Required) The ID (UUID) of the Registry."
																		},
																		{
																			"key": "repositoryName",
																			"value": "<string>",
																			"description": "(Required) The Name of the Repository."
																		},
																		{
																			"key": "digest",
																			"value": "<string>",
																			"description": "(Required) The Digest of the Artifact."
																		}
																	]
																},
																"description": "Returns the Artifact by Digest."
															},
															"response": [
																{
																	"name": "Getting Artifact was successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"artifact\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"lastPushedAt\": \"<dateTime>\",\n    \"pushCount\": \"<long>\",\n    \"pullCount\": \"<long>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"lastPulledAt\": \"<dateTime>\",\n    \"lastScannedAt\": \"<dateTime>\",\n    \"vulnMaxSeverity\": \"<string>\",\n    \"vulnTotalScore\": \"<float>\",\n    \"vulnTotalCount\": \"<long>\",\n    \"vulnFixableCount\": \"<long>\"\n  },\n  \"properties\": {\n    \"repositoryName\": \"<string>\",\n    \"digest\": \"<string>\",\n    \"mediaType\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
																},
																{
																	"name": "### Bad Request\nThe request send to the API was malformed.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Not Found\nThe resource that was requested could not be found.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Service Unavailable",
																	"code": 503,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts/:digest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registries",
																				":registryId",
																				"repositories",
																				":repositoryName",
																				"artifacts",
																				":digest"
																			],
																			"variable": [
																				{
																					"key": "registryId"
																				},
																				{
																					"key": "repositoryName"
																				},
																				{
																					"key": "digest"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Retrieve all Artifacts by Repository",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName",
																"artifacts"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "The maximum number of elements to return. Use together with offset for pagination."
																},
																{
																	"key": "orderBy",
																	"value": "-lastPush",
																	"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																}
															],
															"variable": [
																{
																	"key": "registryId",
																	"value": "<uuid>",
																	"description": "(Required) The ID (UUID) of the Registry."
																},
																{
																	"key": "repositoryName",
																	"value": "<string>",
																	"description": "(Required) The Name of the Repository."
																}
															]
														},
														"description": "This endpoint enables retrieving all Artifacts using\npagination and optional filters.\n"
													},
													"response": [
														{
															"name": "Returned all requested Artifacts successfully.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"artifacts\",\n  \"type\": \"collection\",\n  \"href\": \"<string>\",\n  \"offset\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"artifact\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"lastPushedAt\": \"<dateTime>\",\n        \"pushCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastScannedAt\": \"<dateTime>\",\n        \"vulnMaxSeverity\": \"<string>\",\n        \"vulnTotalScore\": \"<float>\",\n        \"vulnTotalCount\": \"<long>\",\n        \"vulnFixableCount\": \"<long>\"\n      },\n      \"properties\": {\n        \"repositoryName\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"mediaType\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"artifact\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"lastPushedAt\": \"<dateTime>\",\n        \"pushCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastScannedAt\": \"<dateTime>\",\n        \"vulnMaxSeverity\": \"<string>\",\n        \"vulnTotalScore\": \"<float>\",\n        \"vulnTotalCount\": \"<long>\",\n        \"vulnFixableCount\": \"<long>\"\n      },\n      \"properties\": {\n        \"repositoryName\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"mediaType\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
														},
														{
															"name": "### Bad Request\nThe request send to the API was malformed.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Service Unavailable",
															"code": 503,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName/artifacts?offset=0&limit=100&orderBy=-lastPush",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registries",
																		":registryId",
																		"repositories",
																		":repositoryName",
																		"artifacts"
																	],
																	"query": [
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "The maximum number of elements to return. Use together with offset for pagination."
																		},
																		{
																			"key": "orderBy",
																			"value": "-lastPush",
																			"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
																		}
																	],
																	"variable": [
																		{
																			"key": "registryId"
																		},
																		{
																			"key": "repositoryName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve Repository",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories",
														":repositoryName"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the Registry."
														},
														{
															"key": "repositoryName",
															"value": "<string>",
															"description": "(Required) The Name of the Repository."
														}
													]
												},
												"description": "Returns the Repository by Name."
											},
											"response": [
												{
													"name": "Getting Repository was successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"repository\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"artifactCount\": \"<long>\",\n    \"pullCount\": \"<long>\",\n    \"pushCount\": \"<long>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"lastPulledAt\": \"<dateTime>\",\n    \"lastPushedAt\": \"<dateTime>\",\n    \"lastSeverity\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\"\n  }\n}"
												},
												{
													"name": "### Bad Request\nThe request send to the API was malformed.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Found\nThe resource that was requested could not be found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete repository",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories",
														":repositoryName"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
															"description": "(Required) The unique ID of the registry"
														},
														{
															"key": "repositoryName",
															"value": "72d2ar_k83ob_4viagkt3xv.svos4_9rxjri3kr-6wi5834f_ep6zy4.i14w4y-iqqo.uz4blolohs",
															"description": "(Required) The name of the repository"
														}
													]
												},
												"description": "Delete all repository contents\n\n\t\tThe registry V2 API allows manifests and blobs to be deleted individually but it is not possible to remove an entire repository.\n\t\tThis operation is provided for convenience"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/repositories/:repositoryName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"repositories",
																":repositoryName"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "repositoryName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieve all Repositories",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId",
												"repositories"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with offset for pagination."
												},
												{
													"key": "filter.name",
													"value": "<string>",
													"description": "Filter resources by name."
												},
												{
													"key": "filter.vulnerabilitySeverity",
													"value": "<string>",
													"description": "Filter resources by vulnerability severity."
												},
												{
													"key": "orderBy",
													"value": "-lastPush",
													"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
												}
											],
											"variable": [
												{
													"key": "registryId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the Registry."
												}
											]
										},
										"description": "This endpoint enables retrieving all Repositories using\npagination and optional filters.\n"
									},
									"response": [
										{
											"name": "Returned all requested Repositories successfully.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"repositories\",\n  \"type\": \"collection\",\n  \"href\": \"<string>\",\n  \"offset\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"repository\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"artifactCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"pushCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastPushedAt\": \"<dateTime>\",\n        \"lastSeverity\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"repository\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"artifactCount\": \"<long>\",\n        \"pullCount\": \"<long>\",\n        \"pushCount\": \"<long>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastPulledAt\": \"<dateTime>\",\n        \"lastPushedAt\": \"<dateTime>\",\n        \"lastSeverity\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/repositories?offset=0&limit=100&filter.name=<string>&filter.vulnerabilitySeverity=<string>&orderBy=-lastPush",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"repositories"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														},
														{
															"key": "filter.name",
															"value": "<string>",
															"description": "Filter resources by name."
														},
														{
															"key": "filter.vulnerabilitySeverity",
															"value": "<string>",
															"description": "Filter resources by vulnerability severity."
														},
														{
															"key": "orderBy",
															"value": "-lastPush",
															"description": "The field to order the results by. If not provided, the results will be ordered by the default field."
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "tokens",
							"item": [
								{
									"name": "{tokenId}",
									"item": [
										{
											"name": "Delete token",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
															"description": "(Required) The unique ID of the registry"
														},
														{
															"key": "tokenId",
															"value": "B91fABfA-EF07-6E8B-a736-A51d6CFab13c",
															"description": "(Required) The unique ID of the token"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get token information",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
															"description": "(Required) The unique ID of the registry"
														},
														{
															"key": "tokenId",
															"value": "B91fABfA-EF07-6E8B-a736-A51d6CFab13c",
															"description": "(Required) The unique ID of the token"
														}
													]
												},
												"description": "Gets all information for a specific token used to access a container registry"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"a18striFTGCFX\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update token",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expiryDate\": \"<dateTime>\",\n  \"scopes\": [\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"status\": \"disabled\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
															"description": "(Required) The unique ID of the registry"
														},
														{
															"key": "tokenId",
															"value": "B91fABfA-EF07-6E8B-a736-A51d6CFab13c",
															"description": "(Required) The unique ID of the token"
														}
													]
												},
												"description": "Update token properties, for example:\n- change status to 'enabled' or 'disabled'\n- change expiry date"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expiryDate\": \"<dateTime>\",\n  \"scopes\": [\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"status\": \"disabled\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"a18striFTGCFX\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expiryDate\": \"<dateTime>\",\n  \"scopes\": [\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"actions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"status\": \"disabled\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create or replace token",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "registryId",
															"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
															"description": "(Required) The unique ID of the registry"
														},
														{
															"key": "tokenId",
															"value": "B91fABfA-EF07-6E8B-a736-A51d6CFab13c",
															"description": "(Required) The unique ID of the token"
														}
													]
												},
												"description": "Create/replace a token\n- password is only available once in the create response\n- \"name\" cannot be changed"
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"a18striFTGCFX\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registries/:registryId/tokens/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registries",
																":registryId",
																"tokens",
																":tokenId"
															],
															"variable": [
																{
																	"key": "registryId"
																},
																{
																	"key": "tokenId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List all tokens for the container registry",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId/tokens?offset=0&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId",
												"tokens"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with limit for pagination)"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return (used together with offset for pagination)"
												}
											],
											"variable": [
												{
													"key": "registryId",
													"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
													"description": "(Required) The unique ID of the registry"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with limit for pagination)"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return (used together with offset for pagination)"
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"_links\": {\n    \"next\": \"<string>\",\n    \"self\": \"<string>\",\n    \"previous\": \"<string>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"<string>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"name\": \"WSeA3em4kaWSq1qLiQUUnYTAmQItOpveNxOHzXIQWM\",\n        \"credentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"expiryDate\": \"<dateTime>\",\n        \"scopes\": [\n          {\n            \"actions\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"actions\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"status\": \"enabled\"\n      },\n      \"href\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"<string>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"name\": \"van\",\n        \"credentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"expiryDate\": \"<dateTime>\",\n        \"scopes\": [\n          {\n            \"actions\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"actions\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"status\": \"disabled\"\n      },\n      \"href\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with limit for pagination)"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return (used together with offset for pagination)"
														}
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create token",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId",
												"tokens"
											],
											"variable": [
												{
													"key": "registryId",
													"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
													"description": "(Required) The unique ID of the registry"
												}
											]
										},
										"description": "Create a token\n- password is only available once in the POST response"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens"
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"a18striFTGCFX\",\n    \"credentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens"
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"JfSkaDJvTv1K2x8dBMRT7oYUnyeiTko7o1bkAuaXKwca1QSsGK5mLPPJskZpq1q\",\n    \"expiryDate\": \"<dateTime>\",\n    \"scopes\": [\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"actions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"status\": \"disabled\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registries/:registryId/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registries",
														":registryId",
														"tokens"
													],
													"variable": [
														{
															"key": "registryId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete registry",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/registries/:registryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries",
										":registryId"
									],
									"variable": [
										{
											"key": "registryId",
											"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
											"description": "(Required) The unique ID of the registry"
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get a registry",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/registries/:registryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries",
										":registryId"
									],
									"variable": [
										{
											"key": "registryId",
											"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
											"description": "(Required) The unique ID of the registry"
										}
									]
								},
								"description": "Get all information for a specific container registry"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"y3iu7s1mw-ug3p9b0qots61hq42569j3zuett-bph75yw3x1g9mg\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Thursday\",\n        \"Sunday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"hostname\": \"<string>\",\n    \"storageUsage\": {\n      \"bytes\": \"<long>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"8:47a:D:0::/94\",\n      \"C6de:fd:bB76::8fb:E68D/05\",\n      \"221.81.42.250\",\n      \"249.185.64.194/32\",\n      \"2.252.249.74\",\n      \"78:f2:0:6:F:adB:5ac:4/28\",\n      \"117.1.96.254\",\n      \"aF32:7::4a:5:fB:B/127\",\n      \"7.94.28.255/23\",\n      \"253.54.5.29\",\n      \"203.253.243.95\",\n      \"BEa3::0A:E:dCC:eCc:0e\",\n      \"240.0.221.135\",\n      \"112.6.251.254\",\n      \"2592::/91\",\n      \"74:fc4::3/2\",\n      \"139.0.182.152\",\n      \"66.91.249.219\",\n      \"7:e:b5f::6d8b/24\",\n      \"2.253.6.45\"\n    ]\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update the properties of a registry",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"garbageCollectionSchedule\": {\n    \"days\": [\n      \"Wednesday\",\n      \"Wednesday\"\n    ],\n    \"time\": \"<time>\"\n  },\n  \"features\": {\n    \"vulnerabilityScanning\": {\n      \"enabled\": true,\n      \"properties\": {}\n    }\n  },\n  \"apiSubnetAllowList\": [\n    \"3b:9:5D::1F01/123\",\n    \"188.103.250.251/31\",\n    \"1.160.94.9\",\n    \"::3a:1D7e:0:A0:cD:bc:5/1\",\n    \"0.252.210.6/25\",\n    \"217.227.243.207\",\n    \"22.161.142.253\",\n    \"2eEb:c981::2/103\",\n    \"E6F:3:60:4cd:08:cfB6:15:7\",\n    \"30f:898b::3aF/120\",\n    \"36.255.251.242\",\n    \"B8D:426::f42B:b1fe:68/33\",\n    \"CcB:D::bA/126\",\n    \"173.129.62.78/32\",\n    \"1.215.2.254/24\",\n    \"189.185.8.253\",\n    \"9B::B:6:1cF/0\",\n    \"69.0.251.181\",\n    \"11.185.101.194\",\n    \"253.172.181.39\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registries/:registryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries",
										":registryId"
									],
									"variable": [
										{
											"key": "registryId",
											"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
											"description": "(Required) The unique ID of the registry"
										}
									]
								},
								"description": "Update the properties of a registry\n- \"garbageCollectionSchedule\" time and days of the week for runs"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"garbageCollectionSchedule\": {\n    \"days\": [\n      \"Wednesday\",\n      \"Wednesday\"\n    ],\n    \"time\": \"<time>\"\n  },\n  \"features\": {\n    \"vulnerabilityScanning\": {\n      \"enabled\": true,\n      \"properties\": {}\n    }\n  },\n  \"apiSubnetAllowList\": [\n    \"3b:9:5D::1F01/123\",\n    \"188.103.250.251/31\",\n    \"1.160.94.9\",\n    \"::3a:1D7e:0:A0:cD:bc:5/1\",\n    \"0.252.210.6/25\",\n    \"217.227.243.207\",\n    \"22.161.142.253\",\n    \"2eEb:c981::2/103\",\n    \"E6F:3:60:4cd:08:cfB6:15:7\",\n    \"30f:898b::3aF/120\",\n    \"36.255.251.242\",\n    \"B8D:426::f42B:b1fe:68/33\",\n    \"CcB:D::bA/126\",\n    \"173.129.62.78/32\",\n    \"1.215.2.254/24\",\n    \"189.185.8.253\",\n    \"9B::B:6:1cF/0\",\n    \"69.0.251.181\",\n    \"11.185.101.194\",\n    \"253.172.181.39\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"y3iu7s1mw-ug3p9b0qots61hq42569j3zuett-bph75yw3x1g9mg\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Thursday\",\n        \"Sunday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"hostname\": \"<string>\",\n    \"storageUsage\": {\n      \"bytes\": \"<long>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"8:47a:D:0::/94\",\n      \"C6de:fd:bB76::8fb:E68D/05\",\n      \"221.81.42.250\",\n      \"249.185.64.194/32\",\n      \"2.252.249.74\",\n      \"78:f2:0:6:F:adB:5ac:4/28\",\n      \"117.1.96.254\",\n      \"aF32:7::4a:5:fB:B/127\",\n      \"7.94.28.255/23\",\n      \"253.54.5.29\",\n      \"203.253.243.95\",\n      \"BEa3::0A:E:dCC:eCc:0e\",\n      \"240.0.221.135\",\n      \"112.6.251.254\",\n      \"2592::/91\",\n      \"74:fc4::3/2\",\n      \"139.0.182.152\",\n      \"66.91.249.219\",\n      \"7:e:b5f::6d8b/24\",\n      \"2.253.6.45\"\n    ]\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"garbageCollectionSchedule\": {\n    \"days\": [\n      \"Wednesday\",\n      \"Wednesday\"\n    ],\n    \"time\": \"<time>\"\n  },\n  \"features\": {\n    \"vulnerabilityScanning\": {\n      \"enabled\": true,\n      \"properties\": {}\n    }\n  },\n  \"apiSubnetAllowList\": [\n    \"3b:9:5D::1F01/123\",\n    \"188.103.250.251/31\",\n    \"1.160.94.9\",\n    \"::3a:1D7e:0:A0:cD:bc:5/1\",\n    \"0.252.210.6/25\",\n    \"217.227.243.207\",\n    \"22.161.142.253\",\n    \"2eEb:c981::2/103\",\n    \"E6F:3:60:4cd:08:cfB6:15:7\",\n    \"30f:898b::3aF/120\",\n    \"36.255.251.242\",\n    \"B8D:426::f42B:b1fe:68/33\",\n    \"CcB:D::bA/126\",\n    \"173.129.62.78/32\",\n    \"1.215.2.254/24\",\n    \"189.185.8.253\",\n    \"9B::B:6:1cF/0\",\n    \"69.0.251.181\",\n    \"11.185.101.194\",\n    \"253.172.181.39\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create or replace a container registry",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registries/:registryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries",
										":registryId"
									],
									"variable": [
										{
											"key": "registryId",
											"value": "B2bC230c-c9d2-66cA-b004-16a2fAA23bE5",
											"description": "(Required) The unique ID of the registry"
										}
									]
								},
								"description": "Create/replace a registry to hold container images or OCI compliant\nartifacts\n**On create**\n- \"name\" must have passed validation\n- \"location\" must be one of the available location IDs\n**On update**\n- \"name\" cannot be changed\n- \"location\" cannot be changed\n**On create or update**\n- \"garbageCollectionSchedule\": time and days of the week for runs\n"
							},
							"response": [
								{
									"name": "The created container registry is returned with 'metadata.status' set to \"BUSY\".",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Location",
											"value": "<string>",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"y3iu7s1mw-ug3p9b0qots61hq42569j3zuett-bph75yw3x1g9mg\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Thursday\",\n        \"Sunday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"hostname\": \"<string>\",\n    \"storageUsage\": {\n      \"bytes\": \"<long>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"8:47a:D:0::/94\",\n      \"C6de:fd:bB76::8fb:E68D/05\",\n      \"221.81.42.250\",\n      \"249.185.64.194/32\",\n      \"2.252.249.74\",\n      \"78:f2:0:6:F:adB:5ac:4/28\",\n      \"117.1.96.254\",\n      \"aF32:7::4a:5:fB:B/127\",\n      \"7.94.28.255/23\",\n      \"253.54.5.29\",\n      \"203.253.243.95\",\n      \"BEa3::0A:E:dCC:eCc:0e\",\n      \"240.0.221.135\",\n      \"112.6.251.254\",\n      \"2592::/91\",\n      \"74:fc4::3/2\",\n      \"139.0.182.152\",\n      \"66.91.249.219\",\n      \"7:e:b5f::6d8b/24\",\n      \"2.253.6.45\"\n    ]\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registries/:registryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registries",
												":registryId"
											],
											"variable": [
												{
													"key": "registryId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List all container registries",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/registries?filter.name=<string>&limit=100&pagination.token=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registries"
							],
							"query": [
								{
									"key": "filter.name",
									"value": "<string>",
									"description": "The registry name to search for"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return (used together with pagination.token for pagination)"
								},
								{
									"key": "pagination.token",
									"value": "<string>",
									"description": "An opaque token used to iterate the set of results (used together with limit for pagination)"
								}
							]
						},
						"description": "List all managed container registries for your account"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/registries?filter.name=<string>&limit=100&pagination.token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries"
									],
									"query": [
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "The registry name to search for"
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (used together with pagination.token for pagination)"
										},
										{
											"key": "pagination.token",
											"value": "<string>",
											"description": "An opaque token used to iterate the set of results (used together with limit for pagination)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"pagination\": {\n    \"limit\": \"<integer>\",\n    \"token\": \"<string>\"\n  },\n  \"_links\": {\n    \"next\": \"<string>\",\n    \"self\": \"<string>\",\n    \"previous\": \"<string>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"<string>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"name\": \"jsysvaka5zwtb3if9lw2k-xu95y\",\n        \"location\": \"<string>\",\n        \"garbageCollectionSchedule\": {\n          \"days\": [\n            \"Sunday\",\n            \"Thursday\"\n          ],\n          \"time\": \"<time>\"\n        },\n        \"hostname\": \"<string>\",\n        \"storageUsage\": {\n          \"bytes\": \"<long>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"features\": {\n          \"vulnerabilityScanning\": {\n            \"enabled\": true,\n            \"properties\": {}\n          }\n        },\n        \"apiSubnetAllowList\": [\n          \"249.242.2.82\",\n          \"57.253.139.250\",\n          \"d07a:7eB9:Fb:927A::B3BF:bC2:A6Ad/103\",\n          \"92:bAF:677:CD24:02:2e:6:d/11\",\n          \"216.135.16.192/3\",\n          \"45.242.105.49/16\",\n          \"6d::fa:dAf1:07f:9e1:6b2:98c/117\",\n          \"Eac8:96::/127\",\n          \"231.173.1.149\",\n          \"1.253.11.251\",\n          \"f::dCf\",\n          \"249.57.7.9/31\",\n          \"29e:fD68::\",\n          \"c:5D::C0:378/103\",\n          \"af8::\",\n          \"254.3.206.84/6\",\n          \"6C:E3Bc:3::7226/105\",\n          \"ef::BB2\",\n          \"8:bf7::f8:5b:D\",\n          \"255.251.253.172\"\n        ]\n      },\n      \"href\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"metadata\": {\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"state\": \"<string>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\"\n      },\n      \"properties\": {\n        \"name\": \"rlo8nmcqp9lhs8yz95ds4449qoq3zgd2s046wzja6\",\n        \"location\": \"<string>\",\n        \"garbageCollectionSchedule\": {\n          \"days\": [\n            \"Saturday\",\n            \"Thursday\"\n          ],\n          \"time\": \"<time>\"\n        },\n        \"hostname\": \"<string>\",\n        \"storageUsage\": {\n          \"bytes\": \"<long>\",\n          \"updatedAt\": \"<dateTime>\"\n        },\n        \"features\": {\n          \"vulnerabilityScanning\": {\n            \"enabled\": true,\n            \"properties\": {}\n          }\n        },\n        \"apiSubnetAllowList\": [\n          \"0.25.1.255\",\n          \"52:b:D51:7:e:6:e4c:33E3/0\",\n          \"239.78.251.248\",\n          \"167.253.252.91\",\n          \"247.242.147.101/5\",\n          \"164.135.251.101\",\n          \"157.145.144.255/31\",\n          \"9Bf:F2E0:EC:e:1EE7:6fCa:bD:0/28\",\n          \"7E2::/00\",\n          \"C6f:E7c:4a:bb:5::/105\",\n          \"::dAc/124\",\n          \"0abb:D:5:eA9E:Ed:0f:A:D\",\n          \"F2F::C\",\n          \"33.5.253.255\",\n          \"254.2.140.89\",\n          \"250.147.252.101\",\n          \"195.244.252.5/15\",\n          \"CA:6:d4:dD0::4:d4:Ba38\",\n          \"0C3d:4b:050:09Cb:9b::28/47\",\n          \"208.150.134.95/18\"\n        ]\n      },\n      \"href\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/registries?filter.name=<string>&limit=100&pagination.token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries"
									],
									"query": [
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "The registry name to search for"
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (used together with pagination.token for pagination)"
										},
										{
											"key": "pagination.token",
											"value": "<string>",
											"description": "An opaque token used to iterate the set of results (used together with limit for pagination)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create container registry",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/registries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registries"
							]
						},
						"description": "Create a registry to hold container images or OCI compliant artifacts\n- \"name\" must have passed validation\n- \"location\" must be one of the available location IDs\n- \"garbageCollectionSchedule\" time and days of the week for runs\n- \"features\": \"vulnerabilityScanning\" default is enabled"
					},
					"response": [
						{
							"name": "The created container registry is returned with 'metadata.status' set to \"BUSY\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Location",
									"value": "<string>",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"metadata\": {\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"name\": \"y3iu7s1mw-ug3p9b0qots61hq42569j3zuett-bph75yw3x1g9mg\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Thursday\",\n        \"Sunday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"hostname\": \"<string>\",\n    \"storageUsage\": {\n      \"bytes\": \"<long>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"8:47a:D:0::/94\",\n      \"C6de:fd:bB76::8fb:E68D/05\",\n      \"221.81.42.250\",\n      \"249.185.64.194/32\",\n      \"2.252.249.74\",\n      \"78:f2:0:6:F:adB:5ac:4/28\",\n      \"117.1.96.254\",\n      \"aF32:7::4a:5:fB:B/127\",\n      \"7.94.28.255/23\",\n      \"253.54.5.29\",\n      \"203.253.243.95\",\n      \"BEa3::0A:E:dCC:eCc:0e\",\n      \"240.0.221.135\",\n      \"112.6.251.254\",\n      \"2592::/91\",\n      \"74:fc4::3/2\",\n      \"139.0.182.152\",\n      \"66.91.249.219\",\n      \"7:e:b5f::6d8b/24\",\n      \"2.253.6.45\"\n    ]\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"d6vyv-nsyoe6akbo6h53dou\",\n    \"location\": \"<string>\",\n    \"garbageCollectionSchedule\": {\n      \"days\": [\n        \"Wednesday\",\n        \"Saturday\"\n      ],\n      \"time\": \"<time>\"\n    },\n    \"features\": {\n      \"vulnerabilityScanning\": {\n        \"enabled\": true,\n        \"properties\": {}\n      }\n    },\n    \"apiSubnetAllowList\": [\n      \"F:5::236D:2414:5/03\",\n      \"4.239.4.255/31\",\n      \"253.242.57.14/31\",\n      \"207.149.216.250/32\",\n      \"FA0c::ADe:0\",\n      \"::\",\n      \"2:4::E\",\n      \"7d:57::FFe:4c1:F:F\",\n      \"C:20a:CdA:E:E2:F:EF:6E\",\n      \"::/5\",\n      \"133.39.171.243/32\",\n      \"8f8A::34a3:0:01/126\",\n      \"59::bF:79:b:21:BF\",\n      \"214.67.252.0\",\n      \"B:B8e:A::DCD3/100\",\n      \"252.2.4.115\",\n      \"133.252.7.92\",\n      \"240.6.150.176\",\n      \"210.141.254.22/30\",\n      \"e:088:8f:21:57B:DCA:E4b8:2ecc\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "vulnerabilities",
			"item": [
				{
					"name": "{vulnerabilityId}",
					"item": [
						{
							"name": "Retrieve Vulnerability",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vulnerabilities",
										":vulnerabilityId"
									],
									"variable": [
										{
											"key": "vulnerabilityId",
											"value": "<string>",
											"description": "(Required) The ID of the Vulnerability."
										}
									]
								},
								"description": "Returns the Vulnerability by ID."
							},
							"response": [
								{
									"name": "Getting Vulnerability was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"vulnerability\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"publishedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"dataSource\": {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    \"fixable\": \"<boolean>\",\n    \"severity\": \"<string>\",\n    \"score\": \"<float>\",\n    \"affects\": [\n      {\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      }\n    ],\n    \"recommendations\": \"<string>\",\n    \"references\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vulnerabilities/:vulnerabilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vulnerabilities",
												":vulnerabilityId"
											],
											"variable": [
												{
													"key": "vulnerabilityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.ionos.com/containerregistries"
		}
	]
}