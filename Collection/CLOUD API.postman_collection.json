{
	"info": {
		"_postman_id": "247cc400-3496-4cf9-bbb6-9b05d971912b",
		"name": "CLOUD API",
		"description": "\nIONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool. \n\n Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "/",
			"item": [
				{
					"name": "Get API information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Retrieves the API information such as API version."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"href\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "datacenters",
			"item": [
				{
					"name": "{datacenterId}",
					"item": [
						{
							"name": "servers",
							"item": [
								{
									"name": "{serverId}",
									"item": [
										{
											"name": "volumes",
											"item": [
												{
													"name": "{volumeId}",
													"item": [
														{
															"name": "Get Attached Volume by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes",
																		":volumeId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "volumeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the volume."
																		}
																	]
																},
																"description": "Retrieves the properties of the volume attached to the specified server."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"volumes",
																				":volumeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "volumeId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"volumes",
																				":volumeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "volumeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Detach a Volume by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes",
																		":volumeId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "volumeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the volume."
																		}
																	]
																},
																"description": "Detachs the specified volume from the server.\n\nNote that only the volume's connection to the specified server is disconnected. If you want to delete the volume, you must submit a separate request to perform the deletion."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"volumes",
																				":volumeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "volumeId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes/:volumeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"volumes",
																				":volumeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "volumeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Attached Volumes",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"volumes"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Lists all volumes attached to the specified server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"type\": \"SSD Premium\",\n        \"availabilityZone\": \"ZONE_2\",\n        \"image\": \"<string>\",\n        \"imagePassword\": \"<string>\",\n        \"imageAlias\": \"<string>\",\n        \"sshKeys\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"bus\": \"IDE\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"deviceNumber\": \"<long>\",\n        \"pciSlot\": \"<integer>\",\n        \"backupunitId\": \"<uuid>\",\n        \"userData\": \"<string>\",\n        \"bootServer\": \"<string>\",\n        \"bootOrder\": \"AUTO\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"flow-log\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"ACTIVE\"\n      }\n    },\n    {\n      \"properties\": {\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"type\": \"SSD\",\n        \"availabilityZone\": \"ZONE_3\",\n        \"image\": \"<string>\",\n        \"imagePassword\": \"<string>\",\n        \"imageAlias\": \"<string>\",\n        \"sshKeys\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"bus\": \"VIRTIO\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"deviceNumber\": \"<long>\",\n        \"pciSlot\": \"<integer>\",\n        \"backupunitId\": \"<uuid>\",\n        \"userData\": \"<string>\",\n        \"bootServer\": \"<string>\",\n        \"bootOrder\": \"AUTO\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"flow-log\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"INACTIVE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Attach a Volume to a Server",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"volumes"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Attachs an existing storage volume to the specified server.\n\nYou can attach an existing volume in the VDC to a server. To move a volume from one server to another, you must first detach the volume from the first server and attach it to the second server.\n\nIt is also possible to create and attach a volume in one step by simply providing a new volume description as a payload. The only difference is the URL; see 'Creating a Volume' for details about volumes.\n\nNote that the combined total of attached volumes and NICs cannot exceed 24 per server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/volumes?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"volumes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "cdroms",
											"item": [
												{
													"name": "{cdromId}",
													"item": [
														{
															"name": "Get Attached CD-ROM by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms",
																		":cdromId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "cdromId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the CD-ROM."
																		}
																	]
																},
																"description": "Retrieves the properties of the CD-ROM attached to the specified server."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"cdroms",
																				":cdromId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "cdromId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"imageType\": \"CDROM\",\n    \"public\": \"<boolean>\",\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cloudInit\": \"V1\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"cdroms",
																				":cdromId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "cdromId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Detach a CD-ROM by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms",
																		":cdromId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "cdromId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the CD-ROM."
																		}
																	]
																},
																"description": "Detachs the specified CD-ROM from the server.\n\nDetaching a CD-ROM deletes the CD-ROM. The image will not be deleted.\n\nNote that detaching a CD-ROM leads to a reset of the server."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"cdroms",
																				":cdromId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "cdromId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms/:cdromId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"cdroms",
																				":cdromId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "cdromId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Attached CD-ROMs ",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"cdroms"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Lists all CD-ROMs attached to the specified server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"licenceType\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"applicationType\": \"UNKNOWN\",\n        \"imageType\": \"HDD\",\n        \"public\": \"<boolean>\",\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cloudInit\": \"V1\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"licenceType\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"applicationType\": \"UNKNOWN\",\n        \"imageType\": \"HDD\",\n        \"public\": \"<boolean>\",\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cloudInit\": \"NONE\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"SUSPENDED\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Attach a CD-ROM",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"cdroms"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Attachs a CD-ROM to an existing server specified by its ID. \n\nCD-ROMs cannot be created stand-alone like volumes. They are either attached to a server or do not exist. They always have an ISO-Image associated; empty CD-ROMs can not be provisioned. It is possible to attach up to two CD-ROMs to the same server. \n\nNote that attaching a CD-ROM leads to a reset of the server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"imageType\": \"CDROM\",\n    \"public\": \"<boolean>\",\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cloudInit\": \"V1\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/cdroms?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"cdroms"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "reboot",
											"item": [
												{
													"name": "Reboot servers",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/reboot?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"reboot"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Force a hard reboot of the specified server within the data center. Don't use this method if you wish to reboot gracefully. This is an equivalent of powering down a computer and turning it back on."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/reboot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"reboot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/reboot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"reboot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "start",
											"item": [
												{
													"name": "Start an Enterprise Server by ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/start?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"start"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Starts the Enterprise Server specified by its ID.\n\n>Note that you cannot use this method to start a Cube Server.\n\nBy starting the Enterprise Server, cores and RAM are provisioned, and the billing continues.\n\nIf the server's public IPv4 address has been deallocated, a new IPv4 address will be assigned. IPv6 blocks and addresses will remain unchanged when stopping and starting a server.\n\nTo check the status of the request, you can use the 'Location' HTTP header in the response (see 'Requests' for more information)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/start?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"start"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/start?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"start"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "stop",
											"item": [
												{
													"name": "Stop an Enterprise Server by ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/stop?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"stop"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Stops the Enterprise Server specified by its ID. \n\n>Note that you cannot use this method to stop a Cube Server.\n\n By stopping the Enterprise Server, cores and RAM are freed and no longer charged.\n\nPublic IPv4 IPs that are not reserved are returned to the IPv4 pool. IPv6 blocks and addresses will remain unchanged when stopping and starting a server.\n\nTo check the status of the request, you can use the 'Location' HTTP header in the response (see 'Requests' for more information)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/stop?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"stop"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/stop?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"stop"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "suspend",
											"item": [
												{
													"name": "Suspend a Cube Server by ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/suspend?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"suspend"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Suspends the specified Cubes instance within the data center. \n\nThe instance is not deleted and allocated resources continue to be billed. You can perform this operation only for Cube Servers.\n\nTo check the status of the request, you can use the 'Location' HTTP header in the response (see 'Requests' for more information)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/suspend?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"suspend"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/suspend?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"suspend"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "resume",
											"item": [
												{
													"name": "Resume a Cube Server by ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/resume?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"resume"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Resumes a suspended Cube Server specified by its ID.\n\nSince the suspended instance was not deleted the allocated resources continue to be billed. You can perform this operation only for Cube Servers.\n\nTo check the status of the request, you can use the 'Location' HTTP header in the response (see 'Requests' for more information)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/resume?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"resume"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/resume?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"resume"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "upgrade",
											"item": [
												{
													"name": "Upgrade a Server by ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/upgrade?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"upgrade"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Upgrades the server version."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/upgrade?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"upgrade"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/upgrade?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"upgrade"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "token",
											"item": [
												{
													"name": "Get JSON Web Token",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/token?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"token"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Retrieve a JSON Web Token from the server for use in login operations (such as accessing the server's console)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/token?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"token"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"token\": \"<string>\"\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/token?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"token"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "remoteconsole",
											"item": [
												{
													"name": "Get Remote Console link",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/remoteconsole?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"remoteconsole"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Retrieve a link with a JSON Web Token for accessing the server's Remote Console."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/remoteconsole?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"remoteconsole"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"url\": \"<string>\"\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/remoteconsole?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"remoteconsole"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "nics",
											"item": [
												{
													"name": "{nicId}",
													"item": [
														{
															"name": "firewallrules",
															"item": [
																{
																	"name": "{firewallruleId}",
																	"item": [
																		{
																			"name": "Retrieve firewall rules",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules",
																						":firewallruleId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "firewallruleId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the firewall rule."
																						}
																					]
																				},
																				"description": "Retrieve the properties of the specified firewall rule."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Modify a Firewall Rule",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "PUT",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules",
																						":firewallruleId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "firewallruleId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the firewall rule."
																						}
																					]
																				},
																				"description": "Modifies the properties of the specified firewall rule."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Delete firewall rules",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules",
																						":firewallruleId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "firewallruleId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the firewall rule."
																						}
																					]
																				},
																				"description": "Delete the specified firewall rule."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": ""
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Partially modify firewall rules",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "PATCH",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules",
																						":firewallruleId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "firewallruleId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the firewall rule."
																						}
																					]
																				},
																				"description": "Update the properties of the specified firewall rule."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PATCH",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "PATCH",
																						"header": [
																							{
																								"key": "X-Contract-Number",
																								"value": "<integer>",
																								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																							},
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules/:firewallruleId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"firewallrules",
																								":firewallruleId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "firewallruleId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List firewall rules",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0&offset=0&limit=1000",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId",
																				"firewallrules"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				},
																				{
																					"key": "offset",
																					"value": "0",
																					"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																				},
																				{
																					"key": "limit",
																					"value": "1000",
																					"description": "The maximum number of elements to return (use together with offset for pagination)."
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the data center."
																				},
																				{
																					"key": "serverId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				},
																				{
																					"key": "nicId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the NIC."
																				}
																			]
																		},
																		"description": "List all firewall rules for the specified NIC."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0&offset=0&limit=1000",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						},
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																						},
																						{
																							"key": "limit",
																							"value": "1000",
																							"description": "The maximum number of elements to return (use together with offset for pagination)."
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"protocol\": \"UDP\",\n        \"name\": \"<string>\",\n        \"sourceMac\": \"<string>\",\n        \"ipVersion\": \"IPv4\",\n        \"sourceIp\": \"<string>\",\n        \"targetIp\": \"<string>\",\n        \"icmpCode\": \"<integer>\",\n        \"icmpType\": \"<integer>\",\n        \"portRangeStart\": \"<integer>\",\n        \"portRangeEnd\": \"<integer>\",\n        \"type\": \"INGRESS\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      }\n    },\n    {\n      \"properties\": {\n        \"protocol\": \"GRE\",\n        \"name\": \"<string>\",\n        \"sourceMac\": \"<string>\",\n        \"ipVersion\": \"IPv4\",\n        \"sourceIp\": \"<string>\",\n        \"targetIp\": \"<string>\",\n        \"icmpCode\": \"<integer>\",\n        \"icmpType\": \"<integer>\",\n        \"portRangeStart\": \"<integer>\",\n        \"portRangeEnd\": \"<integer>\",\n        \"type\": \"EGRESS\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"forwarding-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
																		},
																		{
																			"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0&offset=0&limit=1000",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						},
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																						},
																						{
																							"key": "limit",
																							"value": "1000",
																							"description": "The maximum number of elements to return (use together with offset for pagination)."
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Create a Firewall Rule",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId",
																				"firewallrules"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the data center."
																				},
																				{
																					"key": "serverId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				},
																				{
																					"key": "nicId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the NIC."
																				}
																			]
																		},
																		"description": "Creates a firewall rule for the specified NIC."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "Location",
																					"value": "https://s/requests/I/status",
																					"description": {
																						"content": "Callback URL to poll async operation status.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																		},
																		{
																			"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/firewallrules?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"firewallrules"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "flowlogs",
															"item": [
																{
																	"name": "{flowlogId}",
																	"item": [
																		{
																			"name": "Retrieve Flow Logs",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs",
																						":flowlogId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "flowlogId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the Flow Log."
																						}
																					]
																				},
																				"description": "Retrieve the properties of the specified Flow Log."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Modify Flow Logs",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs",
																						":flowlogId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "flowlogId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the Flow Log."
																						}
																					]
																				},
																				"description": "Modify the specified Flow Log record."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Delete Flow Logs",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs",
																						":flowlogId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "flowlogId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the Flow Log."
																						}
																					]
																				},
																				"description": "Delete the specified Flow Log."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": ""
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Partially modify Flow Logs",
																			"request": {
																				"auth": {
																					"type": "basic",
																					"basic": [
																						{
																							"key": "username",
																							"value": "{{basicAuthUsername}}",
																							"type": "string"
																						},
																						{
																							"key": "password",
																							"value": "{{basicAuthPassword}}",
																							"type": "string"
																						}
																					]
																				},
																				"method": "PATCH",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs",
																						":flowlogId"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the data center."
																						},
																						{
																							"key": "serverId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the server."
																						},
																						{
																							"key": "nicId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the NIC."
																						},
																						{
																							"key": "flowlogId",
																							"value": "<string>",
																							"description": "(Required) The unique ID of the Flow Log."
																						}
																					]
																				},
																				"description": "Update the specified Flow Log record."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PATCH",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Accepted",
																					"code": 202,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "X-RateLimit-Remaining",
																							"value": "<integer>",
																							"description": {
																								"content": "The number of requests that can still be made without triggering a failure response.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Limit",
																							"value": "<integer>",
																							"description": {
																								"content": "The average number of requests per minute allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "X-RateLimit-Burst",
																							"value": "<integer>",
																							"description": {
																								"content": "The maximum number of concurrent API requests allowed.",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "Location",
																							"value": "https://s/requests/I/status",
																							"description": {
																								"content": "Callback URL to poll async operation status.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																				},
																				{
																					"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																					"originalRequest": {
																						"method": "PATCH",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"key": "Authorization",
																								"value": "Basic <credentials>",
																								"description": "Added as a part of security scheme: basic"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs/:flowlogId?pretty=true&depth=0",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"datacenters",
																								":datacenterId",
																								"servers",
																								":serverId",
																								"nics",
																								":nicId",
																								"flowlogs",
																								":flowlogId"
																							],
																							"query": [
																								{
																									"key": "pretty",
																									"value": "true",
																									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																								},
																								{
																									"key": "depth",
																									"value": "0",
																									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																								}
																							],
																							"variable": [
																								{
																									"key": "datacenterId"
																								},
																								{
																									"key": "serverId"
																								},
																								{
																									"key": "nicId"
																								},
																								{
																									"key": "flowlogId"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List Flow Logs",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId",
																				"flowlogs"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				},
																				{
																					"key": "offset",
																					"value": "0",
																					"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																				},
																				{
																					"key": "limit",
																					"value": "1000",
																					"description": "The maximum number of elements to return (use together with offset for pagination)."
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the data center."
																				},
																				{
																					"key": "serverId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				},
																				{
																					"key": "nicId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the NIC."
																				}
																			]
																		},
																		"description": "List all the Flow Logs for the specified NIC."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						},
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																						},
																						{
																							"key": "limit",
																							"value": "1000",
																							"description": "The maximum number of elements to return (use together with offset for pagination)."
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"resource\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
																		},
																		{
																			"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						},
																						{
																							"key": "offset",
																							"value": "0",
																							"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																						},
																						{
																							"key": "limit",
																							"value": "1000",
																							"description": "The maximum number of elements to return (use together with offset for pagination)."
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Create a Flow Log",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId",
																				"flowlogs"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the data center."
																				},
																				{
																					"key": "serverId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				},
																				{
																					"key": "nicId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the NIC."
																				}
																			]
																		},
																		"description": "Adds a new Flow Log for the specified NIC."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "Location",
																					"value": "https://s/requests/I/status",
																					"description": {
																						"content": "Callback URL to poll async operation status.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																		},
																		{
																			"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/flowlogs?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"flowlogs"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "securitygroups",
															"item": [
																{
																	"name": "Attach a list of Security Groups to a NIC",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/securitygroups?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId",
																				"securitygroups"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the data center."
																				},
																				{
																					"key": "serverId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				},
																				{
																					"key": "nicId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the server."
																				}
																			]
																		},
																		"description": "Updating the list of Security Groups attached to an existing NIC specified by its ID.  Security Groups should already exist as part of the datacenter."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/securitygroups?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"securitygroups"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "Location",
																					"value": "https://s/requests/I/status",
																					"description": {
																						"content": "Callback URL to poll async operation status.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"natgateway-rule\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"ipblock\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ICMP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"node\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nic\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"ICMPv6\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
																		},
																		{
																			"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId/securitygroups?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"datacenters",
																						":datacenterId",
																						"servers",
																						":serverId",
																						"nics",
																						":nicId",
																						"securitygroups"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "datacenterId"
																						},
																						{
																							"key": "serverId"
																						},
																						{
																							"key": "nicId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Retrieve NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Retrieve the properties of the specified NIC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"BIDIRECTIONAL\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"networkloadbalancer\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Modify the properties of the specified NIC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"BIDIRECTIONAL\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"networkloadbalancer\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"BIDIRECTIONAL\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"networkloadbalancer\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Remove the specified NIC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"lan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcp\": true,\n  \"ipv6Ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"dhcpv6\": true,\n  \"firewallActive\": \"<boolean>\",\n  \"firewallType\": \"EGRESS\",\n  \"vnet\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Update the properties of the specified NIC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"lan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcp\": true,\n  \"ipv6Ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"dhcpv6\": true,\n  \"firewallActive\": \"<boolean>\",\n  \"firewallType\": \"EGRESS\",\n  \"vnet\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"lan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcp\": true,\n  \"ipv6Ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"dhcpv6\": true,\n  \"firewallActive\": \"<boolean>\",\n  \"firewallType\": \"EGRESS\",\n  \"vnet\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List NICs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"nics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "List all NICs, attached to the specified server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"BIDIRECTIONAL\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"networkloadbalancer\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"k8s\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"GRE\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"BUSY\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"GRE\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway-rule\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"loadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"TCP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"AVAILABLE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UPDATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"GRE\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"BUSY\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"VRRP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"MAINTENANCE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"EGRESS\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"gpu\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"SUSPENDED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"REJECTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DESTROYING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_SUSPENDED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"AH\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"k8s\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"VRRP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"lan\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"AVAILABLE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_SUSPENDED\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"BUSY\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"GRE\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a NIC",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"nics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Adds a NIC to the specified server. The combined total of NICs and attached volumes cannot exceed 24 per server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/nics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "labels",
											"item": [
												{
													"name": "{key}",
													"item": [
														{
															"name": "Retrieve server labels",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Retrieve the properties of the specified server label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify a Server Label",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Modifies the specified server label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete server labels",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Delete the specified server label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List server labels",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"labels"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "List all the the labels for the specified server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a Server Label",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"labels"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Adds a new label to the specified server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "securitygroups",
											"item": [
												{
													"name": "Attach a list of Security Groups to a Server",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/securitygroups?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"securitygroups"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "Updating the list of Security Groups attached to an existing server specified by its ID.  Security Groups should already exist as part of the datacenter."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/securitygroups?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"securitygroups"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"natgateway-rule\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"ipblock\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ICMP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"node\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nic\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"ICMPv6\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/securitygroups?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"securitygroups"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "gpus",
											"item": [
												{
													"name": "{gpuId}",
													"item": [
														{
															"name": "Retrieve GPUs by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus/:gpuId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"gpus",
																		":gpuId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<uuid>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "serverId",
																			"value": "<uuid>",
																			"description": "(Required) The unique ID of the server."
																		},
																		{
																			"key": "gpuId",
																			"value": "<uuid>",
																			"description": "(Required) The unique ID of the Graphics Processing Unit (GPU) card."
																		}
																	]
																},
																"description": "Retrieves a server's Graphics Processing Unit (GPU) card based on the given id."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus/:gpuId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"gpus",
																				":gpuId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "gpuId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"vendor\": \"<string>\",\n    \"type\": \"<string>\",\n    \"model\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"server\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus/:gpuId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"servers",
																				":serverId",
																				"gpus",
																				":gpuId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "serverId"
																				},
																				{
																					"key": "gpuId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List GPUs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId",
																"gpus"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "serverId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the server."
																}
															]
														},
														"description": "List the server's Graphics Processing Unit (GPU) cards"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"gpus"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"vendor\": \"<string>\",\n        \"type\": \"<string>\",\n        \"model\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"contract\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      }\n    },\n    {\n      \"properties\": {\n        \"vendor\": \"<string>\",\n        \"type\": \"<string>\",\n        \"model\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId/gpus?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"servers",
																		":serverId",
																		"gpus"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "serverId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve servers by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers",
														":serverId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "serverId",
															"value": "<string>",
															"description": "(Required) The unique ID of the server."
														}
													]
												},
												"description": "Retrieve information about the specified server within the data center, such as its configuration, provisioning status, and so on."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"ZONE_1\",\n    \"vmState\": \"RUNNING\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"id\": \"<string>\",\n  \"type\": \"s3key\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"cdroms\": {\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": \"<string>\",\n            \"size\": \"<number>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"imageType\": \"HDD\",\n            \"public\": \"<boolean>\",\n            \"imageAliases\": [\n              \"<string>\"\n            ],\n            \"cloudInit\": \"V1\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD\",\n            \"availabilityZone\": \"ZONE_3\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"EGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"GRE\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"label\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"gpus\": {\n      \"id\": \"<string>\",\n      \"type\": \"location\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Server by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers",
														":serverId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "serverId",
															"value": "<string>",
															"description": "(Required) The unique ID of the server."
														}
													]
												},
												"description": "Modifies the properties of the specified server within the data center.\n\nStarting with v5, the 'allowReboot' attribute is retired; while previously required for changing certain server properties, this behavior is now implicit, and the backend will perform this automatically. For example, in earlier versions, when the CPU family is changed, 'allowReboot' had to be set to 'true'; this is no longer required, the reboot will be performed automatically."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"ZONE_1\",\n    \"vmState\": \"RUNNING\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"id\": \"<string>\",\n  \"type\": \"s3key\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"cdroms\": {\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": \"<string>\",\n            \"size\": \"<number>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"imageType\": \"HDD\",\n            \"public\": \"<boolean>\",\n            \"imageAliases\": [\n              \"<string>\"\n            ],\n            \"cloudInit\": \"V1\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD\",\n            \"availabilityZone\": \"ZONE_3\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"EGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"GRE\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"label\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"gpus\": {\n      \"id\": \"<string>\",\n      \"type\": \"location\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete servers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0&deleteVolumes=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers",
														":serverId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "deleteVolumes",
															"value": "<boolean>",
															"description": "If true, all attached storage volumes will also be deleted."
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "serverId",
															"value": "<string>",
															"description": "(Required) The unique ID of the server."
														}
													]
												},
												"description": "Delete the specified server in your data center. The attached storage volumes will also be removed if the query parameter is set to true otherwise a separate API call must be made for these actions."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0&deleteVolumes=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "deleteVolumes",
																	"value": "<boolean>",
																	"description": "If true, all attached storage volumes will also be deleted."
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0&deleteVolumes=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "deleteVolumes",
																	"value": "<boolean>",
																	"description": "If true, all attached storage volumes will also be deleted."
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify servers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"templateUuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"cores\": \"<integer>\",\n  \"ram\": \"<integer>\",\n  \"availabilityZone\": \"ZONE_2\",\n  \"bootCdrom\": {\n    \"id\": \"<string>\",\n    \"type\": \"lan\"\n  },\n  \"bootVolume\": {\n    \"id\": \"<string>\",\n    \"type\": \"gpu\"\n  },\n  \"cpuFamily\": \"<string>\",\n  \"type\": \"<string>\",\n  \"placementGroupId\": \"<string>\",\n  \"nicMultiQueue\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers",
														":serverId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "serverId",
															"value": "<string>",
															"description": "(Required) The unique ID of the server."
														}
													]
												},
												"description": "Update the properties of the specified server within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"templateUuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"cores\": \"<integer>\",\n  \"ram\": \"<integer>\",\n  \"availabilityZone\": \"ZONE_2\",\n  \"bootCdrom\": {\n    \"id\": \"<string>\",\n    \"type\": \"lan\"\n  },\n  \"bootVolume\": {\n    \"id\": \"<string>\",\n    \"type\": \"gpu\"\n  },\n  \"cpuFamily\": \"<string>\",\n  \"type\": \"<string>\",\n  \"placementGroupId\": \"<string>\",\n  \"nicMultiQueue\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"ZONE_1\",\n    \"vmState\": \"RUNNING\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"id\": \"<string>\",\n  \"type\": \"s3key\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"cdroms\": {\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": \"<string>\",\n            \"size\": \"<number>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"imageType\": \"HDD\",\n            \"public\": \"<boolean>\",\n            \"imageAliases\": [\n              \"<string>\"\n            ],\n            \"cloudInit\": \"V1\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD\",\n            \"availabilityZone\": \"ZONE_3\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"EGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"GRE\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"label\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"gpus\": {\n      \"id\": \"<string>\",\n      \"type\": \"location\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"templateUuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"cores\": \"<integer>\",\n  \"ram\": \"<integer>\",\n  \"availabilityZone\": \"ZONE_2\",\n  \"bootCdrom\": {\n    \"id\": \"<string>\",\n    \"type\": \"lan\"\n  },\n  \"bootVolume\": {\n    \"id\": \"<string>\",\n    \"type\": \"gpu\"\n  },\n  \"cpuFamily\": \"<string>\",\n  \"type\": \"<string>\",\n  \"placementGroupId\": \"<string>\",\n  \"nicMultiQueue\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/servers/:serverId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"servers",
																":serverId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "serverId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List servers ",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"servers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all servers within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"templateUuid\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hostname\": \"<string>\",\n        \"cores\": \"<integer>\",\n        \"ram\": \"<integer>\",\n        \"availabilityZone\": \"AUTO\",\n        \"vmState\": \"SHUTDOWN\",\n        \"bootCdrom\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\"\n        },\n        \"bootVolume\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\"\n        },\n        \"cpuFamily\": \"<string>\",\n        \"type\": \"<string>\",\n        \"placementGroupId\": \"<string>\",\n        \"nicMultiQueue\": false\n      },\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"TERMINATED\"\n      },\n      \"entities\": {\n        \"cdroms\": {\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"licenceType\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": \"<string>\",\n                \"size\": \"<number>\",\n                \"cpuHotPlug\": \"<boolean>\",\n                \"cpuHotUnplug\": \"<boolean>\",\n                \"ramHotPlug\": \"<boolean>\",\n                \"ramHotUnplug\": \"<boolean>\",\n                \"nicHotPlug\": \"<boolean>\",\n                \"nicHotUnplug\": \"<boolean>\",\n                \"discVirtioHotPlug\": \"<boolean>\",\n                \"discVirtioHotUnplug\": \"<boolean>\",\n                \"discScsiHotPlug\": \"<boolean>\",\n                \"discScsiHotUnplug\": \"<boolean>\",\n                \"exposeSerial\": false,\n                \"requireLegacyBios\": true,\n                \"applicationType\": \"UNKNOWN\",\n                \"imageType\": \"CDROM\",\n                \"public\": \"<boolean>\",\n                \"imageAliases\": [\n                  \"<string>\"\n                ],\n                \"cloudInit\": \"NONE\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"volumes\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"size\": \"<number>\",\n                \"name\": \"<string>\",\n                \"type\": \"ISO\",\n                \"availabilityZone\": \"ZONE_2\",\n                \"image\": \"<string>\",\n                \"imagePassword\": \"<string>\",\n                \"imageAlias\": \"<string>\",\n                \"sshKeys\": [\n                  \"<string>\"\n                ],\n                \"bus\": \"UNKNOWN\",\n                \"licenceType\": \"<string>\",\n                \"applicationType\": \"UNKNOWN\",\n                \"cpuHotPlug\": \"<boolean>\",\n                \"ramHotPlug\": \"<boolean>\",\n                \"nicHotPlug\": \"<boolean>\",\n                \"nicHotUnplug\": \"<boolean>\",\n                \"discVirtioHotPlug\": \"<boolean>\",\n                \"discVirtioHotUnplug\": \"<boolean>\",\n                \"exposeSerial\": false,\n                \"requireLegacyBios\": true,\n                \"deviceNumber\": \"<long>\",\n                \"pciSlot\": \"<integer>\",\n                \"backupunitId\": \"<uuid>\",\n                \"userData\": \"<string>\",\n                \"bootServer\": \"<string>\",\n                \"bootOrder\": \"AUTO\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"AVAILABLE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"EGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"INACTIVE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"template\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"pcc\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"INACTIVE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"forwarding-rule\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"forwarding-rule\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"INACTIVE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"MAINTENANCE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"gpus\": {\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"vendor\": \"<string>\",\n                \"type\": \"<string>\",\n                \"model\": \"<string>\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"contract\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Server",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"servers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a server within the specified data center. You can also use this request to configure the boot volumes and connect to existing LANs at the same time."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"ZONE_1\",\n    \"vmState\": \"RUNNING\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"id\": \"<string>\",\n  \"type\": \"s3key\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"cdroms\": {\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": \"<string>\",\n            \"size\": \"<number>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"imageType\": \"HDD\",\n            \"public\": \"<boolean>\",\n            \"imageAliases\": [\n              \"<string>\"\n            ],\n            \"cloudInit\": \"V1\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD\",\n            \"availabilityZone\": \"ZONE_3\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"EGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"GRE\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"label\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"gpus\": {\n      \"id\": \"<string>\",\n      \"type\": \"location\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"templateUuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"cores\": \"<integer>\",\n    \"ram\": \"<integer>\",\n    \"availabilityZone\": \"AUTO\",\n    \"bootCdrom\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\"\n    },\n    \"bootVolume\": {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\"\n    },\n    \"cpuFamily\": \"<string>\",\n    \"type\": \"<string>\",\n    \"placementGroupId\": \"<string>\",\n    \"nicMultiQueue\": false\n  },\n  \"type\": \"pcc\",\n  \"metadata\": {},\n  \"entities\": {\n    \"cdroms\": {\n      \"type\": \"natgateway-rule\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"V1\"\n          },\n          \"type\": \"collection\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"licenceType\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"cpuHotUnplug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"ramHotUnplug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"discScsiHotPlug\": \"<boolean>\",\n            \"discScsiHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"applicationType\": \"UNKNOWN\",\n            \"cloudInit\": \"NONE\"\n          },\n          \"type\": \"target-group\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"ISO\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"IDE\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"template\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"SSD Premium\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"bus\": \"UNKNOWN\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"type\": \"contract\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"nics\": {\n      \"type\": \"k8s\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"gpu\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"collection\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"request-status\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"user\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"vnet\": \"<string>\"\n          },\n          \"type\": \"server\",\n          \"metadata\": {},\n          \"entities\": {\n            \"flowlogs\": {\n              \"type\": \"backupunit\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"firewallrules\": {\n              \"type\": \"s3key\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            },\n            \"securitygroups\": {\n              \"type\": \"networkloadbalancer\",\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {}\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"gpus\": {\n      \"type\": \"nodepool\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"location\",\n          \"metadata\": {}\n        },\n        {\n          \"properties\": {\n            \"vendor\": \"<string>\",\n            \"type\": \"<string>\",\n            \"model\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"type\": \"natgateway\",\n          \"metadata\": {}\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/servers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"servers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "volumes",
							"item": [
								{
									"name": "{volumeId}",
									"item": [
										{
											"name": "restore-snapshot",
											"item": [
												{
													"name": "Restore volume snapshots",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"snapshotId\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/restore-snapshot?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId",
																"restore-snapshot"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "volumeId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the volume."
																}
															]
														},
														"description": "Restore a snapshot for the specified volume within the data center. A snapshot is an image of a volume, which can be used to restore this volume at a later time."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"snapshotId\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/restore-snapshot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"restore-snapshot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"snapshotId\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/restore-snapshot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"restore-snapshot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "create-snapshot",
											"item": [
												{
													"name": "Create volume snapshots",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/create-snapshot?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId",
																"create-snapshot"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "volumeId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the volume."
																}
															]
														},
														"description": "Create a snapshot of the specified volume within the data center; this snapshot can later be used to restore this volume."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/create-snapshot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"create-snapshot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/create-snapshot?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"create-snapshot"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "labels",
											"item": [
												{
													"name": "{key}",
													"item": [
														{
															"name": "Retrieve volume labels",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "volumeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the volume."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Retrieve the properties of the specified volume label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify a Volume Label",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "volumeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the volume."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Modifies the specified volume label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete volume labels",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels",
																		":key"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "volumeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the volume."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The label key"
																		}
																	]
																},
																"description": "Delete the specified volume label."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels/:key?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"volumes",
																				":volumeId",
																				"labels",
																				":key"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "volumeId"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List volume labels",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId",
																"labels"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "volumeId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the volume."
																}
															]
														},
														"description": "List all the the labels for the specified volume."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a Volume Label",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId",
																"labels"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "volumeId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the volume."
																}
															]
														},
														"description": "Adds a new label to the specified volume."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId/labels?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"volumes",
																		":volumeId",
																		"labels"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "volumeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve volumes",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes",
														":volumeId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "volumeId",
															"value": "<string>",
															"description": "(Required) The unique ID of the volume."
														}
													]
												},
												"description": "Retrieve the properties of the specified volume within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Volume by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes",
														":volumeId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "volumeId",
															"value": "<string>",
															"description": "(Required) The unique ID of the volume."
														}
													]
												},
												"description": "Modifies the properties of the specified volume within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete volumes",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes",
														":volumeId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "volumeId",
															"value": "<string>",
															"description": "(Required) The unique ID of the volume."
														}
													]
												},
												"description": "Delete the specified volume within the data center. Use with caution, the volume will be permanently removed!"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify volumes",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"size\": \"<number>\",\n  \"name\": \"<string>\",\n  \"type\": \"SSD Premium\",\n  \"availabilityZone\": \"ZONE_3\",\n  \"image\": \"<string>\",\n  \"imagePassword\": \"<string>\",\n  \"imageAlias\": \"<string>\",\n  \"sshKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bus\": \"UNKNOWN\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"backupunitId\": \"<uuid>\",\n  \"userData\": \"<string>\",\n  \"bootOrder\": \"AUTO\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes",
														":volumeId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "volumeId",
															"value": "<string>",
															"description": "(Required) The unique ID of the volume."
														}
													]
												},
												"description": "Update the properties of the specified storage volume within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"size\": \"<number>\",\n  \"name\": \"<string>\",\n  \"type\": \"SSD Premium\",\n  \"availabilityZone\": \"ZONE_3\",\n  \"image\": \"<string>\",\n  \"imagePassword\": \"<string>\",\n  \"imageAlias\": \"<string>\",\n  \"sshKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bus\": \"UNKNOWN\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"backupunitId\": \"<uuid>\",\n  \"userData\": \"<string>\",\n  \"bootOrder\": \"AUTO\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"size\": \"<number>\",\n  \"name\": \"<string>\",\n  \"type\": \"SSD Premium\",\n  \"availabilityZone\": \"ZONE_3\",\n  \"image\": \"<string>\",\n  \"imagePassword\": \"<string>\",\n  \"imageAlias\": \"<string>\",\n  \"sshKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bus\": \"UNKNOWN\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"backupunitId\": \"<uuid>\",\n  \"userData\": \"<string>\",\n  \"bootOrder\": \"AUTO\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes/:volumeId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"volumes",
																":volumeId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "volumeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List volumes",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"volumes"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all the volumes within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"natgateway\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"type\": \"SSD Standard\",\n        \"availabilityZone\": \"ZONE_1\",\n        \"image\": \"<string>\",\n        \"imagePassword\": \"<string>\",\n        \"imageAlias\": \"<string>\",\n        \"sshKeys\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"bus\": \"IDE\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"deviceNumber\": \"<long>\",\n        \"pciSlot\": \"<integer>\",\n        \"backupunitId\": \"<uuid>\",\n        \"userData\": \"<string>\",\n        \"bootServer\": \"<string>\",\n        \"bootOrder\": \"AUTO\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"backupunit\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"ACTIVE\"\n      }\n    },\n    {\n      \"properties\": {\n        \"size\": \"<number>\",\n        \"name\": \"<string>\",\n        \"type\": \"ISO\",\n        \"availabilityZone\": \"ZONE_2\",\n        \"image\": \"<string>\",\n        \"imagePassword\": \"<string>\",\n        \"imageAlias\": \"<string>\",\n        \"sshKeys\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"bus\": \"IDE\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"deviceNumber\": \"<long>\",\n        \"pciSlot\": \"<integer>\",\n        \"backupunitId\": \"<uuid>\",\n        \"userData\": \"<string>\",\n        \"bootServer\": \"<string>\",\n        \"bootOrder\": \"AUTO\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DEPLOYING\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Volume",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"volumes"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a storage volume within the specified data center. The volume will not be attached! Attaching volumes is described in the Servers section."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"HDD\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"VIRTIO\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"deviceNumber\": \"<long>\",\n    \"pciSlot\": \"<integer>\",\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootServer\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"size\": \"<number>\",\n    \"name\": \"<string>\",\n    \"type\": \"DAS\",\n    \"availabilityZone\": \"ZONE_2\",\n    \"image\": \"<string>\",\n    \"imagePassword\": \"<string>\",\n    \"imageAlias\": \"<string>\",\n    \"sshKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"bus\": \"UNKNOWN\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"backupunitId\": \"<uuid>\",\n    \"userData\": \"<string>\",\n    \"bootOrder\": \"AUTO\"\n  },\n  \"type\": \"firewall-rule\",\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/volumes?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"volumes"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "lans",
							"item": [
								{
									"name": "{lanId}",
									"item": [
										{
											"name": "nics",
											"item": [
												{
													"name": "{nicId}",
													"item": [
														{
															"name": "Retrieve attached NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"lans",
																		":lanId",
																		"nics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "lanId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the LAN."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Retrieve the properties of the NIC, attached to the specified LAN."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"lans",
																				":lanId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "lanId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"lans",
																				":lanId",
																				"nics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "lanId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List LAN members",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId",
																"nics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "lanId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the LAN."
																}
															]
														},
														"description": "List all NICs, attached to the specified LAN."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"lans",
																		":lanId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "lanId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"BIDIRECTIONAL\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"server\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_MAINTENANCE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"node\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"security-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"TCP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_UPDATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"node\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"BIDIRECTIONAL\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"template\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"TCP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"k8s\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DEPLOYING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"UDP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"nodepool\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"MAINTENANCE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"flow-log\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"lans",
																		":lanId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "lanId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Attach NICs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId",
																"nics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "lanId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the LAN."
																}
															]
														},
														"description": "Attach an existing NIC to the specified LAN."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"lans",
																		":lanId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "lanId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId/nics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"lans",
																		":lanId",
																		"nics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "lanId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve LANs",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans",
														":lanId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "lanId",
															"value": "<string>",
															"description": "(Required) The unique ID of the LAN."
														}
													]
												},
												"description": "Retrieve the properties of the specified LAN within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv4CidrBlock\": \"<string>\",\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"vni\": \"<integer>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"TERMINATED\"\n  },\n  \"entities\": {\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"datacenter\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"lan\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"UDP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"networkloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"applicationloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"BUSY\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"AH\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"template\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"group\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"user\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify LANs",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans",
														":lanId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "lanId",
															"value": "<string>",
															"description": "(Required) The unique ID of the LAN."
														}
													]
												},
												"description": "Modify the properties of the specified LAN within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv4CidrBlock\": \"<string>\",\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"vni\": \"<integer>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"TERMINATED\"\n  },\n  \"entities\": {\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"datacenter\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"lan\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"UDP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"networkloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"applicationloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"BUSY\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"AH\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"template\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"group\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"user\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete LANs",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans",
														":lanId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "lanId",
															"value": "<string>",
															"description": "(Required) The unique ID of the LAN."
														}
													]
												},
												"description": "Delete the specified LAN within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify LANs",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"ipFailover\": [\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    }\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"pcc\": \"<string>\",\n  \"public\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans",
														":lanId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "lanId",
															"value": "<string>",
															"description": "(Required) The unique ID of the LAN."
														}
													]
												},
												"description": "Update the properties of the specified LAN within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ipFailover\": [\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    }\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"pcc\": \"<string>\",\n  \"public\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv4CidrBlock\": \"<string>\",\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"vni\": \"<integer>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"TERMINATED\"\n  },\n  \"entities\": {\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"datacenter\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"lan\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"UDP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"networkloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"applicationloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"BUSY\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"AH\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"template\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"group\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"user\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ipFailover\": [\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"nicUuid\": \"<string>\"\n    }\n  ],\n  \"ipv6CidrBlock\": \"<string>\",\n  \"pcc\": \"<string>\",\n  \"public\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/lans/:lanId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"lans",
																":lanId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "lanId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List LANs",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"lans"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all LANs within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ipFailover\": [\n          {\n            \"ip\": \"<string>\",\n            \"nicUuid\": \"<string>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"nicUuid\": \"<string>\"\n          }\n        ],\n        \"ipv4CidrBlock\": \"<string>\",\n        \"ipv6CidrBlock\": \"<string>\",\n        \"pcc\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"vni\": \"<integer>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      },\n      \"entities\": {\n        \"nics\": {\n          \"id\": \"<string>\",\n          \"type\": \"node\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"EGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"contract\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_UPDATING\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ALL\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"volume\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"gpu\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"BUSY\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"volume\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"label\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"lan\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"datacenter\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"label\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"UPDATING\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMPv6\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"group\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"INACTIVE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_MAINTENANCE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"request-status\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_SUSPENDED\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"UDP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"BUSY\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"INGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"SUSPENDED\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"label\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ALL\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"user\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_UPDATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"INGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"snapshot\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"VRRP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"INACTIVE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"gpu\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"nic\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"node\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"target-group\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"AVAILABLE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"AH\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"applicationloadbalancer\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"ACTIVE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"image\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"template\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"VRRP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"datacenter\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_SUSPENDED\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ANY\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"volume\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"TERMINATED\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ipFailover\": [\n          {\n            \"ip\": \"<string>\",\n            \"nicUuid\": \"<string>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"nicUuid\": \"<string>\"\n          }\n        ],\n        \"ipv4CidrBlock\": \"<string>\",\n        \"ipv6CidrBlock\": \"<string>\",\n        \"pcc\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"vni\": \"<integer>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"forwarding-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      },\n      \"entities\": {\n        \"nics\": {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"INGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"lan\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"MAINTENANCE\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"pcc\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ALL\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"INGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"gpu\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"MAINTENANCE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"user\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"GRE\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"GRE\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DESTROYING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"pcc\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ANY\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"collection\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"BUSY\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"group\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"s3key\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_MAINTENANCE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"security-group\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"networkloadbalancer\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"HIBERNATING\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"request-status\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_DESTROYING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"INGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"snapshot\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DESTROYING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"BUSY\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"applicationloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_DESTROYING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMPv6\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"user\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_SUSPENDED\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"security-group\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"MAINTENANCE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"UDP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"natgateway\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"MAINTENANCE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"natgateway\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"SUSPENDED\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create LANs",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"lans"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a LAN within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv4CidrBlock\": \"<string>\",\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"vni\": \"<integer>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"TERMINATED\"\n  },\n  \"entities\": {\n    \"nics\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"datacenter\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"lan\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"UDP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"networkloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"ACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"applicationloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"BUSY\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"AH\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"template\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_HIBERNATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"group\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"HIBERNATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"template\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"user\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ipFailover\": [\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"nicUuid\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"pcc\": \"<string>\",\n    \"public\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\",\n  \"metadata\": {},\n  \"entities\": {\n    \"nics\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/lans?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"lans"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "loadbalancers",
							"item": [
								{
									"name": "{loadbalancerId}",
									"item": [
										{
											"name": "balancednics",
											"item": [
												{
													"name": "{nicId}",
													"item": [
														{
															"name": "Retrieve balanced NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "loadbalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Load Balancer."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Retrieve the properties of the specified NIC, attached to the Load Balancer."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"loadbalancers",
																				":loadbalancerId",
																				"balancednics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "loadbalancerId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"loadbalancers",
																				":loadbalancerId",
																				"balancednics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "loadbalancerId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Detach balanced NICs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics",
																		":nicId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "loadbalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Load Balancer."
																		},
																		{
																			"key": "nicId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NIC."
																		}
																	]
																},
																"description": "Detach the specified NIC from the Load Balancer."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"loadbalancers",
																				":loadbalancerId",
																				"balancednics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "loadbalancerId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics/:nicId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"loadbalancers",
																				":loadbalancerId",
																				"balancednics",
																				":nicId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "loadbalancerId"
																				},
																				{
																					"key": "nicId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List balanced NICs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId",
																"balancednics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "loadbalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Load Balancer."
																}
															]
														},
														"description": "List all NICs, attached to the specified Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "loadbalancerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"BIDIRECTIONAL\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"server\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_MAINTENANCE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"node\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"security-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"TCP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_UPDATING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"node\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"lan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dhcp\": true,\n        \"ipv6Ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"dhcpv6\": true,\n        \"firewallActive\": \"<boolean>\",\n        \"firewallType\": \"BIDIRECTIONAL\",\n        \"deviceNumber\": \"<integer>\",\n        \"pciSlot\": \"<integer>\",\n        \"vnet\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"template\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"firewallrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"TCP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"k8s\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DEPLOYING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"backupunit\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"UDP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"nodepool\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"MAINTENANCE\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ESP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"flow-log\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "loadbalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Attach balanced NICs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId",
																"balancednics"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "loadbalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Load Balancer."
																}
															]
														},
														"description": "Attachs an existing NIC to the specified Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "loadbalancerId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"EGRESS\",\n    \"deviceNumber\": \"<integer>\",\n    \"pciSlot\": \"<integer>\",\n    \"vnet\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"firewallrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"GRE\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"UDP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"collection\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"lan\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_SUSPENDED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"applicationloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"lan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcp\": true,\n    \"ipv6Ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"dhcpv6\": true,\n    \"firewallActive\": \"<boolean>\",\n    \"firewallType\": \"INGRESS\",\n    \"vnet\": \"<string>\"\n  },\n  \"type\": \"ipblock\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"firewallrules\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId/balancednics?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"loadbalancers",
																		":loadbalancerId",
																		"balancednics"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "loadbalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers",
														":loadbalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "loadbalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Load Balancer."
														}
													]
												},
												"description": "Retrieve the properties of the specified Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"balancednics\": {\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ICMP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"TCP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"label\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"TCP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"ipblock\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nic\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"k8s\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"contract\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMPv6\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Load Balancer by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers",
														":loadbalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "loadbalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Load Balancer."
														}
													]
												},
												"description": "Modifies the properties of the specified Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"balancednics\": {\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ICMP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"TCP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"label\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"TCP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"ipblock\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nic\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"k8s\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"contract\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMPv6\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers",
														":loadbalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "loadbalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Load Balancer."
														}
													]
												},
												"description": "Remove the specified Load Balancer from the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"dhcp\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers",
														":loadbalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "loadbalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Load Balancer."
														}
													]
												},
												"description": "Update the properties of the specified Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"dhcp\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"balancednics\": {\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ICMP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"TCP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"label\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"TCP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"ipblock\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nic\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"k8s\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"contract\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMPv6\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"dhcp\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers/:loadbalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"loadbalancers",
																":loadbalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "loadbalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Load Balancers",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"loadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all the Load Balancers within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"dhcp\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nic\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"AVAILABLE\"\n      },\n      \"entities\": {\n        \"balancednics\": {\n          \"id\": \"<string>\",\n          \"type\": \"target-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"INGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"user\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_DESTROYING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ALL\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"INGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"image\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DEPLOYING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ANY\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_SUSPENDED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"UDP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"s3key\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DESTROYING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DEPLOYING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"natgateway-rule\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"SUSPENDED\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"loadbalancer\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_MAINTENANCE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"user\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DEPLOYING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ANY\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"k8s\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_DESTROYING\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"VRRP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"lan\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_UPDATING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"EGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"flow-log\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"target-group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"snapshot\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_SUSPENDED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"AH\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"s3key\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DESTROYING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"flow-log\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"server\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"ACTIVE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"GRE\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"user\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"UPDATING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"s3key\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"BUSY\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"loadbalancer\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_HIBERNATING\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"datacenter\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"TERMINATED\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"dhcp\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UPDATING\"\n      },\n      \"entities\": {\n        \"balancednics\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"INGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"s3key\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"ALL\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"gpu\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"VRRP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"flow-log\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"DEPLOYING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"UDP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"image\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"AVAILABLE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"request-status\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ANY\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"s3key\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"ACTIVE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"forwarding-rule\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_HIBERNATING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_MAINTENANCE\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"gpu\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMPv6\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"label\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"DESTROYING\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"AH\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"flow-log\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"AVAILABLE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"lan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"mac\": \"<string>\",\n                \"ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"dhcp\": true,\n                \"ipv6Ips\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"ipv6CidrBlock\": \"<string>\",\n                \"dhcpv6\": true,\n                \"firewallActive\": \"<boolean>\",\n                \"firewallType\": \"EGRESS\",\n                \"deviceNumber\": \"<integer>\",\n                \"pciSlot\": \"<integer>\",\n                \"vnet\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"INACTIVE\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"nodepool\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"INGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"pcc\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_SUSPENDED\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"BIDIRECTIONAL\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"group\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"AVAILABLE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"firewallrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"GRE\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv4\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_DESTROYING\"\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"protocol\": \"UDP\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"INGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"server\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"volume\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"TERMINATED\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"applicationloadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"AH\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"natgateway\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"MAINTENANCE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ANY\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"group\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"UNKNOWN\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"request\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"SUSPENDED\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMPv6\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"forwarding-rule\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_MAINTENANCE\"\n                              }\n                            },\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"natgateway-rule\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_MAINTENANCE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Load Balancer",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"loadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a Load Balancer within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"balancednics\": {\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"BIDIRECTIONAL\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"REJECTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request-status\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"ACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ICMP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"loadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"TCP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"EGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"label\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"TCP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"AH\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"label\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_SUSPENDED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"ipblock\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"lan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dhcp\": true,\n            \"ipv6Ips\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"ipv6CidrBlock\": \"<string>\",\n            \"dhcpv6\": true,\n            \"firewallActive\": \"<boolean>\",\n            \"firewallType\": \"INGRESS\",\n            \"deviceNumber\": \"<integer>\",\n            \"pciSlot\": \"<integer>\",\n            \"vnet\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ACCEPTED\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"firewall-rule\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"AVAILABLE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"INGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"firewallrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"ESP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv4\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"nic\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"protocol\": \"ANY\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"resource\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"snapshot\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"k8s\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ESP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"contract\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                },\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"ipblock\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_MAINTENANCE\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"networkloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ICMPv6\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"TERMINATED\"\n                          }\n                        },\n                        {\n                          \"properties\": {\n                            \"protocol\": \"VRRP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dhcp\": \"<boolean>\"\n  },\n  \"type\": \"security-group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"balancednics\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/loadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"loadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "natgateways",
							"item": [
								{
									"name": "{natGatewayId}",
									"item": [
										{
											"name": "rules",
											"item": [
												{
													"name": "{natGatewayRuleId}",
													"item": [
														{
															"name": "Retrieve NAT Gateway rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules",
																		":natGatewayRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "natGatewayRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway rule."
																		}
																	]
																},
																"description": "Retrieve the properties of the specified NAT Gateway rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ICMP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_HIBERNATING\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify a NAT Gateway Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ALL\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"snapshot\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules",
																		":natGatewayRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "natGatewayRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway rule."
																		}
																	]
																},
																"description": "Modify the specified NAT Gateway rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ALL\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"snapshot\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ICMP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_HIBERNATING\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ALL\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"snapshot\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete NAT Gateway rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules",
																		":natGatewayRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "natGatewayRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway rule."
																		}
																	]
																},
																"description": "Delete the specified NAT Gateway rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially Modify a NAT Gateway Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"publicIp\": \"<string>\",\n  \"sourceSubnet\": \"<string>\",\n  \"type\": \"SNAT\",\n  \"protocol\": \"TCP\",\n  \"targetSubnet\": \"<string>\",\n  \"targetPortRange\": {\n    \"start\": \"<integer>\",\n    \"end\": \"<integer>\"\n  }\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules",
																		":natGatewayRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "natGatewayRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway rule."
																		}
																	]
																},
																"description": "Updates the properties of the specified NAT Gateway rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"publicIp\": \"<string>\",\n  \"sourceSubnet\": \"<string>\",\n  \"type\": \"SNAT\",\n  \"protocol\": \"TCP\",\n  \"targetSubnet\": \"<string>\",\n  \"targetPortRange\": {\n    \"start\": \"<integer>\",\n    \"end\": \"<integer>\"\n  }\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ICMP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_HIBERNATING\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"publicIp\": \"<string>\",\n  \"sourceSubnet\": \"<string>\",\n  \"type\": \"SNAT\",\n  \"protocol\": \"TCP\",\n  \"targetSubnet\": \"<string>\",\n  \"targetPortRange\": {\n    \"start\": \"<integer>\",\n    \"end\": \"<integer>\"\n  }\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules/:natGatewayRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"rules",
																				":natGatewayRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "natGatewayRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List NAT Gateway rules",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId",
																"rules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "natGatewayId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the NAT Gateway."
																}
															]
														},
														"description": "List all rules for the specified NAT Gateway."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"resource\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"sourceSubnet\": \"<string>\",\n        \"type\": \"SNAT\",\n        \"protocol\": \"ICMP\",\n        \"targetSubnet\": \"<string>\",\n        \"targetPortRange\": {\n          \"start\": \"<integer>\",\n          \"end\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"ACTIVE\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"sourceSubnet\": \"<string>\",\n        \"type\": \"SNAT\",\n        \"protocol\": \"ALL\",\n        \"targetSubnet\": \"<string>\",\n        \"targetPortRange\": {\n          \"start\": \"<integer>\",\n          \"end\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a NAT Gateway Rule",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"TCP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"group\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId",
																"rules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "natGatewayId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the NAT Gateway."
																}
															]
														},
														"description": "Creates a rule for the specified NAT Gateway."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"TCP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"group\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"ICMP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_HIBERNATING\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"sourceSubnet\": \"<string>\",\n    \"type\": \"SNAT\",\n    \"protocol\": \"TCP\",\n    \"targetSubnet\": \"<string>\",\n    \"targetPortRange\": {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  },\n  \"type\": \"group\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/rules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "flowlogs",
											"item": [
												{
													"name": "{flowLogId}",
													"item": [
														{
															"name": "Retrieve NAT Gateway Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Retrieve the specified NAT Gateway Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify NAT Gateway Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Modify the specified NAT Gateway Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete NAT Gateway Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Delete the specified NAT Gateway Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify NAT Gateway Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "natGatewayId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the NAT Gateway."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Update the properties of the specified NAT Gateway Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"natgateways",
																				":natGatewayId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "natGatewayId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List NAT Gateway Flow Logs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "natGatewayId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the NAT Gateway."
																}
															]
														},
														"description": "List all the Flow Logs for the specified NAT Gateway."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"resource\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a NAT Gateway Flow Log",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "natGatewayId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the NAT Gateway."
																}
															]
														},
														"description": "Adds a new Flow Log to the specified NAT Gateway."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"natgateways",
																		":natGatewayId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "natGatewayId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve NAT Gateways",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways",
														":natGatewayId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "natGatewayId",
															"value": "<string>",
															"description": "(Required) The unique ID of the NAT Gateway."
														}
													]
												},
												"description": "Retrieve the properties of the specified NAT Gateway within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"request\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ]\n    },\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify NAT Gateways",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"template\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways",
														":natGatewayId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "natGatewayId",
															"value": "<string>",
															"description": "(Required) The unique ID of the NAT Gateway."
														}
													]
												},
												"description": "Modify the properties of the specified NAT Gateway within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"template\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"request\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ]\n    },\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"template\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete NAT Gateways",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways",
														":natGatewayId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "natGatewayId",
															"value": "<string>",
															"description": "(Required) The unique ID of the NAT Gateway."
														}
													]
												},
												"description": "Remove the specified NAT Gateway from the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify NAT Gateways",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "*/*"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"publicIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lans\": [\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways",
														":natGatewayId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "natGatewayId",
															"value": "<string>",
															"description": "(Required) The unique ID of the NAT Gateway."
														}
													]
												},
												"description": "Update the properties of the specified NAT Gateway within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"publicIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lans\": [\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"request\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ]\n    },\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"publicIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lans\": [\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"gatewayIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways/:natGatewayId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"natgateways",
																":natGatewayId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "natGatewayId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List NAT Gateways",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"natgateways"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all NAT Gateways within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"request\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"publicIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lans\": [\n          {\n            \"id\": \"<integer>\",\n            \"gatewayIps\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<integer>\",\n            \"gatewayIps\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"target-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_UPDATING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"publicIp\": \"<string>\",\n                \"sourceSubnet\": \"<string>\",\n                \"type\": \"SNAT\",\n                \"protocol\": \"TCP\",\n                \"targetSubnet\": \"<string>\",\n                \"targetPortRange\": {\n                  \"start\": \"<integer>\",\n                  \"end\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"publicIp\": \"<string>\",\n                \"sourceSubnet\": \"<string>\",\n                \"type\": \"SNAT\",\n                \"protocol\": \"ICMP\",\n                \"targetSubnet\": \"<string>\",\n                \"targetPortRange\": {\n                  \"start\": \"<integer>\",\n                  \"end\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ]\n        },\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"gpu\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"EGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"resource\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"publicIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lans\": [\n          {\n            \"id\": \"<integer>\",\n            \"gatewayIps\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<integer>\",\n            \"gatewayIps\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"TERMINATED\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"gpu\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"publicIp\": \"<string>\",\n                \"sourceSubnet\": \"<string>\",\n                \"type\": \"SNAT\",\n                \"protocol\": \"ALL\",\n                \"targetSubnet\": \"<string>\",\n                \"targetPortRange\": {\n                  \"start\": \"<integer>\",\n                  \"end\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DEPLOYING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"publicIp\": \"<string>\",\n                \"sourceSubnet\": \"<string>\",\n                \"type\": \"SNAT\",\n                \"protocol\": \"UDP\",\n                \"targetSubnet\": \"<string>\",\n                \"targetPortRange\": {\n                  \"start\": \"<integer>\",\n                  \"end\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"contract\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ]\n        },\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"REJECTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"AVAILABLE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ALL\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a NAT Gateway",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"security-group\"\n    },\n    \"flowlogs\": {\n      \"type\": \"volume\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"natgateways"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a NAT Gateway within the data center.\n\nThis operation is restricted to contract owner, admin, and users with 'createInternetAccess' privileges."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"security-group\"\n    },\n    \"flowlogs\": {\n      \"type\": \"volume\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"request\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"ACTIVE\"\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIp\": \"<string>\",\n            \"sourceSubnet\": \"<string>\",\n            \"type\": \"SNAT\",\n            \"protocol\": \"UDP\",\n            \"targetSubnet\": \"<string>\",\n            \"targetPortRange\": {\n              \"start\": \"<integer>\",\n              \"end\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"natgateway\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ]\n    },\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"ALL\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"ACCEPTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"EGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"HIBERNATING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"gatewayIps\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"type\": \"group\",\n  \"metadata\": {},\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"security-group\"\n    },\n    \"flowlogs\": {\n      \"type\": \"volume\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/natgateways?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"natgateways"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "networkloadbalancers",
							"item": [
								{
									"name": "{networkLoadBalancerId}",
									"item": [
										{
											"name": "flowlogs",
											"item": [
												{
													"name": "{flowLogId}",
													"item": [
														{
															"name": "Retrieve NLB Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Retrieve the specified Network Load Balancer Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify NLB Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Modify the specified Network Load Balancer Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete NLB Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Delete the specified Network Load Balancer Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify NLB Flow Logs",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Flow Log."
																		}
																	]
																},
																"description": "Update the properties of the specified Network Load Balancer Flow Log."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List NLB Flow Logs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "networkLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Network Load Balancer."
																}
															]
														},
														"description": "List all the Flow Logs for the specified Network Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"resource\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a NLB Flow Log",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "networkLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Network Load Balancer."
																}
															]
														},
														"description": "Adds a new Flow Log for the Network Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "forwardingrules",
											"item": [
												{
													"name": "{forwardingRuleId}",
													"item": [
														{
															"name": "Retrieve NLB forwarding rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Retrieve the specified Network Load Balance forwarding rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"firewall-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify NLB forwarding rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"request\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Modify the specified Network Load Balancer forwarding rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"request\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"firewall-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"request\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete NLB forwarding rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Delete the specified Network Load Balancer forwarding rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify NLB forwarding rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    }\n  ],\n  \"healthCheck\": {\n    \"clientTimeout\": \"<integer>\",\n    \"connectTimeout\": \"<integer>\",\n    \"targetTimeout\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  }\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "networkLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Network Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Update the properties of the specified Network Load Balancer forwarding rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    }\n  ],\n  \"healthCheck\": {\n    \"clientTimeout\": \"<integer>\",\n    \"connectTimeout\": \"<integer>\",\n    \"targetTimeout\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  }\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"firewall-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheck\": {\n        \"check\": \"<boolean>\",\n        \"checkInterval\": \"<integer>\",\n        \"maintenance\": \"<boolean>\"\n      }\n    }\n  ],\n  \"healthCheck\": {\n    \"clientTimeout\": \"<integer>\",\n    \"connectTimeout\": \"<integer>\",\n    \"targetTimeout\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  }\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"networkloadbalancers",
																				":networkLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "networkLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List NLB forwarding rules",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId",
																"forwardingrules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "networkLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Network Load Balancer."
																}
															]
														},
														"description": "List the forwarding rules for the specified Network Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"algorithm\": \"LEAST_CONNECTION\",\n        \"listenerIp\": \"<string>\",\n        \"listenerPort\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"protocol\": \"TCP\",\n        \"targets\": [\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheck\": {\n              \"check\": \"<boolean>\",\n              \"checkInterval\": \"<integer>\",\n              \"maintenance\": \"<boolean>\"\n            }\n          },\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheck\": {\n              \"check\": \"<boolean>\",\n              \"checkInterval\": \"<integer>\",\n              \"maintenance\": \"<boolean>\"\n            }\n          }\n        ],\n        \"healthCheck\": {\n          \"clientTimeout\": \"<integer>\",\n          \"connectTimeout\": \"<integer>\",\n          \"targetTimeout\": \"<integer>\",\n          \"retries\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"volume\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      }\n    },\n    {\n      \"properties\": {\n        \"algorithm\": \"LEAST_CONNECTION\",\n        \"listenerIp\": \"<string>\",\n        \"listenerPort\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"protocol\": \"TCP\",\n        \"targets\": [\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheck\": {\n              \"check\": \"<boolean>\",\n              \"checkInterval\": \"<integer>\",\n              \"maintenance\": \"<boolean>\"\n            }\n          },\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheck\": {\n              \"check\": \"<boolean>\",\n              \"checkInterval\": \"<integer>\",\n              \"maintenance\": \"<boolean>\"\n            }\n          }\n        ],\n        \"healthCheck\": {\n          \"clientTimeout\": \"<integer>\",\n          \"connectTimeout\": \"<integer>\",\n          \"targetTimeout\": \"<integer>\",\n          \"retries\": \"<integer>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a NLB Forwarding Rule",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"TCP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"datacenter\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId",
																"forwardingrules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "networkLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Network Load Balancer."
																}
															]
														},
														"description": "Creates a forwarding rule for the specified Network Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"TCP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"datacenter\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"firewall-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"TCP\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheck\": {\n          \"check\": \"<boolean>\",\n          \"checkInterval\": \"<integer>\",\n          \"maintenance\": \"<boolean>\"\n        }\n      }\n    ],\n    \"healthCheck\": {\n      \"clientTimeout\": \"<integer>\",\n      \"connectTimeout\": \"<integer>\",\n      \"targetTimeout\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    }\n  },\n  \"type\": \"datacenter\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"networkloadbalancers",
																		":networkLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "networkLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve Network Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers",
														":networkLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "networkLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Network Load Balancer."
														}
													]
												},
												"description": "Retrieve the properties of the specified Network Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"BIDIRECTIONAL\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"algorithm\": \"RANDOM\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"TCP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          }\n        },\n        {\n          \"properties\": {\n            \"algorithm\": \"SOURCE_IP\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"volume\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_MAINTENANCE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify Network Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"nodepool\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers",
														":networkLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "networkLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Network Load Balancer."
														}
													]
												},
												"description": "Modify the properties of the specified Network Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"nodepool\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"BIDIRECTIONAL\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"algorithm\": \"RANDOM\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"TCP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          }\n        },\n        {\n          \"properties\": {\n            \"algorithm\": \"SOURCE_IP\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"volume\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_MAINTENANCE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"nodepool\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Network Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers",
														":networkLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "networkLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Network Load Balancer."
														}
													]
												},
												"description": "Remove the specified Network Load Balancer from the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify Network Load Balancers",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "*/*"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers",
														":networkLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "networkLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Network Load Balancer."
														}
													]
												},
												"description": "Update the properties of the specified Network Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"BIDIRECTIONAL\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"algorithm\": \"RANDOM\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"TCP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          }\n        },\n        {\n          \"properties\": {\n            \"algorithm\": \"SOURCE_IP\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"volume\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_MAINTENANCE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers/:networkLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"networkloadbalancers",
																":networkLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "networkLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Network Load Balancers",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"networkloadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all the Network Load Balancers within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"gpu\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"listenerLan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"targetLan\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lbPrivateIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"centralLogging\": \"<boolean>\",\n        \"loggingFormat\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"TERMINATED\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"REJECTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"contract\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_UPDATING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"REJECTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"forwardingrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"algorithm\": \"RANDOM\",\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"targets\": [\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  },\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  }\n                ],\n                \"healthCheck\": {\n                  \"clientTimeout\": \"<integer>\",\n                  \"connectTimeout\": \"<integer>\",\n                  \"targetTimeout\": \"<integer>\",\n                  \"retries\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"algorithm\": \"RANDOM\",\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"TCP\",\n                \"targets\": [\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  },\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  }\n                ],\n                \"healthCheck\": {\n                  \"clientTimeout\": \"<integer>\",\n                  \"connectTimeout\": \"<integer>\",\n                  \"targetTimeout\": \"<integer>\",\n                  \"retries\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"listenerLan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"targetLan\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lbPrivateIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"centralLogging\": \"<boolean>\",\n        \"loggingFormat\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_MAINTENANCE\"\n      },\n      \"entities\": {\n        \"flowlogs\": {\n          \"id\": \"<string>\",\n          \"type\": \"target-group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"BIDIRECTIONAL\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_SUSPENDED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"action\": \"ACCEPTED\",\n                \"bucket\": \"<string>\",\n                \"direction\": \"INGRESS\",\n                \"name\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nic\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"ACTIVE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"forwardingrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"image\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"algorithm\": \"ROUND_ROBIN\",\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"targets\": [\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  },\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  }\n                ],\n                \"healthCheck\": {\n                  \"clientTimeout\": \"<integer>\",\n                  \"connectTimeout\": \"<integer>\",\n                  \"targetTimeout\": \"<integer>\",\n                  \"retries\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"INACTIVE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"algorithm\": \"RANDOM\",\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"TCP\",\n                \"targets\": [\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  },\n                  {\n                    \"ip\": \"<string>\",\n                    \"port\": \"<integer>\",\n                    \"weight\": \"<integer>\",\n                    \"proxyProtocol\": \"none\",\n                    \"healthCheck\": {\n                      \"check\": \"<boolean>\",\n                      \"checkInterval\": \"<integer>\",\n                      \"maintenance\": \"<boolean>\"\n                    }\n                  }\n                ],\n                \"healthCheck\": {\n                  \"clientTimeout\": \"<integer>\",\n                  \"connectTimeout\": \"<integer>\",\n                  \"targetTimeout\": \"<integer>\",\n                  \"retries\": \"<integer>\"\n                }\n              },\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"AVAILABLE\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Network Load Balancer",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"natgateway-rule\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"flow-log\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"forwardingrules\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"networkloadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a Network Load Balancer within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"natgateway-rule\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"flow-log\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"forwardingrules\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  },\n  \"entities\": {\n    \"flowlogs\": {\n      \"id\": \"<string>\",\n      \"type\": \"template\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"INGRESS\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"action\": \"REJECTED\",\n            \"bucket\": \"<string>\",\n            \"direction\": \"BIDIRECTIONAL\",\n            \"name\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"algorithm\": \"RANDOM\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"TCP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          }\n        },\n        {\n          \"properties\": {\n            \"algorithm\": \"SOURCE_IP\",\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"targets\": [\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              },\n              {\n                \"ip\": \"<string>\",\n                \"port\": \"<integer>\",\n                \"weight\": \"<integer>\",\n                \"proxyProtocol\": \"none\",\n                \"healthCheck\": {\n                  \"check\": \"<boolean>\",\n                  \"checkInterval\": \"<integer>\",\n                  \"maintenance\": \"<boolean>\"\n                }\n              }\n            ],\n            \"healthCheck\": {\n              \"clientTimeout\": \"<integer>\",\n              \"connectTimeout\": \"<integer>\",\n              \"targetTimeout\": \"<integer>\",\n              \"retries\": \"<integer>\"\n            }\n          },\n          \"id\": \"<string>\",\n          \"type\": \"volume\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_MAINTENANCE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"natgateway-rule\",\n  \"metadata\": {},\n  \"entities\": {\n    \"flowlogs\": {\n      \"type\": \"flow-log\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"forwardingrules\": {\n      \"type\": \"security-group\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/networkloadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"networkloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "applicationloadbalancers",
							"item": [
								{
									"name": "{applicationLoadBalancerId}",
									"item": [
										{
											"name": "forwardingrules",
											"item": [
												{
													"name": "{forwardingRuleId}",
													"item": [
														{
															"name": "Get an ALB Forwarding Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Retrieves the Application Load Balancer forwarding rule specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"STATIC\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify an ALB Forwarding Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"PATH\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"MATCHES\",\n            \"type\": \"QUERY\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"user\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Modifies the Application Load Balancer forwarding rule specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"PATH\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"MATCHES\",\n            \"type\": \"QUERY\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"user\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"STATIC\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"PATH\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"MATCHES\",\n            \"type\": \"QUERY\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"user\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete an ALB Forwarding Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Deletes the Application Load Balancer forwarding rule specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify an ALB Forwarding Rule by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"clientTimeout\": \"<integer>\",\n  \"serverCertificates\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"httpRules\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"FORWARD\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"CONTAINS\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"REDIRECT\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"HOST\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"EQUALS\",\n          \"type\": \"METHOD\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules",
																		":forwardingRuleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "forwardingRuleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the forwarding rule."
																		}
																	]
																},
																"description": "Updates the properties of the Application Load Balancer forwarding rule specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"clientTimeout\": \"<integer>\",\n  \"serverCertificates\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"httpRules\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"FORWARD\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"CONTAINS\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"REDIRECT\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"HOST\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"EQUALS\",\n          \"type\": \"METHOD\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"STATIC\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"listenerIp\": \"<string>\",\n  \"listenerPort\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"clientTimeout\": \"<integer>\",\n  \"serverCertificates\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"httpRules\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"FORWARD\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"CONTAINS\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"PATH\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"REDIRECT\",\n      \"targetGroup\": \"<string>\",\n      \"dropQuery\": \"<boolean>\",\n      \"location\": \"<string>\",\n      \"statusCode\": \"<integer>\",\n      \"responseMessage\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"conditions\": [\n        {\n          \"condition\": \"STARTS_WITH\",\n          \"type\": \"HOST\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"condition\": \"EQUALS\",\n          \"type\": \"METHOD\",\n          \"negate\": \"<boolean>\",\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules/:forwardingRuleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"forwardingrules",
																				":forwardingRuleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "forwardingRuleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get ALB Forwarding Rules",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId",
																"forwardingrules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "applicationLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Application Load Balancer."
																}
															]
														},
														"description": "Lists the forwarding rules of the specified Application Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"listenerIp\": \"<string>\",\n        \"listenerPort\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"protocol\": \"HTTP\",\n        \"clientTimeout\": \"<integer>\",\n        \"serverCertificates\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"httpRules\": [\n          {\n            \"name\": \"<string>\",\n            \"type\": \"STATIC\",\n            \"targetGroup\": \"<string>\",\n            \"dropQuery\": \"<boolean>\",\n            \"location\": \"<string>\",\n            \"statusCode\": \"<integer>\",\n            \"responseMessage\": \"<string>\",\n            \"contentType\": \"<string>\",\n            \"conditions\": [\n              {\n                \"condition\": \"CONTAINS\",\n                \"type\": \"HOST\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"condition\": \"STARTS_WITH\",\n                \"type\": \"COOKIE\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"type\": \"REDIRECT\",\n            \"targetGroup\": \"<string>\",\n            \"dropQuery\": \"<boolean>\",\n            \"location\": \"<string>\",\n            \"statusCode\": \"<integer>\",\n            \"responseMessage\": \"<string>\",\n            \"contentType\": \"<string>\",\n            \"conditions\": [\n              {\n                \"condition\": \"EXISTS\",\n                \"type\": \"QUERY\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"condition\": \"EXISTS\",\n                \"type\": \"HEADER\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"listenerIp\": \"<string>\",\n        \"listenerPort\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"protocol\": \"HTTP\",\n        \"clientTimeout\": \"<integer>\",\n        \"serverCertificates\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"httpRules\": [\n          {\n            \"name\": \"<string>\",\n            \"type\": \"FORWARD\",\n            \"targetGroup\": \"<string>\",\n            \"dropQuery\": \"<boolean>\",\n            \"location\": \"<string>\",\n            \"statusCode\": \"<integer>\",\n            \"responseMessage\": \"<string>\",\n            \"contentType\": \"<string>\",\n            \"conditions\": [\n              {\n                \"condition\": \"EQUALS\",\n                \"type\": \"HEADER\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"condition\": \"EQUALS\",\n                \"type\": \"PATH\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"type\": \"FORWARD\",\n            \"targetGroup\": \"<string>\",\n            \"dropQuery\": \"<boolean>\",\n            \"location\": \"<string>\",\n            \"statusCode\": \"<integer>\",\n            \"responseMessage\": \"<string>\",\n            \"contentType\": \"<string>\",\n            \"conditions\": [\n              {\n                \"condition\": \"ENDS_WITH\",\n                \"type\": \"QUERY\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"condition\": \"MATCHES\",\n                \"type\": \"PATH\",\n                \"negate\": \"<boolean>\",\n                \"key\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"ACTIVE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create an ALB Forwarding Rule",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"resource\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId",
																"forwardingrules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "applicationLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Application Load Balancer."
																}
															]
														},
														"description": "Creates a forwarding rule for the specified Application Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"resource\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"STATIC\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"SOURCE_IP\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"ENDS_WITH\",\n            \"type\": \"HOST\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"listenerIp\": \"<string>\",\n    \"listenerPort\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"clientTimeout\": \"<integer>\",\n    \"serverCertificates\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"httpRules\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"FORWARD\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"EXISTS\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"type\": \"REDIRECT\",\n        \"targetGroup\": \"<string>\",\n        \"dropQuery\": \"<boolean>\",\n        \"location\": \"<string>\",\n        \"statusCode\": \"<integer>\",\n        \"responseMessage\": \"<string>\",\n        \"contentType\": \"<string>\",\n        \"conditions\": [\n          {\n            \"condition\": \"CONTAINS\",\n            \"type\": \"METHOD\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"condition\": \"STARTS_WITH\",\n            \"type\": \"HEADER\",\n            \"negate\": \"<boolean>\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"type\": \"resource\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/forwardingrules?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"forwardingrules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "flowlogs",
											"item": [
												{
													"name": "{flowLogId}",
													"item": [
														{
															"name": "Get an ALB Flow Log by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the flow log."
																		}
																	]
																},
																"description": "Retrieves the Application Load Balancer flow log specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify an ALB Flow Log by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the flow log."
																		}
																	]
																},
																"description": "Modifies the Application Load Balancer flow log specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"BIDIRECTIONAL\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"contract\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete an ALB Flow Log by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the flow log."
																		}
																	]
																},
																"description": "Deletes the Application Load Balancer flow log specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially Modify an ALB Flow Log by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs",
																		":flowLogId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "applicationLoadBalancerId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Application Load Balancer."
																		},
																		{
																			"key": "flowLogId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the flow log."
																		}
																	]
																},
																"description": "Updates the properties of the Application Load Balancer flow log specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Content-Type",
																				"value": "*/*"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"action\": \"ALL\",\n  \"bucket\": \"<string>\",\n  \"direction\": \"EGRESS\",\n  \"name\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs/:flowLogId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"applicationloadbalancers",
																				":applicationLoadBalancerId",
																				"flowlogs",
																				":flowLogId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "applicationLoadBalancerId"
																				},
																				{
																					"key": "flowLogId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get ALB Flow Logs",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "applicationLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Application Load Balancer."
																}
															]
														},
														"description": "Retrieves the flow logs for the specified Application Load Balancer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"resource\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"action\": \"ALL\",\n        \"bucket\": \"<string>\",\n        \"direction\": \"INGRESS\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"MAINTENANCE\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create an ALB Flow Log",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId",
																"flowlogs"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "applicationLoadBalancerId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Application Load Balancer."
																}
															]
														},
														"description": "Creates a flow log for the Application Load Balancer specified by ID."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"action\": \"ALL\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"flow-log\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"BUSY\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"action\": \"REJECTED\",\n    \"bucket\": \"<string>\",\n    \"direction\": \"EGRESS\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"image\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId/flowlogs?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"applicationloadbalancers",
																		":applicationLoadBalancerId",
																		"flowlogs"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "applicationLoadBalancerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get an Application Load Balancer by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers",
														":applicationLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "applicationLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Application Load Balancer."
														}
													]
												},
												"description": "Retrieves the properties of the specified Application Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"ipblock\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_DESTROYING\"\n  },\n  \"entities\": {\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"EQUALS\",\n                    \"type\": \"COOKIE\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"STARTS_WITH\",\n                    \"type\": \"HEADER\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"STATIC\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"applicationloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"METHOD\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"SOURCE_IP\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"EXISTS\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"image\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify an Application Load Balancer by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"firewall-rule\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers",
														":applicationLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "applicationLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Application Load Balancer."
														}
													]
												},
												"description": "Modifies the properties of the specified Application Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"firewall-rule\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"ipblock\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_DESTROYING\"\n  },\n  \"entities\": {\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"EQUALS\",\n                    \"type\": \"COOKIE\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"STARTS_WITH\",\n                    \"type\": \"HEADER\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"STATIC\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"applicationloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"METHOD\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"SOURCE_IP\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"EXISTS\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"image\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"firewall-rule\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete an Application Load Balancer by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers",
														":applicationLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "applicationLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Application Load Balancer."
														}
													]
												},
												"description": "Removes the specified Application Load Balancer from the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially Modify an Application Load Balancer by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "*/*"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers",
														":applicationLoadBalancerId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "applicationLoadBalancerId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Application Load Balancer."
														}
													]
												},
												"description": "Updates the properties of the specified Application Load Balancer within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"ipblock\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_DESTROYING\"\n  },\n  \"entities\": {\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"EQUALS\",\n                    \"type\": \"COOKIE\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"STARTS_WITH\",\n                    \"type\": \"HEADER\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"STATIC\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"applicationloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"METHOD\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"SOURCE_IP\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"EXISTS\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"image\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"listenerLan\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"targetLan\": \"<integer>\",\n  \"ips\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lbPrivateIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"centralLogging\": \"<boolean>\",\n  \"loggingFormat\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers/:applicationLoadBalancerId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"applicationloadbalancers",
																":applicationLoadBalancerId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "applicationLoadBalancerId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Application Load Balancers",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"applicationloadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Lists all Application Load Balancers within a data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"listenerLan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"targetLan\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lbPrivateIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"centralLogging\": \"<boolean>\",\n        \"loggingFormat\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_DESTROYING\"\n      },\n      \"entities\": {\n        \"forwardingrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"snapshot\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"clientTimeout\": \"<integer>\",\n                \"serverCertificates\": [\n                  \"<uuid>\",\n                  \"<uuid>\"\n                ],\n                \"httpRules\": [\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"REDIRECT\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"EQUALS\",\n                        \"type\": \"PATH\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"CONTAINS\",\n                        \"type\": \"METHOD\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"STATIC\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"EXISTS\",\n                        \"type\": \"HEADER\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"STARTS_WITH\",\n                        \"type\": \"HEADER\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"contract\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DESTROYING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"clientTimeout\": \"<integer>\",\n                \"serverCertificates\": [\n                  \"<uuid>\",\n                  \"<uuid>\"\n                ],\n                \"httpRules\": [\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"REDIRECT\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"STARTS_WITH\",\n                        \"type\": \"HOST\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"CONTAINS\",\n                        \"type\": \"PATH\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"STATIC\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"EQUALS\",\n                        \"type\": \"COOKIE\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"MATCHES\",\n                        \"type\": \"HEADER\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"natgateway-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"listenerLan\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"targetLan\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"lbPrivateIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"centralLogging\": \"<boolean>\",\n        \"loggingFormat\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"pcc\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"entities\": {\n        \"forwardingrules\": {\n          \"id\": \"<string>\",\n          \"type\": \"ipblock\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"clientTimeout\": \"<integer>\",\n                \"serverCertificates\": [\n                  \"<uuid>\",\n                  \"<uuid>\"\n                ],\n                \"httpRules\": [\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"FORWARD\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"EXISTS\",\n                        \"type\": \"COOKIE\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"CONTAINS\",\n                        \"type\": \"HOST\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"FORWARD\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"CONTAINS\",\n                        \"type\": \"HEADER\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"EQUALS\",\n                        \"type\": \"QUERY\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"k8s\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              }\n            },\n            {\n              \"properties\": {\n                \"listenerIp\": \"<string>\",\n                \"listenerPort\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"protocol\": \"HTTP\",\n                \"clientTimeout\": \"<integer>\",\n                \"serverCertificates\": [\n                  \"<uuid>\",\n                  \"<uuid>\"\n                ],\n                \"httpRules\": [\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"STATIC\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"STARTS_WITH\",\n                        \"type\": \"METHOD\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"ENDS_WITH\",\n                        \"type\": \"METHOD\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"name\": \"<string>\",\n                    \"type\": \"REDIRECT\",\n                    \"targetGroup\": \"<string>\",\n                    \"dropQuery\": \"<boolean>\",\n                    \"location\": \"<string>\",\n                    \"statusCode\": \"<integer>\",\n                    \"responseMessage\": \"<string>\",\n                    \"contentType\": \"<string>\",\n                    \"conditions\": [\n                      {\n                        \"condition\": \"ENDS_WITH\",\n                        \"type\": \"HOST\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      },\n                      {\n                        \"condition\": \"CONTAINS\",\n                        \"type\": \"PATH\",\n                        \"negate\": \"<boolean>\",\n                        \"key\": \"<string>\",\n                        \"value\": \"<string>\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create an Application Load Balancer",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"flow-log\",\n  \"metadata\": {},\n  \"entities\": {\n    \"forwardingrules\": {\n      \"type\": \"user\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"applicationloadbalancers"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates an Application Load Balancer within the data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"flow-log\",\n  \"metadata\": {},\n  \"entities\": {\n    \"forwardingrules\": {\n      \"type\": \"user\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"ipblock\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_DESTROYING\"\n  },\n  \"entities\": {\n    \"forwardingrules\": {\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"EQUALS\",\n                    \"type\": \"COOKIE\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"STARTS_WITH\",\n                    \"type\": \"HEADER\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"STATIC\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"HOST\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"applicationloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"listenerIp\": \"<string>\",\n            \"listenerPort\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"protocol\": \"HTTP\",\n            \"clientTimeout\": \"<integer>\",\n            \"serverCertificates\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"httpRules\": [\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"ENDS_WITH\",\n                    \"type\": \"METHOD\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"<string>\",\n                \"type\": \"FORWARD\",\n                \"targetGroup\": \"<string>\",\n                \"dropQuery\": \"<boolean>\",\n                \"location\": \"<string>\",\n                \"statusCode\": \"<integer>\",\n                \"responseMessage\": \"<string>\",\n                \"contentType\": \"<string>\",\n                \"conditions\": [\n                  {\n                    \"condition\": \"MATCHES\",\n                    \"type\": \"SOURCE_IP\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  },\n                  {\n                    \"condition\": \"EXISTS\",\n                    \"type\": \"PATH\",\n                    \"negate\": \"<boolean>\",\n                    \"key\": \"<string>\",\n                    \"value\": \"<string>\"\n                  }\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"image\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"listenerLan\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"targetLan\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lbPrivateIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"centralLogging\": \"<boolean>\",\n    \"loggingFormat\": \"<string>\"\n  },\n  \"type\": \"flow-log\",\n  \"metadata\": {},\n  \"entities\": {\n    \"forwardingrules\": {\n      \"type\": \"user\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/applicationloadbalancers?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"applicationloadbalancers"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "labels",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve data center labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Retrieve the properties of the specified data center label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Data Center Label by Key",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Modifies the specified data center label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete data center labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Delete the specified data center label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List data center labels",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "List all the the labels for the specified data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Data Center Label",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Adds a new label to the specified data center."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "securitygroups",
							"item": [
								{
									"name": "{securityGroupId}",
									"item": [
										{
											"name": "rules",
											"item": [
												{
													"name": "{ruleId}",
													"item": [
														{
															"name": "Retrieve security group rule by id",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules",
																		":ruleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "securityGroupId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Security Group."
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Security Group rule."
																		}
																	]
																},
																"description": "Retrieve the properties of the specified Security Group rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Modify a Security Group Rule",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules",
																		":ruleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "securityGroupId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the security group."
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Security Group Rule."
																		}
																	]
																},
																"description": "Modifies the properties of the specified Security Group Rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Remove a Firewall Rule from a Security Group",
															"request": {
																"auth": {
																	"type": "apikey",
																	"apikey": [
																		{
																			"key": "key",
																			"value": "Authorization",
																			"type": "string"
																		},
																		{
																			"key": "value",
																			"value": "{{apiKey}}",
																			"type": "string"
																		},
																		{
																			"key": "in",
																			"value": "header",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules",
																		":ruleId"
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center"
																		},
																		{
																			"key": "securityGroupId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the security group."
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the firewall rule."
																		}
																	]
																},
																"description": "Removes the specific Firewall Rule from the Security Group and delete the Firewall rule"
															},
															"response": [
																{
																	"name": "Accepted. The request has been accepted for processing.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a rate limit.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Partially modify Security Group Rules",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules",
																		":ruleId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the data center."
																		},
																		{
																			"key": "securityGroupId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the security group."
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Security Group Rule."
																		}
																	]
																},
																"description": "Update the properties of the specified Security Group rule."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "Location",
																			"value": "https://s/requests/I/status",
																			"description": {
																				"content": "Callback URL to poll async operation status.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"protocol\": \"AH\",\n  \"name\": \"<string>\",\n  \"sourceMac\": \"<string>\",\n  \"ipVersion\": \"IPv4\",\n  \"sourceIp\": \"<string>\",\n  \"targetIp\": \"<string>\",\n  \"icmpCode\": \"<integer>\",\n  \"icmpType\": \"<integer>\",\n  \"portRangeStart\": \"<integer>\",\n  \"portRangeEnd\": \"<integer>\",\n  \"type\": \"INGRESS\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules/:ruleId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datacenters",
																				":datacenterId",
																				"securitygroups",
																				":securityGroupId",
																				"rules",
																				":ruleId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "datacenterId"
																				},
																				{
																					"key": "securityGroupId"
																				},
																				{
																					"key": "ruleId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Security Group rules",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules?pretty=true&depth=0&offset=0&limit=1000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId",
																"rules"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																},
																{
																	"key": "limit",
																	"value": "1000",
																	"description": "The maximum number of elements to return (use together with offset for pagination)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center."
																},
																{
																	"key": "securityGroupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the security group."
																}
															]
														},
														"description": "List all rules for the specified Security Group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "securityGroupId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"networkloadbalancer\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"protocol\": \"UDP\",\n        \"name\": \"<string>\",\n        \"sourceMac\": \"<string>\",\n        \"ipVersion\": \"IPv4\",\n        \"sourceIp\": \"<string>\",\n        \"targetIp\": \"<string>\",\n        \"icmpCode\": \"<integer>\",\n        \"icmpType\": \"<integer>\",\n        \"portRangeStart\": \"<integer>\",\n        \"portRangeEnd\": \"<integer>\",\n        \"type\": \"INGRESS\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"gpu\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      }\n    },\n    {\n      \"properties\": {\n        \"protocol\": \"GRE\",\n        \"name\": \"<string>\",\n        \"sourceMac\": \"<string>\",\n        \"ipVersion\": \"IPv4\",\n        \"sourceIp\": \"<string>\",\n        \"targetIp\": \"<string>\",\n        \"icmpCode\": \"<integer>\",\n        \"icmpType\": \"<integer>\",\n        \"portRangeStart\": \"<integer>\",\n        \"portRangeEnd\": \"<integer>\",\n        \"type\": \"EGRESS\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"forwarding-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules?pretty=true&depth=0&offset=0&limit=1000",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
																		},
																		{
																			"key": "limit",
																			"value": "1000",
																			"description": "The maximum number of elements to return (use together with offset for pagination)."
																		}
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "securityGroupId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create Firewall rule to a Security Group",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId",
																"rules"
															],
															"variable": [
																{
																	"key": "datacenterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the data center"
																},
																{
																	"key": "securityGroupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the security group."
																}
															]
														},
														"description": "Create one firewall rule and attach it to the existing security group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "securityGroupId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a rate limit.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"protocol\": \"VRRP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv6\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"INGRESS\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"protocol\": \"TCP\",\n    \"name\": \"<string>\",\n    \"sourceMac\": \"<string>\",\n    \"ipVersion\": \"IPv4\",\n    \"sourceIp\": \"<string>\",\n    \"targetIp\": \"<string>\",\n    \"icmpCode\": \"<integer>\",\n    \"icmpType\": \"<integer>\",\n    \"portRangeStart\": \"<integer>\",\n    \"portRangeEnd\": \"<integer>\",\n    \"type\": \"EGRESS\"\n  },\n  \"type\": \"user\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datacenters",
																		":datacenterId",
																		"securitygroups",
																		":securityGroupId",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "datacenterId"
																		},
																		{
																			"key": "securityGroupId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve a Security Group",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups",
														":securityGroupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center"
														},
														{
															"key": "securityGroupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the security group."
														}
													]
												},
												"description": "Retrieves the attributes of a given Security Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a rate limit.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"ANY\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"EGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"ESP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n    },\n    \"servers\": {\n      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify Security Group",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups",
														":securityGroupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "securityGroupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Security Group."
														}
													]
												},
												"description": "Modify the properties of the specified Security Group within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"ANY\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"EGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"ESP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n    },\n    \"servers\": {\n      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partially modify Security Group",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups",
														":securityGroupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "securityGroupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Security Group."
														}
													]
												},
												"description": "Modify the properties of the specified Security Group within the data center."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"ANY\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"EGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"ESP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n    },\n    \"servers\": {\n      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a Security Group",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups",
														":securityGroupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														}
													],
													"variable": [
														{
															"key": "datacenterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the data center."
														},
														{
															"key": "securityGroupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Security Group."
														}
													]
												},
												"description": "Deletes the specified Security Group."
											},
											"response": [
												{
													"name": "Accepted. The request has been accepted for processing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a rate limit.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups/:securityGroupId?pretty=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datacenters",
																":datacenterId",
																"securitygroups",
																":securityGroupId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																}
															],
															"variable": [
																{
																	"key": "datacenterId"
																},
																{
																	"key": "securityGroupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Security Groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0&offset=0&limit=1000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"securitygroups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "1000",
													"description": "The maximum number of elements to return (use together with offset for pagination)."
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Retrieve a list of available security groups."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a rate limit.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"natgateway-rule\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"ipblock\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ICMP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"node\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"UDP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv6\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UPDATING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nic\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      },\n      \"entities\": {\n        \"rules\": {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"protocol\": \"ESP\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"EGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"protocol\": \"ICMPv6\",\n                \"name\": \"<string>\",\n                \"sourceMac\": \"<string>\",\n                \"ipVersion\": \"IPv4\",\n                \"sourceIp\": \"<string>\",\n                \"targetIp\": \"<string>\",\n                \"icmpCode\": \"<integer>\",\n                \"icmpType\": \"<integer>\",\n                \"portRangeStart\": \"<integer>\",\n                \"portRangeEnd\": \"<integer>\",\n                \"type\": \"INGRESS\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"nics\": {\n          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n        },\n        \"servers\": {\n          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0&offset=0&limit=1000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
														},
														{
															"key": "limit",
															"value": "1000",
															"description": "The maximum number of elements to return (use together with offset for pagination)."
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Security Group",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId",
												"securitygroups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the data center."
												}
											]
										},
										"description": "Creates a security group within the data center. This will allow you to define which IP addresses and networks have access to your servers."
									},
									"response": [
										{
											"name": "Accepted. The request has been accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a rate limit.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"snapshot\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"SUSPENDED\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"protocol\": \"ANY\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv6\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"EGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          }\n        },\n        {\n          \"properties\": {\n            \"protocol\": \"ESP\",\n            \"name\": \"<string>\",\n            \"sourceMac\": \"<string>\",\n            \"ipVersion\": \"IPv4\",\n            \"sourceIp\": \"<string>\",\n            \"targetIp\": \"<string>\",\n            \"icmpCode\": \"<integer>\",\n            \"icmpType\": \"<integer>\",\n            \"portRangeStart\": \"<integer>\",\n            \"portRangeEnd\": \"<integer>\",\n            \"type\": \"INGRESS\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"AVAILABLE\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"nics\": {\n      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n    },\n    \"servers\": {\n      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code:\n  400 (parse error),\n  401 (auth error),\n  402 (trial access),\n  403 (insufficient privileges),\n  404 (not found),\n  405 (unsupported HTTP method),\n  415 (unsupported content type),\n  422 (validation error),\n  429 (request rate ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"entities\": {\n    \"rules\": {\n      \"type\": \"ipblock\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datacenters/:datacenterId/securitygroups?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datacenters",
														":datacenterId",
														"securitygroups"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. GET /datacenters/[ID]\n  - depth=0: Only direct properties are included;\n             children (servers and other elements) are not included.\n  - depth=1: Direct properties and children references are included.\n  - depth=2: Direct properties and children properties are included.\n  - depth=3: Direct properties and children properties and children's children are included.\n  - depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "datacenterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve data centers",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters",
										":datacenterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "datacenterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the data center."
										}
									]
								},
								"description": "Retrieve data centers by resource ID. This value is in the response body when the data center is created, and in the list of the data centers, returned by GET."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"features\": [\n      \"<string>\"\n    ],\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuArchitecture\": [\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      }\n    ],\n    \"gpuArchitecture\": [\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"defaultSecurityGroupId\": \"<uuid>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"pcc\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DESTROYING\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"templateUuid\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hostname\": \"<string>\",\n            \"cores\": \"<integer>\",\n            \"ram\": \"<integer>\",\n            \"availabilityZone\": \"ZONE_2\",\n            \"vmState\": \"BLOCKED\",\n            \"bootCdrom\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\"\n            },\n            \"bootVolume\": {\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\"\n            },\n            \"cpuFamily\": \"<string>\",\n            \"type\": \"<string>\",\n            \"placementGroupId\": \"<string>\",\n            \"nicMultiQueue\": false\n          },\n          \"id\": \"<string>\",\n          \"type\": \"user\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_HIBERNATING\"\n          },\n          \"entities\": {\n            \"cdroms\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"licenceType\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"location\": \"<string>\",\n                    \"size\": \"<number>\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"cpuHotUnplug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"ramHotUnplug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"discScsiHotPlug\": \"<boolean>\",\n                    \"discScsiHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"applicationType\": \"UNKNOWN\",\n                    \"imageType\": \"CDROM\",\n                    \"public\": \"<boolean>\",\n                    \"imageAliases\": [\n                      \"<string>\"\n                    ],\n                    \"cloudInit\": \"NONE\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"volumes\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"size\": \"<number>\",\n                    \"name\": \"<string>\",\n                    \"type\": \"HDD\",\n                    \"availabilityZone\": \"ZONE_1\",\n                    \"image\": \"<string>\",\n                    \"imagePassword\": \"<string>\",\n                    \"imageAlias\": \"<string>\",\n                    \"sshKeys\": [\n                      \"<string>\"\n                    ],\n                    \"bus\": \"UNKNOWN\",\n                    \"licenceType\": \"<string>\",\n                    \"applicationType\": \"UNKNOWN\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"deviceNumber\": \"<long>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"backupunitId\": \"<uuid>\",\n                    \"userData\": \"<string>\",\n                    \"bootServer\": \"<string>\",\n                    \"bootOrder\": \"AUTO\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"security-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"flow-log\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"BIDIRECTIONAL\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMPv6\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv6\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"label\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"INACTIVE\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"k8s\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"loadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"gpus\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"vendor\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"model\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"HDD\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"VIRTIO\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"node\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"loadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\",\n            \"dhcp\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"INACTIVE\"\n          },\n          \"entities\": {\n            \"balancednics\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ALL\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"INGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"target-group\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"TCP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"loadbalancer\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_UPDATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"lans\": {\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ipFailover\": [\n              {\n                \"ip\": \"<string>\",\n                \"nicUuid\": \"<string>\"\n              }\n            ],\n            \"ipv4CidrBlock\": \"<string>\",\n            \"ipv6CidrBlock\": \"<string>\",\n            \"pcc\": \"<string>\",\n            \"public\": \"<boolean>\",\n            \"vni\": \"<integer>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"EGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"EGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_SUSPENDED\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"image\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"nodepool\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_HIBERNATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"networkloadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerLan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"targetLan\": \"<integer>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"lbPrivateIps\": [\n              \"<string>\"\n            ],\n            \"centralLogging\": \"<boolean>\",\n            \"loggingFormat\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"request\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"forwardingrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"algorithm\": \"ROUND_ROBIN\",\n                    \"listenerIp\": \"<string>\",\n                    \"listenerPort\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"protocol\": \"TCP\",\n                    \"targets\": [\n                      {\n                        \"ip\": \"<string>\",\n                        \"port\": \"<integer>\",\n                        \"weight\": \"<integer>\",\n                        \"proxyProtocol\": \"none\",\n                        \"healthCheck\": {\n                          \"check\": \"<boolean>\",\n                          \"checkInterval\": \"<integer>\",\n                          \"maintenance\": \"<boolean>\"\n                        }\n                      }\n                    ],\n                    \"healthCheck\": {\n                      \"clientTimeout\": \"<integer>\",\n                      \"connectTimeout\": \"<integer>\",\n                      \"targetTimeout\": \"<integer>\",\n                      \"retries\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"natgateways\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIps\": [\n              \"<string>\"\n            ],\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"gatewayIps\": [\n                  \"<string>\"\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"publicIp\": \"<string>\",\n                    \"sourceSubnet\": \"<string>\",\n                    \"type\": \"SNAT\",\n                    \"protocol\": \"TCP\",\n                    \"targetSubnet\": \"<string>\",\n                    \"targetPortRange\": {\n                      \"start\": \"<integer>\",\n                      \"end\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ]\n            },\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify a Data Center by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"defaultSecurityGroupId\": \"<uuid>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"firewall-rule\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"request-status\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters",
										":datacenterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "datacenterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the data center."
										}
									]
								},
								"description": "Modifies the properties of the specified data center, rename it, or change the description."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"defaultSecurityGroupId\": \"<uuid>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"firewall-rule\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"request-status\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"features\": [\n      \"<string>\"\n    ],\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuArchitecture\": [\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      }\n    ],\n    \"gpuArchitecture\": [\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"defaultSecurityGroupId\": \"<uuid>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"pcc\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DESTROYING\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"templateUuid\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hostname\": \"<string>\",\n            \"cores\": \"<integer>\",\n            \"ram\": \"<integer>\",\n            \"availabilityZone\": \"ZONE_2\",\n            \"vmState\": \"BLOCKED\",\n            \"bootCdrom\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\"\n            },\n            \"bootVolume\": {\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\"\n            },\n            \"cpuFamily\": \"<string>\",\n            \"type\": \"<string>\",\n            \"placementGroupId\": \"<string>\",\n            \"nicMultiQueue\": false\n          },\n          \"id\": \"<string>\",\n          \"type\": \"user\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_HIBERNATING\"\n          },\n          \"entities\": {\n            \"cdroms\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"licenceType\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"location\": \"<string>\",\n                    \"size\": \"<number>\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"cpuHotUnplug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"ramHotUnplug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"discScsiHotPlug\": \"<boolean>\",\n                    \"discScsiHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"applicationType\": \"UNKNOWN\",\n                    \"imageType\": \"CDROM\",\n                    \"public\": \"<boolean>\",\n                    \"imageAliases\": [\n                      \"<string>\"\n                    ],\n                    \"cloudInit\": \"NONE\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"volumes\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"size\": \"<number>\",\n                    \"name\": \"<string>\",\n                    \"type\": \"HDD\",\n                    \"availabilityZone\": \"ZONE_1\",\n                    \"image\": \"<string>\",\n                    \"imagePassword\": \"<string>\",\n                    \"imageAlias\": \"<string>\",\n                    \"sshKeys\": [\n                      \"<string>\"\n                    ],\n                    \"bus\": \"UNKNOWN\",\n                    \"licenceType\": \"<string>\",\n                    \"applicationType\": \"UNKNOWN\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"deviceNumber\": \"<long>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"backupunitId\": \"<uuid>\",\n                    \"userData\": \"<string>\",\n                    \"bootServer\": \"<string>\",\n                    \"bootOrder\": \"AUTO\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"security-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"flow-log\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"BIDIRECTIONAL\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMPv6\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv6\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"label\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"INACTIVE\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"k8s\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"loadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"gpus\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"vendor\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"model\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"HDD\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"VIRTIO\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"node\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"loadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\",\n            \"dhcp\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"INACTIVE\"\n          },\n          \"entities\": {\n            \"balancednics\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ALL\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"INGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"target-group\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"TCP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"loadbalancer\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_UPDATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"lans\": {\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ipFailover\": [\n              {\n                \"ip\": \"<string>\",\n                \"nicUuid\": \"<string>\"\n              }\n            ],\n            \"ipv4CidrBlock\": \"<string>\",\n            \"ipv6CidrBlock\": \"<string>\",\n            \"pcc\": \"<string>\",\n            \"public\": \"<boolean>\",\n            \"vni\": \"<integer>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"EGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"EGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_SUSPENDED\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"image\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"nodepool\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_HIBERNATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"networkloadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerLan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"targetLan\": \"<integer>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"lbPrivateIps\": [\n              \"<string>\"\n            ],\n            \"centralLogging\": \"<boolean>\",\n            \"loggingFormat\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"request\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"forwardingrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"algorithm\": \"ROUND_ROBIN\",\n                    \"listenerIp\": \"<string>\",\n                    \"listenerPort\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"protocol\": \"TCP\",\n                    \"targets\": [\n                      {\n                        \"ip\": \"<string>\",\n                        \"port\": \"<integer>\",\n                        \"weight\": \"<integer>\",\n                        \"proxyProtocol\": \"none\",\n                        \"healthCheck\": {\n                          \"check\": \"<boolean>\",\n                          \"checkInterval\": \"<integer>\",\n                          \"maintenance\": \"<boolean>\"\n                        }\n                      }\n                    ],\n                    \"healthCheck\": {\n                      \"clientTimeout\": \"<integer>\",\n                      \"connectTimeout\": \"<integer>\",\n                      \"targetTimeout\": \"<integer>\",\n                      \"retries\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"natgateways\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIps\": [\n              \"<string>\"\n            ],\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"gatewayIps\": [\n                  \"<string>\"\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"publicIp\": \"<string>\",\n                    \"sourceSubnet\": \"<string>\",\n                    \"type\": \"SNAT\",\n                    \"protocol\": \"TCP\",\n                    \"targetSubnet\": \"<string>\",\n                    \"targetPortRange\": {\n                      \"start\": \"<integer>\",\n                      \"end\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ]\n            },\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"defaultSecurityGroupId\": \"<uuid>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"firewall-rule\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"nodepool\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"request-status\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"pcc\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete data centers",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters",
										":datacenterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "datacenterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the data center."
										}
									]
								},
								"description": "Delete the specified data center and all the elements it contains. This method is destructive and should be used carefully."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify a Data Center by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"location\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"defaultSecurityGroupId\": \"<uuid>\",\n  \"createDefaultSecurityGroup\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters",
										":datacenterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "datacenterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the data center."
										}
									]
								},
								"description": "Updates the properties of the specified data center, rename it, or change the description."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"location\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"defaultSecurityGroupId\": \"<uuid>\",\n  \"createDefaultSecurityGroup\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"features\": [\n      \"<string>\"\n    ],\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuArchitecture\": [\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      }\n    ],\n    \"gpuArchitecture\": [\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"defaultSecurityGroupId\": \"<uuid>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"pcc\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DESTROYING\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"templateUuid\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hostname\": \"<string>\",\n            \"cores\": \"<integer>\",\n            \"ram\": \"<integer>\",\n            \"availabilityZone\": \"ZONE_2\",\n            \"vmState\": \"BLOCKED\",\n            \"bootCdrom\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\"\n            },\n            \"bootVolume\": {\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\"\n            },\n            \"cpuFamily\": \"<string>\",\n            \"type\": \"<string>\",\n            \"placementGroupId\": \"<string>\",\n            \"nicMultiQueue\": false\n          },\n          \"id\": \"<string>\",\n          \"type\": \"user\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_HIBERNATING\"\n          },\n          \"entities\": {\n            \"cdroms\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"licenceType\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"location\": \"<string>\",\n                    \"size\": \"<number>\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"cpuHotUnplug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"ramHotUnplug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"discScsiHotPlug\": \"<boolean>\",\n                    \"discScsiHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"applicationType\": \"UNKNOWN\",\n                    \"imageType\": \"CDROM\",\n                    \"public\": \"<boolean>\",\n                    \"imageAliases\": [\n                      \"<string>\"\n                    ],\n                    \"cloudInit\": \"NONE\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"volumes\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"size\": \"<number>\",\n                    \"name\": \"<string>\",\n                    \"type\": \"HDD\",\n                    \"availabilityZone\": \"ZONE_1\",\n                    \"image\": \"<string>\",\n                    \"imagePassword\": \"<string>\",\n                    \"imageAlias\": \"<string>\",\n                    \"sshKeys\": [\n                      \"<string>\"\n                    ],\n                    \"bus\": \"UNKNOWN\",\n                    \"licenceType\": \"<string>\",\n                    \"applicationType\": \"UNKNOWN\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"deviceNumber\": \"<long>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"backupunitId\": \"<uuid>\",\n                    \"userData\": \"<string>\",\n                    \"bootServer\": \"<string>\",\n                    \"bootOrder\": \"AUTO\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"security-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"flow-log\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"BIDIRECTIONAL\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMPv6\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv6\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"label\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"INACTIVE\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"k8s\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"loadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"gpus\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"vendor\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"model\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"HDD\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"VIRTIO\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"node\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"loadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\",\n            \"dhcp\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"INACTIVE\"\n          },\n          \"entities\": {\n            \"balancednics\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ALL\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"INGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"target-group\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"TCP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"loadbalancer\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_UPDATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"lans\": {\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ipFailover\": [\n              {\n                \"ip\": \"<string>\",\n                \"nicUuid\": \"<string>\"\n              }\n            ],\n            \"ipv4CidrBlock\": \"<string>\",\n            \"ipv6CidrBlock\": \"<string>\",\n            \"pcc\": \"<string>\",\n            \"public\": \"<boolean>\",\n            \"vni\": \"<integer>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"EGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"EGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_SUSPENDED\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"image\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"nodepool\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_HIBERNATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"networkloadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerLan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"targetLan\": \"<integer>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"lbPrivateIps\": [\n              \"<string>\"\n            ],\n            \"centralLogging\": \"<boolean>\",\n            \"loggingFormat\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"request\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"forwardingrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"algorithm\": \"ROUND_ROBIN\",\n                    \"listenerIp\": \"<string>\",\n                    \"listenerPort\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"protocol\": \"TCP\",\n                    \"targets\": [\n                      {\n                        \"ip\": \"<string>\",\n                        \"port\": \"<integer>\",\n                        \"weight\": \"<integer>\",\n                        \"proxyProtocol\": \"none\",\n                        \"healthCheck\": {\n                          \"check\": \"<boolean>\",\n                          \"checkInterval\": \"<integer>\",\n                          \"maintenance\": \"<boolean>\"\n                        }\n                      }\n                    ],\n                    \"healthCheck\": {\n                      \"clientTimeout\": \"<integer>\",\n                      \"connectTimeout\": \"<integer>\",\n                      \"targetTimeout\": \"<integer>\",\n                      \"retries\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"natgateways\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIps\": [\n              \"<string>\"\n            ],\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"gatewayIps\": [\n                  \"<string>\"\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"publicIp\": \"<string>\",\n                    \"sourceSubnet\": \"<string>\",\n                    \"type\": \"SNAT\",\n                    \"protocol\": \"TCP\",\n                    \"targetSubnet\": \"<string>\",\n                    \"targetPortRange\": {\n                      \"start\": \"<integer>\",\n                      \"end\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ]\n            },\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"location\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"defaultSecurityGroupId\": \"<uuid>\",\n  \"createDefaultSecurityGroup\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datacenters/:datacenterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datacenters",
												":datacenterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "datacenterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List your data centers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0&offset=0&limit=1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datacenters"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
								},
								{
									"key": "limit",
									"value": "1000",
									"description": "The maximum number of elements to return (use together with offset for pagination)."
								}
							]
						},
						"description": "List the data centers for your account. Default limit is the first 100 items; use pagination query parameters for listing more items."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0&offset=0&limit=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"gpu\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"version\": \"<integer>\",\n        \"features\": [\n          \"<string>\"\n        ],\n        \"secAuthProtection\": \"<boolean>\",\n        \"cpuArchitecture\": [\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          }\n        ],\n        \"gpuArchitecture\": [\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          }\n        ],\n        \"ipv6CidrBlock\": \"<string>\",\n        \"defaultSecurityGroupId\": \"<uuid>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"request\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      },\n      \"entities\": {\n        \"servers\": {\n          \"id\": \"<string>\",\n          \"type\": \"s3key\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"templateUuid\": \"<string>\",\n                \"name\": \"<string>\",\n                \"hostname\": \"<string>\",\n                \"cores\": \"<integer>\",\n                \"ram\": \"<integer>\",\n                \"availabilityZone\": \"ZONE_2\",\n                \"vmState\": \"RUNNING\",\n                \"bootCdrom\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"datacenter\",\n                  \"href\": \"<uri>\"\n                },\n                \"bootVolume\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"gpu\",\n                  \"href\": \"<uri>\"\n                },\n                \"cpuFamily\": \"<string>\",\n                \"type\": \"<string>\",\n                \"placementGroupId\": \"<string>\",\n                \"nicMultiQueue\": false\n              },\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"MAINTENANCE\"\n              },\n              \"entities\": {\n                \"cdroms\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"licenceType\": \"<string>\",\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\",\n                        \"location\": \"<string>\",\n                        \"size\": \"<number>\",\n                        \"cpuHotPlug\": \"<boolean>\",\n                        \"cpuHotUnplug\": \"<boolean>\",\n                        \"ramHotPlug\": \"<boolean>\",\n                        \"ramHotUnplug\": \"<boolean>\",\n                        \"nicHotPlug\": \"<boolean>\",\n                        \"nicHotUnplug\": \"<boolean>\",\n                        \"discVirtioHotPlug\": \"<boolean>\",\n                        \"discVirtioHotUnplug\": \"<boolean>\",\n                        \"discScsiHotPlug\": \"<boolean>\",\n                        \"discScsiHotUnplug\": \"<boolean>\",\n                        \"exposeSerial\": false,\n                        \"requireLegacyBios\": true,\n                        \"applicationType\": \"UNKNOWN\",\n                        \"imageType\": \"CDROM\",\n                        \"public\": \"<boolean>\",\n                        \"imageAliases\": [\n                          \"<string>\"\n                        ],\n                        \"cloudInit\": \"V1\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"applicationloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"volumes\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"size\": \"<number>\",\n                        \"name\": \"<string>\",\n                        \"type\": \"ISO\",\n                        \"availabilityZone\": \"ZONE_3\",\n                        \"image\": \"<string>\",\n                        \"imagePassword\": \"<string>\",\n                        \"imageAlias\": \"<string>\",\n                        \"sshKeys\": [\n                          \"<string>\"\n                        ],\n                        \"bus\": \"VIRTIO\",\n                        \"licenceType\": \"<string>\",\n                        \"applicationType\": \"UNKNOWN\",\n                        \"cpuHotPlug\": \"<boolean>\",\n                        \"ramHotPlug\": \"<boolean>\",\n                        \"nicHotPlug\": \"<boolean>\",\n                        \"nicHotUnplug\": \"<boolean>\",\n                        \"discVirtioHotPlug\": \"<boolean>\",\n                        \"discVirtioHotUnplug\": \"<boolean>\",\n                        \"exposeSerial\": false,\n                        \"requireLegacyBios\": true,\n                        \"deviceNumber\": \"<long>\",\n                        \"pciSlot\": \"<integer>\",\n                        \"backupunitId\": \"<uuid>\",\n                        \"userData\": \"<string>\",\n                        \"bootServer\": \"<string>\",\n                        \"bootOrder\": \"AUTO\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"contract\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"lan\": \"<integer>\",\n                        \"name\": \"<string>\",\n                        \"mac\": \"<string>\",\n                        \"ips\": [\n                          \"<string>\"\n                        ],\n                        \"dhcp\": true,\n                        \"ipv6Ips\": [\n                          \"<string>\"\n                        ],\n                        \"ipv6CidrBlock\": \"<string>\",\n                        \"dhcpv6\": true,\n                        \"firewallActive\": \"<boolean>\",\n                        \"firewallType\": \"EGRESS\",\n                        \"deviceNumber\": \"<integer>\",\n                        \"pciSlot\": \"<integer>\",\n                        \"vnet\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"nic\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      },\n                      \"entities\": {\n                        \"flowlogs\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"s3key\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"action\": \"ALL\",\n                                \"bucket\": \"<string>\",\n                                \"direction\": \"EGRESS\",\n                                \"name\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"datacenter\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_HIBERNATING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"firewallrules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"image\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ESP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv6\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"INGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"label\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"DESTROYING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"securitygroups\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"server\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"name\": \"<string>\",\n                                \"description\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"TERMINATED\"\n                              },\n                              \"entities\": {\n                                \"rules\": {\n                                  \"id\": \"<string>\",\n                                  \"type\": \"datacenter\",\n                                  \"href\": \"<uri>\",\n                                  \"items\": [\n                                    {\n                                      \"properties\": {\n                                        \"protocol\": \"TCP\",\n                                        \"name\": \"<string>\",\n                                        \"sourceMac\": \"<string>\",\n                                        \"ipVersion\": \"IPv4\",\n                                        \"sourceIp\": \"<string>\",\n                                        \"targetIp\": \"<string>\",\n                                        \"icmpCode\": \"<integer>\",\n                                        \"icmpType\": \"<integer>\",\n                                        \"portRangeStart\": \"<integer>\",\n                                        \"portRangeEnd\": \"<integer>\",\n                                        \"type\": \"EGRESS\"\n                                      },\n                                      \"id\": \"<string>\",\n                                      \"type\": \"k8s\",\n                                      \"href\": \"<uri>\",\n                                      \"metadata\": {\n                                        \"etag\": \"<string>\",\n                                        \"createdDate\": \"<dateTime>\",\n                                        \"createdBy\": \"<string>\",\n                                        \"createdByUserId\": \"<string>\",\n                                        \"lastModifiedDate\": \"<dateTime>\",\n                                        \"lastModifiedBy\": \"<string>\",\n                                        \"lastModifiedByUserId\": \"<string>\",\n                                        \"state\": \"MAINTENANCE\"\n                                      }\n                                    }\n                                  ],\n                                  \"offset\": \"<number>\",\n                                  \"limit\": \"<number>\",\n                                  \"_links\": {\n                                    \"prev\": \"<uri>\",\n                                    \"self\": \"<uri>\",\n                                    \"next\": \"<uri>\"\n                                  }\n                                },\n                                \"nics\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                                },\n                                \"servers\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                                }\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"securitygroups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"description\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"forwarding-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_DESTROYING\"\n                      },\n                      \"entities\": {\n                        \"rules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"request-status\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"AH\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"server\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"nics\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                        },\n                        \"servers\": {\n                          \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"gpus\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"vendor\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"model\": \"<string>\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"nic\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UPDATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"volumes\": {\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"size\": \"<number>\",\n                \"name\": \"<string>\",\n                \"type\": \"DAS\",\n                \"availabilityZone\": \"ZONE_1\",\n                \"image\": \"<string>\",\n                \"imagePassword\": \"<string>\",\n                \"imageAlias\": \"<string>\",\n                \"sshKeys\": [\n                  \"<string>\"\n                ],\n                \"bus\": \"UNKNOWN\",\n                \"licenceType\": \"<string>\",\n                \"applicationType\": \"UNKNOWN\",\n                \"cpuHotPlug\": \"<boolean>\",\n                \"ramHotPlug\": \"<boolean>\",\n                \"nicHotPlug\": \"<boolean>\",\n                \"nicHotUnplug\": \"<boolean>\",\n                \"discVirtioHotPlug\": \"<boolean>\",\n                \"discVirtioHotUnplug\": \"<boolean>\",\n                \"exposeSerial\": false,\n                \"requireLegacyBios\": true,\n                \"deviceNumber\": \"<long>\",\n                \"pciSlot\": \"<integer>\",\n                \"backupunitId\": \"<uuid>\",\n                \"userData\": \"<string>\",\n                \"bootServer\": \"<string>\",\n                \"bootOrder\": \"AUTO\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_SUSPENDED\"\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"loadbalancers\": {\n          \"id\": \"<string>\",\n          \"type\": \"user\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"ip\": \"<string>\",\n                \"dhcp\": \"<boolean>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              },\n              \"entities\": {\n                \"balancednics\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"k8s\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"lan\": \"<integer>\",\n                        \"name\": \"<string>\",\n                        \"mac\": \"<string>\",\n                        \"ips\": [\n                          \"<string>\"\n                        ],\n                        \"dhcp\": true,\n                        \"ipv6Ips\": [\n                          \"<string>\"\n                        ],\n                        \"ipv6CidrBlock\": \"<string>\",\n                        \"dhcpv6\": true,\n                        \"firewallActive\": \"<boolean>\",\n                        \"firewallType\": \"INGRESS\",\n                        \"deviceNumber\": \"<integer>\",\n                        \"pciSlot\": \"<integer>\",\n                        \"vnet\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"forwarding-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_DESTROYING\"\n                      },\n                      \"entities\": {\n                        \"flowlogs\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"snapshot\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"action\": \"ALL\",\n                                \"bucket\": \"<string>\",\n                                \"direction\": \"BIDIRECTIONAL\",\n                                \"name\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"loadbalancer\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"MAINTENANCE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"firewallrules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"pcc\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"ICMP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"contract\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_DESTROYING\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"securitygroups\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"name\": \"<string>\",\n                                \"description\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"server\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"DESTROYING\"\n                              },\n                              \"entities\": {\n                                \"rules\": {\n                                  \"id\": \"<string>\",\n                                  \"type\": \"backupunit\",\n                                  \"href\": \"<uri>\",\n                                  \"items\": [\n                                    {\n                                      \"properties\": {\n                                        \"protocol\": \"ESP\",\n                                        \"name\": \"<string>\",\n                                        \"sourceMac\": \"<string>\",\n                                        \"ipVersion\": \"IPv4\",\n                                        \"sourceIp\": \"<string>\",\n                                        \"targetIp\": \"<string>\",\n                                        \"icmpCode\": \"<integer>\",\n                                        \"icmpType\": \"<integer>\",\n                                        \"portRangeStart\": \"<integer>\",\n                                        \"portRangeEnd\": \"<integer>\",\n                                        \"type\": \"INGRESS\"\n                                      },\n                                      \"id\": \"<string>\",\n                                      \"type\": \"resource\",\n                                      \"href\": \"<uri>\",\n                                      \"metadata\": {\n                                        \"etag\": \"<string>\",\n                                        \"createdDate\": \"<dateTime>\",\n                                        \"createdBy\": \"<string>\",\n                                        \"createdByUserId\": \"<string>\",\n                                        \"lastModifiedDate\": \"<dateTime>\",\n                                        \"lastModifiedBy\": \"<string>\",\n                                        \"lastModifiedByUserId\": \"<string>\",\n                                        \"state\": \"UNKNOWN\"\n                                      }\n                                    }\n                                  ],\n                                  \"offset\": \"<number>\",\n                                  \"limit\": \"<number>\",\n                                  \"_links\": {\n                                    \"prev\": \"<uri>\",\n                                    \"self\": \"<uri>\",\n                                    \"next\": \"<uri>\"\n                                  }\n                                },\n                                \"nics\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                                },\n                                \"servers\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                                }\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"lans\": {\n          \"id\": \"<string>\",\n          \"type\": \"ipblock\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"ipFailover\": [\n                  {\n                    \"ip\": \"<string>\",\n                    \"nicUuid\": \"<string>\"\n                  }\n                ],\n                \"ipv4CidrBlock\": \"<string>\",\n                \"ipv6CidrBlock\": \"<string>\",\n                \"pcc\": \"<string>\",\n                \"public\": \"<boolean>\",\n                \"vni\": \"<integer>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DESTROYING\"\n              },\n              \"entities\": {\n                \"nics\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"networkloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"lan\": \"<integer>\",\n                        \"name\": \"<string>\",\n                        \"mac\": \"<string>\",\n                        \"ips\": [\n                          \"<string>\"\n                        ],\n                        \"dhcp\": true,\n                        \"ipv6Ips\": [\n                          \"<string>\"\n                        ],\n                        \"ipv6CidrBlock\": \"<string>\",\n                        \"dhcpv6\": true,\n                        \"firewallActive\": \"<boolean>\",\n                        \"firewallType\": \"INGRESS\",\n                        \"deviceNumber\": \"<integer>\",\n                        \"pciSlot\": \"<integer>\",\n                        \"vnet\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      },\n                      \"entities\": {\n                        \"flowlogs\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"contract\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"action\": \"ACCEPTED\",\n                                \"bucket\": \"<string>\",\n                                \"direction\": \"EGRESS\",\n                                \"name\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"s3key\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"BUSY\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"firewallrules\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"snapshot\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"protocol\": \"TCP\",\n                                \"name\": \"<string>\",\n                                \"sourceMac\": \"<string>\",\n                                \"ipVersion\": \"IPv4\",\n                                \"sourceIp\": \"<string>\",\n                                \"targetIp\": \"<string>\",\n                                \"icmpCode\": \"<integer>\",\n                                \"icmpType\": \"<integer>\",\n                                \"portRangeStart\": \"<integer>\",\n                                \"portRangeEnd\": \"<integer>\",\n                                \"type\": \"EGRESS\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"image\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"INACTIVE\"\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        },\n                        \"securitygroups\": {\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"items\": [\n                            {\n                              \"properties\": {\n                                \"name\": \"<string>\",\n                                \"description\": \"<string>\"\n                              },\n                              \"id\": \"<string>\",\n                              \"type\": \"nic\",\n                              \"href\": \"<uri>\",\n                              \"metadata\": {\n                                \"etag\": \"<string>\",\n                                \"createdDate\": \"<dateTime>\",\n                                \"createdBy\": \"<string>\",\n                                \"createdByUserId\": \"<string>\",\n                                \"lastModifiedDate\": \"<dateTime>\",\n                                \"lastModifiedBy\": \"<string>\",\n                                \"lastModifiedByUserId\": \"<string>\",\n                                \"state\": \"FAILED_UPDATING\"\n                              },\n                              \"entities\": {\n                                \"rules\": {\n                                  \"id\": \"<string>\",\n                                  \"type\": \"request\",\n                                  \"href\": \"<uri>\",\n                                  \"items\": [\n                                    {\n                                      \"properties\": {\n                                        \"protocol\": \"TCP\",\n                                        \"name\": \"<string>\",\n                                        \"sourceMac\": \"<string>\",\n                                        \"ipVersion\": \"IPv6\",\n                                        \"sourceIp\": \"<string>\",\n                                        \"targetIp\": \"<string>\",\n                                        \"icmpCode\": \"<integer>\",\n                                        \"icmpType\": \"<integer>\",\n                                        \"portRangeStart\": \"<integer>\",\n                                        \"portRangeEnd\": \"<integer>\",\n                                        \"type\": \"INGRESS\"\n                                      },\n                                      \"id\": \"<string>\",\n                                      \"type\": \"image\",\n                                      \"href\": \"<uri>\",\n                                      \"metadata\": {\n                                        \"etag\": \"<string>\",\n                                        \"createdDate\": \"<dateTime>\",\n                                        \"createdBy\": \"<string>\",\n                                        \"createdByUserId\": \"<string>\",\n                                        \"lastModifiedDate\": \"<dateTime>\",\n                                        \"lastModifiedBy\": \"<string>\",\n                                        \"lastModifiedByUserId\": \"<string>\",\n                                        \"state\": \"ACTIVE\"\n                                      }\n                                    }\n                                  ],\n                                  \"offset\": \"<number>\",\n                                  \"limit\": \"<number>\",\n                                  \"_links\": {\n                                    \"prev\": \"<uri>\",\n                                    \"self\": \"<uri>\",\n                                    \"next\": \"<uri>\"\n                                  }\n                                },\n                                \"nics\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                                },\n                                \"servers\": {\n                                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                                }\n                              }\n                            }\n                          ],\n                          \"offset\": \"<number>\",\n                          \"limit\": \"<number>\",\n                          \"_links\": {\n                            \"prev\": \"<uri>\",\n                            \"self\": \"<uri>\",\n                            \"next\": \"<uri>\"\n                          }\n                        }\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"networkloadbalancers\": {\n          \"id\": \"<string>\",\n          \"type\": \"volume\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"listenerLan\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"targetLan\": \"<integer>\",\n                \"ips\": [\n                  \"<string>\"\n                ],\n                \"lbPrivateIps\": [\n                  \"<string>\"\n                ],\n                \"centralLogging\": \"<boolean>\",\n                \"loggingFormat\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"group\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_MAINTENANCE\"\n              },\n              \"entities\": {\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"natgateway\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"REJECTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"EGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"lan\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"UNKNOWN\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"forwardingrules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"datacenter\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"algorithm\": \"ROUND_ROBIN\",\n                        \"listenerIp\": \"<string>\",\n                        \"listenerPort\": \"<integer>\",\n                        \"name\": \"<string>\",\n                        \"protocol\": \"TCP\",\n                        \"targets\": [\n                          {\n                            \"ip\": \"<string>\",\n                            \"port\": \"<integer>\",\n                            \"weight\": \"<integer>\",\n                            \"proxyProtocol\": \"none\",\n                            \"healthCheck\": {\n                              \"check\": \"<boolean>\",\n                              \"checkInterval\": \"<integer>\",\n                              \"maintenance\": \"<boolean>\"\n                            }\n                          }\n                        ],\n                        \"healthCheck\": {\n                          \"clientTimeout\": \"<integer>\",\n                          \"connectTimeout\": \"<integer>\",\n                          \"targetTimeout\": \"<integer>\",\n                          \"retries\": \"<integer>\"\n                        }\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"applicationloadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"INACTIVE\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"natgateways\": {\n          \"id\": \"<string>\",\n          \"type\": \"natgateway-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"publicIps\": [\n                  \"<string>\"\n                ],\n                \"lans\": [\n                  {\n                    \"id\": \"<integer>\",\n                    \"gatewayIps\": [\n                      \"<string>\"\n                    ]\n                  }\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"flow-log\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"HIBERNATING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"flow-log\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"name\": \"<string>\",\n                        \"publicIp\": \"<string>\",\n                        \"sourceSubnet\": \"<string>\",\n                        \"type\": \"SNAT\",\n                        \"protocol\": \"ICMP\",\n                        \"targetSubnet\": \"<string>\",\n                        \"targetPortRange\": {\n                          \"start\": \"<integer>\",\n                          \"end\": \"<integer>\"\n                        }\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"server\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"ACTIVE\"\n                      }\n                    }\n                  ]\n                },\n                \"flowlogs\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"action\": \"ACCEPTED\",\n                        \"bucket\": \"<string>\",\n                        \"direction\": \"INGRESS\",\n                        \"name\": \"<string>\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"forwarding-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"FAILED_HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        },\n        \"securitygroups\": {\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_DESTROYING\"\n              },\n              \"entities\": {\n                \"rules\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"forwarding-rule\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"properties\": {\n                        \"protocol\": \"ICMPv6\",\n                        \"name\": \"<string>\",\n                        \"sourceMac\": \"<string>\",\n                        \"ipVersion\": \"IPv6\",\n                        \"sourceIp\": \"<string>\",\n                        \"targetIp\": \"<string>\",\n                        \"icmpCode\": \"<integer>\",\n                        \"icmpType\": \"<integer>\",\n                        \"portRangeStart\": \"<integer>\",\n                        \"portRangeEnd\": \"<integer>\",\n                        \"type\": \"EGRESS\"\n                      },\n                      \"id\": \"<string>\",\n                      \"type\": \"firewall-rule\",\n                      \"href\": \"<uri>\",\n                      \"metadata\": {\n                        \"etag\": \"<string>\",\n                        \"createdDate\": \"<dateTime>\",\n                        \"createdBy\": \"<string>\",\n                        \"createdByUserId\": \"<string>\",\n                        \"lastModifiedDate\": \"<dateTime>\",\n                        \"lastModifiedBy\": \"<string>\",\n                        \"lastModifiedByUserId\": \"<string>\",\n                        \"state\": \"HIBERNATING\"\n                      }\n                    }\n                  ],\n                  \"offset\": \"<number>\",\n                  \"limit\": \"<number>\",\n                  \"_links\": {\n                    \"prev\": \"<uri>\",\n                    \"self\": \"<uri>\",\n                    \"next\": \"<uri>\"\n                  }\n                },\n                \"nics\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                },\n                \"servers\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                }\n              }\n            }\n          ],\n          \"offset\": \"<number>\",\n          \"limit\": \"<number>\",\n          \"_links\": {\n            \"prev\": \"<uri>\",\n            \"self\": \"<uri>\",\n            \"next\": \"<uri>\"\n          }\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0&offset=0&limit=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Data Center",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"nic\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datacenters"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Creates new data centers, and data centers that already contain elements, such as servers and storage volumes.\n\nVirtual data centers are the foundation of the platform; they act as logical containers for all other objects you create, such as servers and storage volumes. You can provision as many data centers as needed. Data centers have their own private networks and are logically segmented from each other to create isolation."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"nic\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "Location",
									"value": "https://s/requests/I/status",
									"description": {
										"content": "Callback URL to poll async operation status.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"features\": [\n      \"<string>\"\n    ],\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuArchitecture\": [\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      }\n    ],\n    \"gpuArchitecture\": [\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ],\n    \"ipv6CidrBlock\": \"<string>\",\n    \"defaultSecurityGroupId\": \"<uuid>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"pcc\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DESTROYING\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"templateUuid\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hostname\": \"<string>\",\n            \"cores\": \"<integer>\",\n            \"ram\": \"<integer>\",\n            \"availabilityZone\": \"ZONE_2\",\n            \"vmState\": \"BLOCKED\",\n            \"bootCdrom\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\"\n            },\n            \"bootVolume\": {\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\"\n            },\n            \"cpuFamily\": \"<string>\",\n            \"type\": \"<string>\",\n            \"placementGroupId\": \"<string>\",\n            \"nicMultiQueue\": false\n          },\n          \"id\": \"<string>\",\n          \"type\": \"user\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_HIBERNATING\"\n          },\n          \"entities\": {\n            \"cdroms\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"licenceType\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\",\n                    \"location\": \"<string>\",\n                    \"size\": \"<number>\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"cpuHotUnplug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"ramHotUnplug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"discScsiHotPlug\": \"<boolean>\",\n                    \"discScsiHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"applicationType\": \"UNKNOWN\",\n                    \"imageType\": \"CDROM\",\n                    \"public\": \"<boolean>\",\n                    \"imageAliases\": [\n                      \"<string>\"\n                    ],\n                    \"cloudInit\": \"NONE\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"node\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_DESTROYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"volumes\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"size\": \"<number>\",\n                    \"name\": \"<string>\",\n                    \"type\": \"HDD\",\n                    \"availabilityZone\": \"ZONE_1\",\n                    \"image\": \"<string>\",\n                    \"imagePassword\": \"<string>\",\n                    \"imageAlias\": \"<string>\",\n                    \"sshKeys\": [\n                      \"<string>\"\n                    ],\n                    \"bus\": \"UNKNOWN\",\n                    \"licenceType\": \"<string>\",\n                    \"applicationType\": \"UNKNOWN\",\n                    \"cpuHotPlug\": \"<boolean>\",\n                    \"ramHotPlug\": \"<boolean>\",\n                    \"nicHotPlug\": \"<boolean>\",\n                    \"nicHotUnplug\": \"<boolean>\",\n                    \"discVirtioHotPlug\": \"<boolean>\",\n                    \"discVirtioHotUnplug\": \"<boolean>\",\n                    \"exposeSerial\": false,\n                    \"requireLegacyBios\": true,\n                    \"deviceNumber\": \"<long>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"backupunitId\": \"<uuid>\",\n                    \"userData\": \"<string>\",\n                    \"bootServer\": \"<string>\",\n                    \"bootOrder\": \"AUTO\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"security-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"flow-log\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"BIDIRECTIONAL\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"natgateway\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"UDP\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"loadbalancer\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_MAINTENANCE\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"resource\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"MAINTENANCE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"snapshot\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMPv6\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv6\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"label\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"INACTIVE\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"securitygroups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"description\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"k8s\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  },\n                  \"entities\": {\n                    \"rules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"loadbalancer\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"nics\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                    },\n                    \"servers\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"gpus\": {\n              \"id\": \"<string>\",\n              \"type\": \"networkloadbalancer\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"vendor\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"model\": \"<string>\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DEPLOYING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"volumes\": {\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"size\": \"<number>\",\n            \"name\": \"<string>\",\n            \"type\": \"HDD\",\n            \"availabilityZone\": \"ZONE_1\",\n            \"image\": \"<string>\",\n            \"imagePassword\": \"<string>\",\n            \"imageAlias\": \"<string>\",\n            \"sshKeys\": [\n              \"<string>\"\n            ],\n            \"bus\": \"VIRTIO\",\n            \"licenceType\": \"<string>\",\n            \"applicationType\": \"UNKNOWN\",\n            \"cpuHotPlug\": \"<boolean>\",\n            \"ramHotPlug\": \"<boolean>\",\n            \"nicHotPlug\": \"<boolean>\",\n            \"nicHotUnplug\": \"<boolean>\",\n            \"discVirtioHotPlug\": \"<boolean>\",\n            \"discVirtioHotUnplug\": \"<boolean>\",\n            \"exposeSerial\": false,\n            \"requireLegacyBios\": true,\n            \"deviceNumber\": \"<long>\",\n            \"pciSlot\": \"<integer>\",\n            \"backupunitId\": \"<uuid>\",\n            \"userData\": \"<string>\",\n            \"bootServer\": \"<string>\",\n            \"bootOrder\": \"AUTO\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"node\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"DEPLOYING\"\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"loadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\",\n            \"dhcp\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"INACTIVE\"\n          },\n          \"entities\": {\n            \"balancednics\": {\n              \"id\": \"<string>\",\n              \"type\": \"firewall-rule\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"INGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"DESTROYING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ALL\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"INGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"location\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"DEPLOYING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"datacenter\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"ANY\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv6\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"EGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"natgateway-rule\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"BUSY\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"location\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"resource\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"INACTIVE\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"target-group\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"TCP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"loadbalancer\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_UPDATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"lans\": {\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"ipFailover\": [\n              {\n                \"ip\": \"<string>\",\n                \"nicUuid\": \"<string>\"\n              }\n            ],\n            \"ipv4CidrBlock\": \"<string>\",\n            \"ipv6CidrBlock\": \"<string>\",\n            \"pcc\": \"<string>\",\n            \"public\": \"<boolean>\",\n            \"vni\": \"<integer>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"security-group\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"nics\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"lan\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"mac\": \"<string>\",\n                    \"ips\": [\n                      \"<string>\"\n                    ],\n                    \"dhcp\": true,\n                    \"ipv6Ips\": [\n                      \"<string>\"\n                    ],\n                    \"ipv6CidrBlock\": \"<string>\",\n                    \"dhcpv6\": true,\n                    \"firewallActive\": \"<boolean>\",\n                    \"firewallType\": \"EGRESS\",\n                    \"deviceNumber\": \"<integer>\",\n                    \"pciSlot\": \"<integer>\",\n                    \"vnet\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"HIBERNATING\"\n                  },\n                  \"entities\": {\n                    \"flowlogs\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"backupunit\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"action\": \"ACCEPTED\",\n                            \"bucket\": \"<string>\",\n                            \"direction\": \"EGRESS\",\n                            \"name\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"lan\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_UPDATING\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"firewallrules\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"collection\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"protocol\": \"GRE\",\n                            \"name\": \"<string>\",\n                            \"sourceMac\": \"<string>\",\n                            \"ipVersion\": \"IPv4\",\n                            \"sourceIp\": \"<string>\",\n                            \"targetIp\": \"<string>\",\n                            \"icmpCode\": \"<integer>\",\n                            \"icmpType\": \"<integer>\",\n                            \"portRangeStart\": \"<integer>\",\n                            \"portRangeEnd\": \"<integer>\",\n                            \"type\": \"INGRESS\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"ipblock\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"UNKNOWN\"\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    },\n                    \"securitygroups\": {\n                      \"id\": \"<string>\",\n                      \"type\": \"request-status\",\n                      \"href\": \"<uri>\",\n                      \"items\": [\n                        {\n                          \"properties\": {\n                            \"name\": \"<string>\",\n                            \"description\": \"<string>\"\n                          },\n                          \"id\": \"<string>\",\n                          \"type\": \"nic\",\n                          \"href\": \"<uri>\",\n                          \"metadata\": {\n                            \"etag\": \"<string>\",\n                            \"createdDate\": \"<dateTime>\",\n                            \"createdBy\": \"<string>\",\n                            \"createdByUserId\": \"<string>\",\n                            \"lastModifiedDate\": \"<dateTime>\",\n                            \"lastModifiedBy\": \"<string>\",\n                            \"lastModifiedByUserId\": \"<string>\",\n                            \"state\": \"FAILED_SUSPENDED\"\n                          },\n                          \"entities\": {\n                            \"rules\": {\n                              \"id\": \"<string>\",\n                              \"type\": \"image\",\n                              \"href\": \"<uri>\",\n                              \"items\": [\n                                {\n                                  \"properties\": {\n                                    \"protocol\": \"ICMP\",\n                                    \"name\": \"<string>\",\n                                    \"sourceMac\": \"<string>\",\n                                    \"ipVersion\": \"IPv4\",\n                                    \"sourceIp\": \"<string>\",\n                                    \"targetIp\": \"<string>\",\n                                    \"icmpCode\": \"<integer>\",\n                                    \"icmpType\": \"<integer>\",\n                                    \"portRangeStart\": \"<integer>\",\n                                    \"portRangeEnd\": \"<integer>\",\n                                    \"type\": \"INGRESS\"\n                                  },\n                                  \"id\": \"<string>\",\n                                  \"type\": \"nodepool\",\n                                  \"href\": \"<uri>\",\n                                  \"metadata\": {\n                                    \"etag\": \"<string>\",\n                                    \"createdDate\": \"<dateTime>\",\n                                    \"createdBy\": \"<string>\",\n                                    \"createdByUserId\": \"<string>\",\n                                    \"lastModifiedDate\": \"<dateTime>\",\n                                    \"lastModifiedBy\": \"<string>\",\n                                    \"lastModifiedByUserId\": \"<string>\",\n                                    \"state\": \"FAILED_HIBERNATING\"\n                                  }\n                                }\n                              ],\n                              \"offset\": \"<number>\",\n                              \"limit\": \"<number>\",\n                              \"_links\": {\n                                \"prev\": \"<uri>\",\n                                \"self\": \"<uri>\",\n                                \"next\": \"<uri>\"\n                              }\n                            },\n                            \"nics\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n                            },\n                            \"servers\": {\n                              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n                            }\n                          }\n                        }\n                      ],\n                      \"offset\": \"<number>\",\n                      \"limit\": \"<number>\",\n                      \"_links\": {\n                        \"prev\": \"<uri>\",\n                        \"self\": \"<uri>\",\n                        \"next\": \"<uri>\"\n                      }\n                    }\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"networkloadbalancers\": {\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"listenerLan\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"targetLan\": \"<integer>\",\n            \"ips\": [\n              \"<string>\"\n            ],\n            \"lbPrivateIps\": [\n              \"<string>\"\n            ],\n            \"centralLogging\": \"<boolean>\",\n            \"loggingFormat\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"request\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          },\n          \"entities\": {\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"BIDIRECTIONAL\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"image\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"INACTIVE\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"forwardingrules\": {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"algorithm\": \"ROUND_ROBIN\",\n                    \"listenerIp\": \"<string>\",\n                    \"listenerPort\": \"<integer>\",\n                    \"name\": \"<string>\",\n                    \"protocol\": \"TCP\",\n                    \"targets\": [\n                      {\n                        \"ip\": \"<string>\",\n                        \"port\": \"<integer>\",\n                        \"weight\": \"<integer>\",\n                        \"proxyProtocol\": \"none\",\n                        \"healthCheck\": {\n                          \"check\": \"<boolean>\",\n                          \"checkInterval\": \"<integer>\",\n                          \"maintenance\": \"<boolean>\"\n                        }\n                      }\n                    ],\n                    \"healthCheck\": {\n                      \"clientTimeout\": \"<integer>\",\n                      \"connectTimeout\": \"<integer>\",\n                      \"targetTimeout\": \"<integer>\",\n                      \"retries\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UNKNOWN\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"natgateways\": {\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"publicIps\": [\n              \"<string>\"\n            ],\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"gatewayIps\": [\n                  \"<string>\"\n                ]\n              }\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"networkloadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_DESTROYING\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"ipblock\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"name\": \"<string>\",\n                    \"publicIp\": \"<string>\",\n                    \"sourceSubnet\": \"<string>\",\n                    \"type\": \"SNAT\",\n                    \"protocol\": \"TCP\",\n                    \"targetSubnet\": \"<string>\",\n                    \"targetPortRange\": {\n                      \"start\": \"<integer>\",\n                      \"end\": \"<integer>\"\n                    }\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"UPDATING\"\n                  }\n                }\n              ]\n            },\n            \"flowlogs\": {\n              \"id\": \"<string>\",\n              \"type\": \"collection\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"action\": \"ALL\",\n                    \"bucket\": \"<string>\",\n                    \"direction\": \"EGRESS\",\n                    \"name\": \"<string>\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"request\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"FAILED_UPDATING\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    },\n    \"securitygroups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"loadbalancer\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"TERMINATED\"\n          },\n          \"entities\": {\n            \"rules\": {\n              \"id\": \"<string>\",\n              \"type\": \"location\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"properties\": {\n                    \"protocol\": \"VRRP\",\n                    \"name\": \"<string>\",\n                    \"sourceMac\": \"<string>\",\n                    \"ipVersion\": \"IPv6\",\n                    \"sourceIp\": \"<string>\",\n                    \"targetIp\": \"<string>\",\n                    \"icmpCode\": \"<integer>\",\n                    \"icmpType\": \"<integer>\",\n                    \"portRangeStart\": \"<integer>\",\n                    \"portRangeEnd\": \"<integer>\",\n                    \"type\": \"INGRESS\"\n                  },\n                  \"id\": \"<string>\",\n                  \"type\": \"contract\",\n                  \"href\": \"<uri>\",\n                  \"metadata\": {\n                    \"etag\": \"<string>\",\n                    \"createdDate\": \"<dateTime>\",\n                    \"createdBy\": \"<string>\",\n                    \"createdByUserId\": \"<string>\",\n                    \"lastModifiedDate\": \"<dateTime>\",\n                    \"lastModifiedBy\": \"<string>\",\n                    \"lastModifiedByUserId\": \"<string>\",\n                    \"state\": \"TERMINATED\"\n                  }\n                }\n              ],\n              \"offset\": \"<number>\",\n              \"limit\": \"<number>\",\n              \"_links\": {\n                \"prev\": \"<uri>\",\n                \"self\": \"<uri>\",\n                \"next\": \"<uri>\"\n              }\n            },\n            \"nics\": {\n              \"value\": \"<Circular reference to #/components/schemas/Nics detected>\"\n            },\n            \"servers\": {\n              \"value\": \"<Circular reference to #/components/schemas/Servers detected>\"\n            }\n          }\n        }\n      ],\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {\n        \"prev\": \"<uri>\",\n        \"self\": \"<uri>\",\n        \"next\": \"<uri>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"createDefaultSecurityGroup\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"servers\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"volumes\": {\n      \"type\": \"lan\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"loadbalancers\": {\n      \"type\": \"contract\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"lans\": {\n      \"type\": \"networkloadbalancer\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"networkloadbalancers\": {\n      \"type\": \"k8s\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"natgateways\": {\n      \"type\": \"backupunit\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    },\n    \"securitygroups\": {\n      \"type\": \"nic\",\n      \"offset\": \"<number>\",\n      \"limit\": \"<number>\",\n      \"_links\": {}\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datacenters?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datacenters"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "{regionId}",
					"item": [
						{
							"name": "{locationId}",
							"item": [
								{
									"name": "Get Location by ID",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/:regionId/:locationId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												":regionId",
												":locationId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "regionId",
													"value": "<string>",
													"description": "(Required) The unique ID of the region."
												},
												{
													"key": "locationId",
													"value": "<string>",
													"description": "(Required) The unique ID of the location."
												}
											]
										},
										"description": "Retrieves the information about the location specified by its ID. The 'locationId' consists of the three-digit identifier of the city according to the IATA code."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/:regionId/:locationId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														":regionId",
														":locationId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "regionId"
														},
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"features\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cpuArchitecture\": [\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      },\n      {\n        \"cpuFamily\": \"<string>\",\n        \"maxCores\": \"<integer>\",\n        \"maxRam\": \"<integer>\",\n        \"vendor\": \"<string>\"\n      }\n    ],\n    \"gpuArchitecture\": [\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      },\n      {\n        \"vendor\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_UPDATING\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/:regionId/:locationId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														":regionId",
														":locationId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "regionId"
														},
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Locations within a Region",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:regionId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":regionId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "regionId",
											"value": "<string>",
											"description": "(Required) The unique ID of the region."
										}
									]
								},
								"description": "Retrieves the available locations in a region specified by its ID. The 'regionId' consists of the two character identifier of the region (country), e.g., 'de'."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/:regionId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												":regionId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "regionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"nic\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"features\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cpuArchitecture\": [\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          },\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          }\n        ],\n        \"gpuArchitecture\": [\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"networkloadbalancer\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"features\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cpuArchitecture\": [\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          },\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          }\n        ],\n        \"gpuArchitecture\": [\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/:regionId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												":regionId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "regionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Locations",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed.",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Retrieves the available physical locations where you can deploy cloud resources in a VDC. \n\n A location is identified by a combination of the following characters: \n\n * a two-character **regionId**, which represents a country (example: 'de') \n\n * a three-character **locationId**, which represents a city. The 'locationId' is typically based on the IATA code of the city's airport (example: 'txl'). \n\n >Note that 'locations' are read-only and cannot be changed."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"nic\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"features\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cpuArchitecture\": [\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          },\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          }\n        ],\n        \"gpuArchitecture\": [\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"networkloadbalancer\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"features\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cpuArchitecture\": [\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          },\n          {\n            \"cpuFamily\": \"<string>\",\n            \"maxCores\": \"<integer>\",\n            \"maxRam\": \"<integer>\",\n            \"vendor\": \"<string>\"\n          }\n        ],\n        \"gpuArchitecture\": [\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          {\n            \"vendor\": \"<string>\",\n            \"model\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"datacenter\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "images",
			"item": [
				{
					"name": "{imageId}",
					"item": [
						{
							"name": "labels",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve image labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId",
															"value": "<string>",
															"description": "(Required) The unique ID of the image."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Retrieve the properties of the specified image label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify an Image Label by Key",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId",
															"value": "<string>",
															"description": "(Required) The unique ID of the image."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Modifies the specified data center label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete image label",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId",
															"value": "<string>",
															"description": "(Required) The unique ID of the image."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Delete the specified image label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/images/:imageId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"images",
																":imageId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "imageId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List image labels",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId",
													"value": "<string>",
													"description": "(Required) The unique ID of the image."
												}
											]
										},
										"description": "List all the the labels for the specified image."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create an Image Label",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId",
													"value": "<string>",
													"description": "(Required) The unique ID of the image"
												}
											]
										},
										"description": "Adds a new label to the specified image."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/images/:imageId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														":imageId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "imageId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve images",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"description": "(Required) The unique ID of the image."
										}
									]
								},
								"description": "Retrieve the properties of the specified image."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"imageType\": \"CDROM\",\n    \"public\": \"<boolean>\",\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cloudInit\": \"V1\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify an Image by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"description": "(Required) The unique ID of the image."
										}
									]
								},
								"description": "Modifies the properties of the specified image."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"imageType\": \"CDROM\",\n    \"public\": \"<boolean>\",\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cloudInit\": \"V1\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"cloudInit\": \"NONE\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete images",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"description": "(Required) The unique ID of the image."
										}
									]
								},
								"description": "Delete the specified image; this operation is only supported for private images."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify images",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"licenceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"applicationType\": \"UNKNOWN\",\n  \"cloudInit\": \"V1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"description": "(Required) The unique ID of the image."
										}
									]
								},
								"description": "Update the properties of the specified image."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"licenceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"applicationType\": \"UNKNOWN\",\n  \"cloudInit\": \"V1\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"licenceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"applicationType\": \"UNKNOWN\",\n    \"imageType\": \"CDROM\",\n    \"public\": \"<boolean>\",\n    \"imageAliases\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"cloudInit\": \"V1\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"MAINTENANCE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"licenceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"applicationType\": \"UNKNOWN\",\n  \"cloudInit\": \"V1\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List images",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/images?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"images"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "List all the images in the current contract."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"licenceType\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"applicationType\": \"UNKNOWN\",\n        \"imageType\": \"HDD\",\n        \"public\": \"<boolean>\",\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cloudInit\": \"NONE\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"licenceType\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"applicationType\": \"UNKNOWN\",\n        \"imageType\": \"HDD\",\n        \"public\": \"<boolean>\",\n        \"imageAliases\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"cloudInit\": \"V1\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"INACTIVE\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "snapshots",
			"item": [
				{
					"name": "{snapshotId}",
					"item": [
						{
							"name": "labels",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve snapshot labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId",
															"value": "<string>",
															"description": "(Required) The unique ID of the snapshot."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Retrieve the properties of the specified snapshot label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Snapshot Label by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId",
															"value": "<string>",
															"description": "(Required) The unique ID of the snapshot."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Modifies the specified snapshot label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete snapshot labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId",
															"value": "<string>",
															"description": "(Required) The unique ID of the snapshot."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Delete the specified snapshot label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/snapshots/:snapshotId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"snapshots",
																":snapshotId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "snapshotId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List snapshot labels",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId",
													"value": "<string>",
													"description": "(Required) The unique ID of the snapshot."
												}
											]
										},
										"description": "List all the the labels for the specified snapshot."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Snapshot Label",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId",
													"value": "<string>",
													"description": "(Required) The unique ID of the snapshot."
												}
											]
										},
										"description": "Adds a new label to the specified snapshot."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/snapshots/:snapshotId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"snapshots",
														":snapshotId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "snapshotId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve snapshots by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshotId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "snapshotId",
											"value": "<string>",
											"description": "(Required) The unique ID of the snapshot."
										}
									]
								},
								"description": "Retrieve the properties of the specified snapshot."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify a Snapshot by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshotId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "snapshotId",
											"value": "<string>",
											"description": "(Required) The unique ID of the snapshot."
										}
									]
								},
								"description": "Modifies the properties of the specified snapshot."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete snapshots",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshotId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "snapshotId",
											"value": "<string>",
											"description": "(Required) The unique ID of the snapshot."
										}
									]
								},
								"description": "Deletes the specified snapshot."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify snapshots",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshotId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "snapshotId",
											"value": "<string>",
											"description": "(Required) The unique ID of the snapshot."
										}
									]
								},
								"description": "Update the properties of the specified snapshot."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"size\": \"<number>\",\n    \"secAuthProtection\": \"<boolean>\",\n    \"cpuHotPlug\": \"<boolean>\",\n    \"cpuHotUnplug\": \"<boolean>\",\n    \"ramHotPlug\": \"<boolean>\",\n    \"ramHotUnplug\": \"<boolean>\",\n    \"nicHotPlug\": \"<boolean>\",\n    \"nicHotUnplug\": \"<boolean>\",\n    \"discVirtioHotPlug\": \"<boolean>\",\n    \"discVirtioHotUnplug\": \"<boolean>\",\n    \"discScsiHotPlug\": \"<boolean>\",\n    \"exposeSerial\": false,\n    \"requireLegacyBios\": true,\n    \"discScsiHotUnplug\": \"<boolean>\",\n    \"licenceType\": \"<string>\",\n    \"applicationType\": \"UNKNOWN\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UNKNOWN\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"secAuthProtection\": \"<boolean>\",\n  \"cpuHotPlug\": \"<boolean>\",\n  \"cpuHotUnplug\": \"<boolean>\",\n  \"ramHotPlug\": \"<boolean>\",\n  \"ramHotUnplug\": \"<boolean>\",\n  \"nicHotPlug\": \"<boolean>\",\n  \"nicHotUnplug\": \"<boolean>\",\n  \"discVirtioHotPlug\": \"<boolean>\",\n  \"discVirtioHotUnplug\": \"<boolean>\",\n  \"discScsiHotPlug\": \"<boolean>\",\n  \"exposeSerial\": false,\n  \"requireLegacyBios\": true,\n  \"discScsiHotUnplug\": \"<boolean>\",\n  \"licenceType\": \"<string>\",\n  \"applicationType\": \"UNKNOWN\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshots/:snapshotId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshots",
												":snapshotId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "snapshotId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List snapshots",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/snapshots?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "List all available snapshots."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"secAuthProtection\": \"<boolean>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"request-status\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"location\": \"<string>\",\n        \"size\": \"<number>\",\n        \"secAuthProtection\": \"<boolean>\",\n        \"cpuHotPlug\": \"<boolean>\",\n        \"cpuHotUnplug\": \"<boolean>\",\n        \"ramHotPlug\": \"<boolean>\",\n        \"ramHotUnplug\": \"<boolean>\",\n        \"nicHotPlug\": \"<boolean>\",\n        \"nicHotUnplug\": \"<boolean>\",\n        \"discVirtioHotPlug\": \"<boolean>\",\n        \"discVirtioHotUnplug\": \"<boolean>\",\n        \"discScsiHotPlug\": \"<boolean>\",\n        \"exposeSerial\": false,\n        \"requireLegacyBios\": true,\n        \"discScsiHotUnplug\": \"<boolean>\",\n        \"licenceType\": \"<string>\",\n        \"applicationType\": \"UNKNOWN\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_HIBERNATING\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "ipblocks",
			"item": [
				{
					"name": "{ipblockId}",
					"item": [
						{
							"name": "labels",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve IP block labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId",
															"value": "<string>",
															"description": "(Required) The unique ID of the IP block."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Retrieve the properties of the specified IP block label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a IP Block Label by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId",
															"value": "<string>",
															"description": "(Required) The unique ID of the IP block."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Modifies the specified IP block label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete IP block labels",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels",
														":key"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId",
															"value": "<string>",
															"description": "(Required) The unique ID of the IP block."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The label key"
														}
													]
												},
												"description": "Delete the specified IP block label."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels/:key?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipblocks",
																":ipblockId",
																"labels",
																":key"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "ipblockId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List IP block labels",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId",
													"value": "<string>",
													"description": "(Required) The unique ID of the IP block."
												}
											]
										},
										"description": "List all the the labels for the specified IP block."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create IP block labels",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId",
												"labels"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId",
													"value": "<string>",
													"description": "(Required) The unique ID of the IP block."
												}
											]
										},
										"description": "Add a new label to the specified IP block."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ipblocks/:ipblockId/labels?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipblocks",
														":ipblockId",
														"labels"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "ipblockId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve IP blocks",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks",
										":ipblockId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "ipblockId",
											"value": "<string>",
											"description": "(Required) The unique ID of the IP block."
										}
									]
								},
								"description": "Retrieve the properties of the specified IP block."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"ipConsumers\": [\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UPDATING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify a IP Block by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks",
										":ipblockId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "ipblockId",
											"value": "<string>",
											"description": "(Required) The unique ID of the IP block."
										}
									]
								},
								"description": "Modifies the properties of the specified IP block."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"ipConsumers\": [\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UPDATING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete IP blocks",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks",
										":ipblockId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "ipblockId",
											"value": "<string>",
											"description": "(Required) The unique ID of the IP block."
										}
									]
								},
								"description": "Remove the specified IP block."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify IP blocks",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"location\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks",
										":ipblockId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "ipblockId",
											"value": "<string>",
											"description": "(Required) The unique ID of the IP block."
										}
									]
								},
								"description": "Update the properties of the specified IP block."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"location\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"ipConsumers\": [\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UPDATING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"location\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ipblocks/:ipblockId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipblocks",
												":ipblockId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "ipblockId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List IP blocks ",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipblocks"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return (use together with offset for pagination)."
								}
							]
						},
						"description": "List all reserved IP blocks."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"location\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"ipConsumers\": [\n          {\n            \"ip\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"nicId\": \"<string>\",\n            \"serverId\": \"<string>\",\n            \"serverName\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"k8sNodePoolUuid\": \"<string>\",\n            \"k8sClusterUuid\": \"<string>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"nicId\": \"<string>\",\n            \"serverId\": \"<string>\",\n            \"serverName\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"k8sNodePoolUuid\": \"<string>\",\n            \"k8sClusterUuid\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"s3key\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"SUSPENDED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"location\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"ips\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"ipConsumers\": [\n          {\n            \"ip\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"nicId\": \"<string>\",\n            \"serverId\": \"<string>\",\n            \"serverName\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"k8sNodePoolUuid\": \"<string>\",\n            \"k8sClusterUuid\": \"<string>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"mac\": \"<string>\",\n            \"nicId\": \"<string>\",\n            \"serverId\": \"<string>\",\n            \"serverName\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"k8sNodePoolUuid\": \"<string>\",\n            \"k8sClusterUuid\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"server\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reserve a IP Block",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipblocks"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Reserves a new IP block."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "Location",
									"value": "https://s/requests/I/status",
									"description": {
										"content": "Callback URL to poll async operation status.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"ips\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"ipConsumers\": [\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"nicId\": \"<string>\",\n        \"serverId\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"k8sNodePoolUuid\": \"<string>\",\n        \"k8sClusterUuid\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"loadbalancer\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UPDATING\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"location\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"natgateway\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ipblocks?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipblocks"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "targetgroups",
			"item": [
				{
					"name": "{targetGroupId}",
					"item": [
						{
							"name": "Get a Target Group by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups",
										":targetGroupId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "targetGroupId",
											"value": "<string>",
											"description": "(Required) The unique ID of the target group."
										}
									]
								},
								"description": "Retrieves the properties of the target group specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"algorithm\": \"SOURCE_IP\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"GET\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify a Target Group by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"RESPONSE_BODY\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"POST\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"lan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups",
										":targetGroupId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "targetGroupId",
											"value": "<string>",
											"description": "(Required) The unique ID of the target group."
										}
									]
								},
								"description": "Modifies the properties of the target group specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"RESPONSE_BODY\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"POST\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"lan\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"algorithm\": \"SOURCE_IP\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"GET\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"algorithm\": \"ROUND_ROBIN\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"RESPONSE_BODY\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"POST\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"lan\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a Target Group by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups",
										":targetGroupId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "targetGroupId",
											"value": "<string>",
											"description": "(Required) The unique ID of the target group."
										}
									]
								},
								"description": "Deletes the target group specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "The callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially Modify a Target Group by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "*/*"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"protocolVersion\": \"HTTP2\",\n  \"location\": \"<string>\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    }\n  ],\n  \"healthCheck\": {\n    \"checkTimeout\": \"<integer>\",\n    \"checkInterval\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  },\n  \"httpHealthCheck\": {\n    \"matchType\": \"STATUS_CODE\",\n    \"response\": \"<string>\",\n    \"path\": \"<string>\",\n    \"method\": \"PUT\",\n    \"regex\": \"<boolean>\",\n    \"negate\": \"<boolean>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups",
										":targetGroupId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "targetGroupId",
											"value": "<string>",
											"description": "(Required) The unique ID of the target group."
										}
									]
								},
								"description": "Updates the properties of the target group specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "*/*"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"protocolVersion\": \"HTTP2\",\n  \"location\": \"<string>\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    }\n  ],\n  \"healthCheck\": {\n    \"checkTimeout\": \"<integer>\",\n    \"checkInterval\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  },\n  \"httpHealthCheck\": {\n    \"matchType\": \"STATUS_CODE\",\n    \"response\": \"<string>\",\n    \"path\": \"<string>\",\n    \"method\": \"PUT\",\n    \"regex\": \"<boolean>\",\n    \"negate\": \"<boolean>\"\n  }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"algorithm\": \"SOURCE_IP\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"GET\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "*/*"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"algorithm\": \"ROUND_ROBIN\",\n  \"name\": \"<string>\",\n  \"protocol\": \"HTTP\",\n  \"protocolVersion\": \"HTTP2\",\n  \"location\": \"<string>\",\n  \"targets\": [\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"weight\": \"<integer>\",\n      \"proxyProtocol\": \"none\",\n      \"healthCheckEnabled\": \"<boolean>\",\n      \"maintenanceEnabled\": \"<boolean>\"\n    }\n  ],\n  \"healthCheck\": {\n    \"checkTimeout\": \"<integer>\",\n    \"checkInterval\": \"<integer>\",\n    \"retries\": \"<integer>\"\n  },\n  \"httpHealthCheck\": {\n    \"matchType\": \"STATUS_CODE\",\n    \"response\": \"<string>\",\n    \"path\": \"<string>\",\n    \"method\": \"PUT\",\n    \"regex\": \"<boolean>\",\n    \"negate\": \"<boolean>\"\n  }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/targetgroups/:targetGroupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"targetgroups",
												":targetGroupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "targetGroupId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Target Groups",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"targetgroups"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return (used together with <b><i>offset</i></b> for pagination). It must not exceed <b><i>200</i></b>."
								}
							]
						},
						"description": "Lists target groups.\n\nA target group is a set of one or more registered targets. You must specify an IP address, a port number, and a weight for each target. Any object with an IP address in your VDC can be a target, for example, a VM, another load balancer, etc. You can register a target with multiple target groups."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (used together with <b><i>offset</i></b> for pagination). It must not exceed <b><i>200</i></b>."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"algorithm\": \"ROUND_ROBIN\",\n        \"name\": \"<string>\",\n        \"protocol\": \"HTTP\",\n        \"protocolVersion\": \"HTTP1\",\n        \"location\": \"<string>\",\n        \"targets\": [\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheckEnabled\": \"<boolean>\",\n            \"maintenanceEnabled\": \"<boolean>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheckEnabled\": \"<boolean>\",\n            \"maintenanceEnabled\": \"<boolean>\"\n          }\n        ],\n        \"healthCheck\": {\n          \"checkTimeout\": \"<integer>\",\n          \"checkInterval\": \"<integer>\",\n          \"retries\": \"<integer>\"\n        },\n        \"httpHealthCheck\": {\n          \"matchType\": \"RESPONSE_BODY\",\n          \"response\": \"<string>\",\n          \"path\": \"<string>\",\n          \"method\": \"GET\",\n          \"regex\": \"<boolean>\",\n          \"negate\": \"<boolean>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security-group\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"algorithm\": \"LEAST_CONNECTION\",\n        \"name\": \"<string>\",\n        \"protocol\": \"HTTP\",\n        \"protocolVersion\": \"HTTP2\",\n        \"location\": \"<string>\",\n        \"targets\": [\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheckEnabled\": \"<boolean>\",\n            \"maintenanceEnabled\": \"<boolean>\"\n          },\n          {\n            \"ip\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"weight\": \"<integer>\",\n            \"proxyProtocol\": \"none\",\n            \"healthCheckEnabled\": \"<boolean>\",\n            \"maintenanceEnabled\": \"<boolean>\"\n          }\n        ],\n        \"healthCheck\": {\n          \"checkTimeout\": \"<integer>\",\n          \"checkInterval\": \"<integer>\",\n          \"retries\": \"<integer>\"\n        },\n        \"httpHealthCheck\": {\n          \"matchType\": \"STATUS_CODE\",\n          \"response\": \"<string>\",\n          \"path\": \"<string>\",\n          \"method\": \"TRACE\",\n          \"regex\": \"<boolean>\",\n          \"negate\": \"<boolean>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"flow-log\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UPDATING\"\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (used together with <b><i>offset</i></b> for pagination). It must not exceed <b><i>200</i></b>."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Target Group",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP1\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"PUT\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"gpu\",\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"targetgroups"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Creates a target group."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP1\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"PUT\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"gpu\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "Location",
									"value": "https://s/requests/I/status",
									"description": {
										"content": "Callback URL to poll async operation status.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"algorithm\": \"SOURCE_IP\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP2\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"GET\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"algorithm\": \"RANDOM\",\n    \"name\": \"<string>\",\n    \"protocol\": \"HTTP\",\n    \"protocolVersion\": \"HTTP1\",\n    \"location\": \"<string>\",\n    \"targets\": [\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      },\n      {\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"weight\": \"<integer>\",\n        \"proxyProtocol\": \"none\",\n        \"healthCheckEnabled\": \"<boolean>\",\n        \"maintenanceEnabled\": \"<boolean>\"\n      }\n    ],\n    \"healthCheck\": {\n      \"checkTimeout\": \"<integer>\",\n      \"checkInterval\": \"<integer>\",\n      \"retries\": \"<integer>\"\n    },\n    \"httpHealthCheck\": {\n      \"matchType\": \"STATUS_CODE\",\n      \"response\": \"<string>\",\n      \"path\": \"<string>\",\n      \"method\": \"PUT\",\n      \"regex\": \"<boolean>\",\n      \"negate\": \"<boolean>\"\n    }\n  },\n  \"type\": \"gpu\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/targetgroups?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"targetgroups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "requests",
			"item": [
				{
					"name": "{requestId}",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Retrieve request status",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:requestId/status?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":requestId",
												"status"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "requestId",
													"value": "<string>",
													"description": "(Required) The unique ID of the request."
												}
											]
										},
										"description": "Retrieve the status of the specified request."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/requests/:requestId/status?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":requestId",
														"status"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"status\": \"DONE\",\n    \"message\": \"<string>\",\n    \"etag\": \"<string>\",\n    \"targets\": [\n      {\n        \"target\": {\n          \"id\": \"<string>\",\n          \"type\": \"snapshot\",\n          \"href\": \"<uri>\"\n        },\n        \"status\": \"QUEUED\"\n      },\n      {\n        \"target\": {\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\"\n        },\n        \"status\": \"QUEUED\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/requests/:requestId/status?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":requestId",
														"status"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve requests",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "requestId",
											"value": "<string>",
											"description": "(Required) The unique ID of the request."
										}
									]
								},
								"description": "Retrieve the properties of the specified request."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:requestId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":requestId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"method\": \"<string>\",\n    \"headers\": {\n      \"amet_cd_\": \"<string>\"\n    },\n    \"body\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"datacenter\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"etag\": \"<string>\",\n    \"requestStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"status\": \"QUEUED\",\n        \"message\": \"<string>\",\n        \"etag\": \"<string>\",\n        \"targets\": [\n          {\n            \"target\": {\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\"\n            },\n            \"status\": \"FAILED\"\n          },\n          {\n            \"target\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\"\n            },\n            \"status\": \"FAILED\"\n          }\n        ]\n      }\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:requestId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":requestId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List requests",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requests?pretty=true&depth=0&filter.status=<string>&filter.createdAfter=<string>&filter.createdBefore=<string>&filter.createdDate=<string>&filter.createdBy=<string>&filter.etag=<string>&filter.requestStatus=<string>&filter.method=<string>&filter.headers=<string>&filter.body=<string>&filter.url=<string>&offset=0&limit=1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requests"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								},
								{
									"key": "filter.status",
									"value": "<string>",
									"description": "Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter."
								},
								{
									"key": "filter.createdAfter",
									"value": "<string>",
									"description": "Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
								},
								{
									"key": "filter.createdBefore",
									"value": "<string>",
									"description": "Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
								},
								{
									"key": "filter.createdDate",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.createdBy",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.etag",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.requestStatus",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.method",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.headers",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.body",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "filter.url",
									"value": "<string>",
									"description": "Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
								},
								{
									"key": "limit",
									"value": "1000",
									"description": "The maximum number of elements to return (use together with offset for pagination)."
								}
							]
						},
						"description": "List all API requests."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests?pretty=true&depth=0&filter.status=<string>&filter.createdAfter=<string>&filter.createdBefore=<string>&filter.createdDate=<string>&filter.createdBy=<string>&filter.etag=<string>&filter.requestStatus=<string>&filter.method=<string>&filter.headers=<string>&filter.body=<string>&filter.url=<string>&offset=0&limit=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "filter.status",
											"value": "<string>",
											"description": "Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdAfter",
											"value": "<string>",
											"description": "Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdBefore",
											"value": "<string>",
											"description": "Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdDate",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.createdBy",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.etag",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.requestStatus",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.method",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.headers",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.body",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.url",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"limit\": \"<number>\",\n  \"offset\": \"<number>\",\n  \"id\": \"<string>\",\n  \"type\": \"ipblock\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"method\": \"<string>\",\n        \"headers\": {\n          \"laboris_d\": \"<string>\",\n          \"Lorem_c7\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"resource\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"etag\": \"<string>\",\n        \"requestStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"nic\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"status\": \"QUEUED\",\n            \"message\": \"<string>\",\n            \"etag\": \"<string>\",\n            \"targets\": [\n              {\n                \"target\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"lan\",\n                  \"href\": \"<uri>\"\n                },\n                \"status\": \"QUEUED\"\n              },\n              {\n                \"target\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"template\",\n                  \"href\": \"<uri>\"\n                },\n                \"status\": \"FAILED\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"method\": \"<string>\",\n        \"headers\": {\n          \"Excepteur_990\": \"<string>\",\n          \"voluptate_8c4\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"etag\": \"<string>\",\n        \"requestStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"location\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"status\": \"FAILED\",\n            \"message\": \"<string>\",\n            \"etag\": \"<string>\",\n            \"targets\": [\n              {\n                \"target\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"applicationloadbalancer\",\n                  \"href\": \"<uri>\"\n                },\n                \"status\": \"FAILED\"\n              },\n              {\n                \"target\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\"\n                },\n                \"status\": \"DONE\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests?pretty=true&depth=0&filter.status=<string>&filter.createdAfter=<string>&filter.createdBefore=<string>&filter.createdDate=<string>&filter.createdBy=<string>&filter.etag=<string>&filter.requestStatus=<string>&filter.method=<string>&filter.headers=<string>&filter.body=<string>&filter.url=<string>&offset=0&limit=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "filter.status",
											"value": "<string>",
											"description": "Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdAfter",
											"value": "<string>",
											"description": "Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdBefore",
											"value": "<string>",
											"description": "Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter."
										},
										{
											"key": "filter.createdDate",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.createdBy",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.etag",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.requestStatus",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.method",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.headers",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.body",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "filter.url",
											"value": "<string>",
											"description": "Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "The maximum number of elements to return (use together with offset for pagination)."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "contracts",
			"item": [
				{
					"name": "Get Contract Information",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/contracts?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contracts"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Retrieves the properties of the user's contract. This operation allows you to obtain the resource limits and the general contract information."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contracts?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"pcc\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"contractNumber\": \"<long>\",\n        \"owner\": \"<string>\",\n        \"status\": \"<string>\",\n        \"regDomain\": \"<string>\",\n        \"resourceLimits\": {\n          \"coresPerContract\": \"<integer>\",\n          \"coresPerServer\": \"<integer>\",\n          \"coresProvisioned\": \"<integer>\",\n          \"dasVolumeProvisioned\": \"<long>\",\n          \"hddLimitPerContract\": \"<long>\",\n          \"hddLimitPerVolume\": \"<long>\",\n          \"hddVolumeProvisioned\": \"<long>\",\n          \"k8sClusterLimitTotal\": \"<integer>\",\n          \"k8sClustersProvisioned\": \"<integer>\",\n          \"natGatewayLimitTotal\": \"<integer>\",\n          \"natGatewayProvisioned\": \"<integer>\",\n          \"nlbLimitTotal\": \"<integer>\",\n          \"nlbProvisioned\": \"<integer>\",\n          \"ramPerContract\": \"<integer>\",\n          \"ramPerServer\": \"<integer>\",\n          \"ramProvisioned\": \"<integer>\",\n          \"reservableIps\": \"<integer>\",\n          \"reservedIpsInUse\": \"<integer>\",\n          \"reservedIpsOnContract\": \"<integer>\",\n          \"ssdLimitPerContract\": \"<long>\",\n          \"ssdLimitPerVolume\": \"<long>\",\n          \"ssdVolumeProvisioned\": \"<long>\",\n          \"securityGroupsPerVdc\": \"<integer>\",\n          \"securityGroupsPerResource\": \"<integer>\",\n          \"rulesPerSecurityGroup\": \"<integer>\"\n        }\n      },\n      \"type\": \"user\"\n    },\n    {\n      \"properties\": {\n        \"contractNumber\": \"<long>\",\n        \"owner\": \"<string>\",\n        \"status\": \"<string>\",\n        \"regDomain\": \"<string>\",\n        \"resourceLimits\": {\n          \"coresPerContract\": \"<integer>\",\n          \"coresPerServer\": \"<integer>\",\n          \"coresProvisioned\": \"<integer>\",\n          \"dasVolumeProvisioned\": \"<long>\",\n          \"hddLimitPerContract\": \"<long>\",\n          \"hddLimitPerVolume\": \"<long>\",\n          \"hddVolumeProvisioned\": \"<long>\",\n          \"k8sClusterLimitTotal\": \"<integer>\",\n          \"k8sClustersProvisioned\": \"<integer>\",\n          \"natGatewayLimitTotal\": \"<integer>\",\n          \"natGatewayProvisioned\": \"<integer>\",\n          \"nlbLimitTotal\": \"<integer>\",\n          \"nlbProvisioned\": \"<integer>\",\n          \"ramPerContract\": \"<integer>\",\n          \"ramPerServer\": \"<integer>\",\n          \"ramProvisioned\": \"<integer>\",\n          \"reservableIps\": \"<integer>\",\n          \"reservedIpsInUse\": \"<integer>\",\n          \"reservedIpsOnContract\": \"<integer>\",\n          \"ssdLimitPerContract\": \"<long>\",\n          \"ssdLimitPerVolume\": \"<long>\",\n          \"ssdVolumeProvisioned\": \"<long>\",\n          \"securityGroupsPerVdc\": \"<integer>\",\n          \"securityGroupsPerResource\": \"<integer>\",\n          \"rulesPerSecurityGroup\": \"<integer>\"\n        }\n      },\n      \"type\": \"volume\"\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contracts?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "um",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "groups",
									"item": [
										{
											"name": "Retrieve group resources by user ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId/groups?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId",
														"groups"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The unique ID of the user."
														}
													]
												},
												"description": "Retrieve group resources of the user by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/groups?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"groups"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/groups?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"groups"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "owns",
									"item": [
										{
											"name": "Retrieve user resources by user ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId/owns?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId",
														"owns"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The unique ID of the user."
														}
													]
												},
												"description": "Retrieve own resources of the user by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/owns?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"owns"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"natgateway-rule\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"lan\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"SUSPENDED\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"natgateway-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UPDATING\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/owns?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"owns"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "s3keys",
									"item": [
										{
											"name": "{keyId}",
											"item": [
												{
													"name": "Retrieve user Object storage keys by key ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys",
																":keyId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the user."
																},
																{
																	"key": "keyId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Object storage key."
																}
															]
														},
														"description": "Retrieve the specified user Object storage key. The user ID is in the response body when the user is created, and in the list of the users, returned by GET. The key ID is in the response body when the Object storage key is created, and in the list of all user Object storage keys, returned by GET."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"secretKey\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Modify a Object storage Key by Key ID",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"active\": \"<boolean>\"\n  },\n  \"type\": \"contract\",\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys",
																":keyId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the user."
																},
																{
																	"key": "keyId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Object storage key."
																}
															]
														},
														"description": "Enables or disables the specified user Object storage key."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"active\": \"<boolean>\"\n  },\n  \"type\": \"contract\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"secretKey\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"active\": \"<boolean>\"\n  },\n  \"type\": \"contract\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete Object storage keys",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys",
																":keyId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the user."
																},
																{
																	"key": "keyId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Object storage key."
																}
															]
														},
														"description": "Delete the specified user Object storage key."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/users/:userId/s3keys/:keyId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"users",
																		":userId",
																		"s3keys",
																		":keyId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "keyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List user Object storage keys",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId",
														"s3keys"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The unique ID of the user."
														}
													]
												},
												"description": "List Object storage keys by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"secretKey\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"firewall-rule\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"secretKey\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"networkloadbalancer\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create user Object storage keys",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId",
														"s3keys"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The unique ID of the user."
														}
													]
												},
												"description": "Create an Object storage key for the specified user. The user ID is in the response body when the user is created, and in the list of the users, returned by GET. A maximum of five keys per user can be generated."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"secretKey\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"lan\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3keys?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3keys"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "s3ssourl",
									"item": [
										{
											"name": "Retrieve Object storage single sign-on URLs",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId/s3ssourl?pretty=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId",
														"s3ssourl"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The unique ID of the user."
														}
													]
												},
												"description": "Retrieve Ionos Object Storage single sign-on URLs for the the specified user. The user ID is in the response body when the user is created, and in the list of the users, returned by GET."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3ssourl?pretty=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3ssourl"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"ssoUrl\": \"<string>\"\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/users/:userId/s3ssourl?pretty=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"users",
																":userId",
																"s3ssourl"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve users",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users",
												":userId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The unique ID of the user."
												}
											]
										},
										"description": "Retrieve user properties by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"s3CanonicalUserId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"datacenter\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\"\n  },\n  \"entities\": {\n    \"owns\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"groups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"target-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Modify users",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users",
												":userId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The unique ID of the user."
												}
											]
										},
										"description": "Modify the properties of the specified user."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"s3CanonicalUserId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"datacenter\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\"\n  },\n  \"entities\": {\n    \"owns\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"groups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"target-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete users",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users",
												":userId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The unique ID of the user."
												}
											]
										},
										"description": "Delete the specified user."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/users/:userId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"users",
														":userId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List all users ",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/um/users?pretty=true&depth=0&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"um",
										"users"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return (use together with <code>offset</code> for pagination)."
										}
									]
								},
								"description": "List all the users in your account."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/users?pretty=true&depth=0&offset=0&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return (use together with <code>offset</code> for pagination)."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"template\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"email\": \"<string>\",\n        \"administrator\": \"<boolean>\",\n        \"forceSecAuth\": \"<boolean>\",\n        \"secAuthActive\": \"<boolean>\",\n        \"s3CanonicalUserId\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastLogin\": \"<dateTime>\"\n      },\n      \"entities\": {\n        \"owns\": {\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_MAINTENANCE\"\n              },\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"secAuthProtection\": \"<boolean>\"\n              },\n              \"entities\": {\n                \"groups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"server\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"loadbalancer\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_HIBERNATING\"\n              },\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"secAuthProtection\": \"<boolean>\"\n              },\n              \"entities\": {\n                \"groups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"gpu\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        },\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"group\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"createDatacenter\": \"<boolean>\",\n                \"createSnapshot\": \"<boolean>\",\n                \"reserveIp\": \"<boolean>\",\n                \"accessActivityLog\": \"<boolean>\",\n                \"createPcc\": \"<boolean>\",\n                \"s3Privilege\": \"<boolean>\",\n                \"createBackupUnit\": \"<boolean>\",\n                \"createInternetAccess\": \"<boolean>\",\n                \"createK8sCluster\": \"<boolean>\",\n                \"createFlowLog\": \"<boolean>\",\n                \"accessAndManageMonitoring\": \"<boolean>\",\n                \"accessAndManageCertificates\": \"<boolean>\",\n                \"manageDBaaS\": \"<boolean>\",\n                \"accessAndManageDns\": \"<boolean>\",\n                \"manageRegistry\": \"<boolean>\",\n                \"manageDataplatform\": \"<boolean>\",\n                \"accessAndManageLogging\": \"<boolean>\",\n                \"accessAndManageCdn\": \"<boolean>\",\n                \"accessAndManageVpn\": \"<boolean>\",\n                \"accessAndManageApiGateway\": \"<boolean>\",\n                \"accessAndManageKaas\": \"<boolean>\",\n                \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n                \"accessAndManageAiModelHub\": \"<boolean>\",\n                \"accessAndManageIamResources\": \"<boolean>\",\n                \"createNetworkSecurityGroups\": \"<boolean>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"datacenter\",\n              \"href\": \"<uri>\",\n              \"entities\": {\n                \"users\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"location\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    }\n                  ]\n                },\n                \"resources\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"volume\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"createDatacenter\": \"<boolean>\",\n                \"createSnapshot\": \"<boolean>\",\n                \"reserveIp\": \"<boolean>\",\n                \"accessActivityLog\": \"<boolean>\",\n                \"createPcc\": \"<boolean>\",\n                \"s3Privilege\": \"<boolean>\",\n                \"createBackupUnit\": \"<boolean>\",\n                \"createInternetAccess\": \"<boolean>\",\n                \"createK8sCluster\": \"<boolean>\",\n                \"createFlowLog\": \"<boolean>\",\n                \"accessAndManageMonitoring\": \"<boolean>\",\n                \"accessAndManageCertificates\": \"<boolean>\",\n                \"manageDBaaS\": \"<boolean>\",\n                \"accessAndManageDns\": \"<boolean>\",\n                \"manageRegistry\": \"<boolean>\",\n                \"manageDataplatform\": \"<boolean>\",\n                \"accessAndManageLogging\": \"<boolean>\",\n                \"accessAndManageCdn\": \"<boolean>\",\n                \"accessAndManageVpn\": \"<boolean>\",\n                \"accessAndManageApiGateway\": \"<boolean>\",\n                \"accessAndManageKaas\": \"<boolean>\",\n                \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n                \"accessAndManageAiModelHub\": \"<boolean>\",\n                \"accessAndManageIamResources\": \"<boolean>\",\n                \"createNetworkSecurityGroups\": \"<boolean>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"forwarding-rule\",\n              \"href\": \"<uri>\",\n              \"entities\": {\n                \"users\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    }\n                  ]\n                },\n                \"resources\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"datacenter\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"email\": \"<string>\",\n        \"administrator\": \"<boolean>\",\n        \"forceSecAuth\": \"<boolean>\",\n        \"secAuthActive\": \"<boolean>\",\n        \"s3CanonicalUserId\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"resource\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"lastLogin\": \"<dateTime>\"\n      },\n      \"entities\": {\n        \"owns\": {\n          \"id\": \"<string>\",\n          \"type\": \"flow-log\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"UNKNOWN\"\n              },\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"secAuthProtection\": \"<boolean>\"\n              },\n              \"entities\": {\n                \"groups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"pcc\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"image\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"TERMINATED\"\n              },\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"secAuthProtection\": \"<boolean>\"\n              },\n              \"entities\": {\n                \"groups\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        },\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"createDatacenter\": \"<boolean>\",\n                \"createSnapshot\": \"<boolean>\",\n                \"reserveIp\": \"<boolean>\",\n                \"accessActivityLog\": \"<boolean>\",\n                \"createPcc\": \"<boolean>\",\n                \"s3Privilege\": \"<boolean>\",\n                \"createBackupUnit\": \"<boolean>\",\n                \"createInternetAccess\": \"<boolean>\",\n                \"createK8sCluster\": \"<boolean>\",\n                \"createFlowLog\": \"<boolean>\",\n                \"accessAndManageMonitoring\": \"<boolean>\",\n                \"accessAndManageCertificates\": \"<boolean>\",\n                \"manageDBaaS\": \"<boolean>\",\n                \"accessAndManageDns\": \"<boolean>\",\n                \"manageRegistry\": \"<boolean>\",\n                \"manageDataplatform\": \"<boolean>\",\n                \"accessAndManageLogging\": \"<boolean>\",\n                \"accessAndManageCdn\": \"<boolean>\",\n                \"accessAndManageVpn\": \"<boolean>\",\n                \"accessAndManageApiGateway\": \"<boolean>\",\n                \"accessAndManageKaas\": \"<boolean>\",\n                \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n                \"accessAndManageAiModelHub\": \"<boolean>\",\n                \"accessAndManageIamResources\": \"<boolean>\",\n                \"createNetworkSecurityGroups\": \"<boolean>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"volume\",\n              \"href\": \"<uri>\",\n              \"entities\": {\n                \"users\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"backupunit\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    }\n                  ]\n                },\n                \"resources\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"s3key\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"properties\": {\n                \"name\": \"<string>\",\n                \"createDatacenter\": \"<boolean>\",\n                \"createSnapshot\": \"<boolean>\",\n                \"reserveIp\": \"<boolean>\",\n                \"accessActivityLog\": \"<boolean>\",\n                \"createPcc\": \"<boolean>\",\n                \"s3Privilege\": \"<boolean>\",\n                \"createBackupUnit\": \"<boolean>\",\n                \"createInternetAccess\": \"<boolean>\",\n                \"createK8sCluster\": \"<boolean>\",\n                \"createFlowLog\": \"<boolean>\",\n                \"accessAndManageMonitoring\": \"<boolean>\",\n                \"accessAndManageCertificates\": \"<boolean>\",\n                \"manageDBaaS\": \"<boolean>\",\n                \"accessAndManageDns\": \"<boolean>\",\n                \"manageRegistry\": \"<boolean>\",\n                \"manageDataplatform\": \"<boolean>\",\n                \"accessAndManageLogging\": \"<boolean>\",\n                \"accessAndManageCdn\": \"<boolean>\",\n                \"accessAndManageVpn\": \"<boolean>\",\n                \"accessAndManageApiGateway\": \"<boolean>\",\n                \"accessAndManageKaas\": \"<boolean>\",\n                \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n                \"accessAndManageAiModelHub\": \"<boolean>\",\n                \"accessAndManageIamResources\": \"<boolean>\",\n                \"createNetworkSecurityGroups\": \"<boolean>\"\n              },\n              \"id\": \"<string>\",\n              \"type\": \"request-status\",\n              \"href\": \"<uri>\",\n              \"entities\": {\n                \"users\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"target-group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                    }\n                  ]\n                },\n                \"resources\": {\n                  \"id\": \"<string>\",\n                  \"type\": \"group\",\n                  \"href\": \"<uri>\",\n                  \"items\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/users?pretty=true&depth=0&offset=0&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination)."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return (use together with <code>offset</code> for pagination)."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create users",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/um/users?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"um",
										"users"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								},
								"description": "Create a user."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/users?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"s3CanonicalUserId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"datacenter\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\"\n  },\n  \"entities\": {\n    \"owns\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"groups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"target-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/users?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"users"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "groups",
					"item": [
						{
							"name": "{groupId}",
							"item": [
								{
									"name": "resources",
									"item": [
										{
											"name": "Retrieve group resources",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId/resources?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId",
														"resources"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the group."
														}
													]
												},
												"description": "List the resources assigned to the group, by group ID."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/resources?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"resources"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/resources?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"resources"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "users",
									"item": [
										{
											"name": "{userId}",
											"item": [
												{
													"name": "Remove users from groups",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/users/:userId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"users",
																":userId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the group."
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the user."
																}
															]
														},
														"description": "Remove the specified user from the group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/users/:userId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"users",
																		":userId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/users/:userId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"users",
																		":userId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List group members",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId",
														"users"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the group."
														}
													]
												},
												"description": "List all members of the specified user group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"users"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"security-group\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"users"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add a Group Member",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId",
														"users"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the group."
														}
													]
												},
												"description": "Adds an existing user to the specified group. "
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"users"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "Location",
															"value": "https://s/requests/I/status",
															"description": {
																"content": "Callback URL to poll async operation status.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"email\": \"<string>\",\n    \"administrator\": \"<boolean>\",\n    \"forceSecAuth\": \"<boolean>\",\n    \"secAuthActive\": \"<boolean>\",\n    \"s3CanonicalUserId\": \"<string>\",\n    \"active\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"datacenter\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\"\n  },\n  \"entities\": {\n    \"owns\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"backupunit\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"UNKNOWN\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"snapshot\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"SUSPENDED\"\n          },\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"secAuthProtection\": \"<boolean>\"\n          },\n          \"entities\": {\n            \"groups\": {\n              \"id\": \"<string>\",\n              \"type\": \"s3key\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"groups\": {\n      \"id\": \"<string>\",\n      \"type\": \"ipblock\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"firewall-rule\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"user\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"target-group\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"name\": \"<string>\",\n            \"createDatacenter\": \"<boolean>\",\n            \"createSnapshot\": \"<boolean>\",\n            \"reserveIp\": \"<boolean>\",\n            \"accessActivityLog\": \"<boolean>\",\n            \"createPcc\": \"<boolean>\",\n            \"s3Privilege\": \"<boolean>\",\n            \"createBackupUnit\": \"<boolean>\",\n            \"createInternetAccess\": \"<boolean>\",\n            \"createK8sCluster\": \"<boolean>\",\n            \"createFlowLog\": \"<boolean>\",\n            \"accessAndManageMonitoring\": \"<boolean>\",\n            \"accessAndManageCertificates\": \"<boolean>\",\n            \"manageDBaaS\": \"<boolean>\",\n            \"accessAndManageDns\": \"<boolean>\",\n            \"manageRegistry\": \"<boolean>\",\n            \"manageDataplatform\": \"<boolean>\",\n            \"accessAndManageLogging\": \"<boolean>\",\n            \"accessAndManageCdn\": \"<boolean>\",\n            \"accessAndManageVpn\": \"<boolean>\",\n            \"accessAndManageApiGateway\": \"<boolean>\",\n            \"accessAndManageKaas\": \"<boolean>\",\n            \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n            \"accessAndManageAiModelHub\": \"<boolean>\",\n            \"accessAndManageIamResources\": \"<boolean>\",\n            \"createNetworkSecurityGroups\": \"<boolean>\"\n          },\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"entities\": {\n            \"users\": {\n              \"id\": \"<string>\",\n              \"type\": \"pcc\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n                }\n              ]\n            },\n            \"resources\": {\n              \"id\": \"<string>\",\n              \"type\": \"natgateway\",\n              \"href\": \"<uri>\",\n              \"items\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/users?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"users"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "shares",
									"item": [
										{
											"name": "{resourceId}",
											"item": [
												{
													"name": "Retrieve group shares",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the group."
																},
																{
																	"key": "resourceId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the resource."
																}
															]
														},
														"description": "Retrieve the properties of the specified group share."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nic\",\n  \"href\": \"<uri>\"\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Modify group share privileges",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the group."
																},
																{
																	"key": "resourceId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the resource."
																}
															]
														},
														"description": "Modify share permissions for the specified group. With an empty body, no updates are performed, and the current share permissions for the group are returned with response code 200."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nic\",\n  \"href\": \"<uri>\"\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Add group shares",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "*/*"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the group."
																},
																{
																	"key": "resourceId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the resource."
																}
															]
														},
														"description": "Add the specified share to the group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nic\",\n  \"href\": \"<uri>\"\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Content-Type",
																		"value": "*/*"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"properties\": {\n    \"editPrivilege\": \"<boolean>\",\n    \"sharePrivilege\": \"<boolean>\"\n  },\n  \"type\": \"nodepool\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Remove group shares",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the group."
																},
																{
																	"key": "resourceId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the resource."
																}
															]
														},
														"description": "Remove the specified share from the group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "Location",
																	"value": "https://s/requests/I/status",
																	"description": {
																		"content": "Callback URL to poll async operation status.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/um/groups/:groupId/shares/:resourceId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"um",
																		"groups",
																		":groupId",
																		"shares",
																		":resourceId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupId"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List group shares ",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId/shares?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId",
														"shares"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The unique ID of the group."
														}
													]
												},
												"description": "List all shares and share privileges for the specified group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"editPrivilege\": \"<boolean>\",\n        \"sharePrivilege\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"loadbalancer\",\n      \"href\": \"<uri>\"\n    },\n    {\n      \"properties\": {\n        \"editPrivilege\": \"<boolean>\",\n        \"sharePrivilege\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"request-status\",\n      \"href\": \"<uri>\"\n    }\n  ]\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/groups/:groupId/shares?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"groups",
																":groupId",
																"shares"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups",
												":groupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "groupId",
													"value": "<string>",
													"description": "(Required) The unique ID of the group."
												}
											]
										},
										"description": "Retrieve a group by the group ID. This value is in the response body when the group is created, and in the list of the groups, returned by GET."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"entities\": {\n    \"users\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        }\n      ]\n    },\n    \"resources\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        }\n      ]\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Modify groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups",
												":groupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "groupId",
													"value": "<string>",
													"description": "(Required) The unique ID of the group."
												}
											]
										},
										"description": "Modify the properties of the specified group."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"entities\": {\n    \"users\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        }\n      ]\n    },\n    \"resources\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        }\n      ]\n    }\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups",
												":groupId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "groupId",
													"value": "<string>",
													"description": "(Required) The unique ID of the group."
												}
											]
										},
										"description": "Remove the specified group."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "Location",
													"value": "https://s/requests/I/status",
													"description": {
														"content": "Callback URL to poll async operation status.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/groups/:groupId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"groups",
														":groupId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List all groups",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"um",
										"groups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								},
								"description": "List all the available user groups."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"gpu\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"createDatacenter\": \"<boolean>\",\n        \"createSnapshot\": \"<boolean>\",\n        \"reserveIp\": \"<boolean>\",\n        \"accessActivityLog\": \"<boolean>\",\n        \"createPcc\": \"<boolean>\",\n        \"s3Privilege\": \"<boolean>\",\n        \"createBackupUnit\": \"<boolean>\",\n        \"createInternetAccess\": \"<boolean>\",\n        \"createK8sCluster\": \"<boolean>\",\n        \"createFlowLog\": \"<boolean>\",\n        \"accessAndManageMonitoring\": \"<boolean>\",\n        \"accessAndManageCertificates\": \"<boolean>\",\n        \"manageDBaaS\": \"<boolean>\",\n        \"accessAndManageDns\": \"<boolean>\",\n        \"manageRegistry\": \"<boolean>\",\n        \"manageDataplatform\": \"<boolean>\",\n        \"accessAndManageLogging\": \"<boolean>\",\n        \"accessAndManageCdn\": \"<boolean>\",\n        \"accessAndManageVpn\": \"<boolean>\",\n        \"accessAndManageApiGateway\": \"<boolean>\",\n        \"accessAndManageKaas\": \"<boolean>\",\n        \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n        \"accessAndManageAiModelHub\": \"<boolean>\",\n        \"accessAndManageIamResources\": \"<boolean>\",\n        \"createNetworkSecurityGroups\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"location\",\n      \"href\": \"<uri>\",\n      \"entities\": {\n        \"users\": {\n          \"id\": \"<string>\",\n          \"type\": \"label\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n            }\n          ]\n        },\n        \"resources\": {\n          \"id\": \"<string>\",\n          \"type\": \"pcc\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"createDatacenter\": \"<boolean>\",\n        \"createSnapshot\": \"<boolean>\",\n        \"reserveIp\": \"<boolean>\",\n        \"accessActivityLog\": \"<boolean>\",\n        \"createPcc\": \"<boolean>\",\n        \"s3Privilege\": \"<boolean>\",\n        \"createBackupUnit\": \"<boolean>\",\n        \"createInternetAccess\": \"<boolean>\",\n        \"createK8sCluster\": \"<boolean>\",\n        \"createFlowLog\": \"<boolean>\",\n        \"accessAndManageMonitoring\": \"<boolean>\",\n        \"accessAndManageCertificates\": \"<boolean>\",\n        \"manageDBaaS\": \"<boolean>\",\n        \"accessAndManageDns\": \"<boolean>\",\n        \"manageRegistry\": \"<boolean>\",\n        \"manageDataplatform\": \"<boolean>\",\n        \"accessAndManageLogging\": \"<boolean>\",\n        \"accessAndManageCdn\": \"<boolean>\",\n        \"accessAndManageVpn\": \"<boolean>\",\n        \"accessAndManageApiGateway\": \"<boolean>\",\n        \"accessAndManageKaas\": \"<boolean>\",\n        \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n        \"accessAndManageAiModelHub\": \"<boolean>\",\n        \"accessAndManageIamResources\": \"<boolean>\",\n        \"createNetworkSecurityGroups\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"entities\": {\n        \"users\": {\n          \"id\": \"<string>\",\n          \"type\": \"resource\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n            }\n          ]\n        },\n        \"resources\": {\n          \"id\": \"<string>\",\n          \"type\": \"applicationloadbalancer\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create groups",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"um",
										"groups"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								},
								"description": "Create a group."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"entities\": {\n    \"users\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/User detected>\"\n        }\n      ]\n    },\n    \"resources\": {\n      \"id\": \"<string>\",\n      \"type\": \"applicationloadbalancer\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        }\n      ]\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"createDatacenter\": \"<boolean>\",\n    \"createSnapshot\": \"<boolean>\",\n    \"reserveIp\": \"<boolean>\",\n    \"accessActivityLog\": \"<boolean>\",\n    \"createPcc\": \"<boolean>\",\n    \"s3Privilege\": \"<boolean>\",\n    \"createBackupUnit\": \"<boolean>\",\n    \"createInternetAccess\": \"<boolean>\",\n    \"createK8sCluster\": \"<boolean>\",\n    \"createFlowLog\": \"<boolean>\",\n    \"accessAndManageMonitoring\": \"<boolean>\",\n    \"accessAndManageCertificates\": \"<boolean>\",\n    \"manageDBaaS\": \"<boolean>\",\n    \"accessAndManageDns\": \"<boolean>\",\n    \"manageRegistry\": \"<boolean>\",\n    \"manageDataplatform\": \"<boolean>\",\n    \"accessAndManageLogging\": \"<boolean>\",\n    \"accessAndManageCdn\": \"<boolean>\",\n    \"accessAndManageVpn\": \"<boolean>\",\n    \"accessAndManageApiGateway\": \"<boolean>\",\n    \"accessAndManageKaas\": \"<boolean>\",\n    \"accessAndManageNetworkFileStorage\": \"<boolean>\",\n    \"accessAndManageAiModelHub\": \"<boolean>\",\n    \"accessAndManageIamResources\": \"<boolean>\",\n    \"createNetworkSecurityGroups\": \"<boolean>\"\n  },\n  \"type\": \"gpu\",\n  \"entities\": {\n    \"users\": {\n      \"type\": \"collection\"\n    },\n    \"resources\": {\n      \"type\": \"pcc\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/um/groups?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"groups"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "resources",
					"item": [
						{
							"name": "{resourceType}",
							"item": [
								{
									"name": "{resourceId}",
									"item": [
										{
											"name": "Retrieve resources by type",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/resources/:resourceType/:resourceId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"resources",
														":resourceType",
														":resourceId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "resourceType",
															"value": "<string>",
															"description": "(Required) The resource type"
														},
														{
															"key": "resourceId",
															"value": "<string>",
															"description": "(Required) The resource ID"
														}
													]
												},
												"description": "Retrieve a resource by the resource type and resource ID.\n\nResource types are: {datacenter, snapshot, image, ipblock, pcc, backupunit, k8s}\n\nResource types are in the list of resources, returned by GET."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/resources/:resourceType/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"resources",
																":resourceType",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "resourceType"
																},
																{
																	"key": "resourceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"user\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"secAuthProtection\": \"<boolean>\"\n  },\n  \"entities\": {\n    \"groups\": {\n      \"id\": \"<string>\",\n      \"type\": \"group\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n        }\n      ]\n    }\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/um/resources/:resourceType/:resourceId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"um",
																"resources",
																":resourceType",
																":resourceId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "resourceType"
																},
																{
																	"key": "resourceId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List resources by type",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/resources/:resourceType?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"resources",
												":resourceType"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "resourceType",
													"value": "<string>",
													"description": "(Required) The resource type"
												}
											]
										},
										"description": "List all resources of the specified type.\n\nResource types are: {datacenter, snapshot, image, ipblock, pcc, backupunit, k8s}\n\nResource types are in the list of resources, returned by GET."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/resources/:resourceType?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"resources",
														":resourceType"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "resourceType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DEPLOYING\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_HIBERNATING\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/um/resources/:resourceType?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"um",
														"resources",
														":resourceType"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "resourceType"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List all resources",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/um/resources?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"um",
										"resources"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								},
								"description": "List all the available resources."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/resources?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"resources"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"volume\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DEPLOYING\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"forwarding-rule\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_HIBERNATING\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"secAuthProtection\": \"<boolean>\"\n      },\n      \"entities\": {\n        \"groups\": {\n          \"id\": \"<string>\",\n          \"type\": \"k8s\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Resource detected>\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/um/resources?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"um",
												"resources"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "backupunits",
			"item": [
				{
					"name": "{backupunitId}",
					"item": [
						{
							"name": "ssourl",
							"item": [
								{
									"name": "Retrieve BU single sign-on URLs",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId/ssourl?pretty=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId",
												"ssourl"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												}
											],
											"variable": [
												{
													"key": "backupunitId",
													"value": "<string>",
													"description": "(Required) The unique ID of the backup unit."
												}
											]
										},
										"description": "Retrieve a single sign-on URL for the specified backup unit."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/backupunits/:backupunitId/ssourl?pretty=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"backupunits",
														":backupunitId",
														"ssourl"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														}
													],
													"variable": [
														{
															"key": "backupunitId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"ssoUrl\": \"<string>\"\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/backupunits/:backupunitId/ssourl?pretty=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"backupunits",
														":backupunitId",
														"ssourl"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														}
													],
													"variable": [
														{
															"key": "backupunitId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve backup units",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits",
										":backupunitId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "backupunitId",
											"value": "<string>",
											"description": "(Required) The unique ID of the backup unit."
										}
									]
								},
								"description": "Retrieve the properties of the specified backup unit."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify backup units",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits",
										":backupunitId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "backupunitId",
											"value": "<string>",
											"description": "(Required) The unique ID of the backup unit."
										}
									]
								},
								"description": "Modify the properties of the specified backup unit."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete backup units",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits",
										":backupunitId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "backupunitId",
											"value": "<string>",
											"description": "(Required) The unique ID of the backup unit."
										}
									]
								},
								"description": "Remove the specified backup unit.\n\nThis process will delete:\n1) The backup plans inside the backup unit\n2) All backups, associated with this backup unit\n3) The backup user\n4) The backup unit itself"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify backup units",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits",
										":backupunitId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "backupunitId",
											"value": "<string>",
											"description": "(Required) The unique ID of the backup unit."
										}
									]
								},
								"description": "Update the properties of the specified backup unit."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backupunits/:backupunitId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backupunits",
												":backupunitId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "backupunitId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List backup units",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backupunits"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "List all available backup units."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"password\": \"<string>\",\n        \"email\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"backupunit\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_SUSPENDED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"password\": \"<string>\",\n        \"email\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"backupunit\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"ACTIVE\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create backup units",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backupunits"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "Location",
									"value": "https://s/requests/I/status",
									"description": {
										"content": "Callback URL to poll async operation status.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"backupunit\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/backupunits?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backupunits"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "k8s",
			"item": [
				{
					"name": "{k8sClusterId}",
					"item": [
						{
							"name": "kubeconfig",
							"item": [
								{
									"name": "Get Kubernetes Configuration File",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/yaml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId/kubeconfig?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId",
												"kubeconfig"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the Kubernetes cluster."
												}
											]
										},
										"description": "Retrieves the configuration file for the specified K8s cluster. You can define the format (YAML or JSON) of the returned file in the Accept header. By default, 'application/yaml' is specified."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/yaml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/kubeconfig?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"kubeconfig"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/yaml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/kubeconfig?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"kubeconfig"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "nodepools",
							"item": [
								{
									"name": "{nodepoolId}",
									"item": [
										{
											"name": "nodes",
											"item": [
												{
													"name": "{nodeId}",
													"item": [
														{
															"name": "replace",
															"item": [
																{
																	"name": "Recreate a Kubernetes Node by ID",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId/replace?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"k8s",
																				":k8sClusterId",
																				"nodepools",
																				":nodepoolId",
																				"nodes",
																				":nodeId",
																				"replace"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "k8sClusterId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the Kubernetes cluster."
																				},
																				{
																					"key": "nodepoolId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the Kubernetes node pool."
																				},
																				{
																					"key": "nodeId",
																					"value": "<string>",
																					"description": "(Required) The unique ID of the Kubernetes node."
																				}
																			]
																		},
																		"description": "Recreates the K8s node specified by its ID.\n\nIf a node becomes unusable, Managed Kubernetes allows you to recreate it with a configuration based on the node pool template. Once the status is 'Active,' all the pods from the failed node will be migrated to the new node. The node pool has an additional billable 'active' node during this process."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId/replace?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"k8s",
																						":k8sClusterId",
																						"nodepools",
																						":nodepoolId",
																						"nodes",
																						":nodeId",
																						"replace"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "k8sClusterId"
																						},
																						{
																							"key": "nodepoolId"
																						},
																						{
																							"key": "nodeId"
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "X-RateLimit-Remaining",
																					"value": "<integer>",
																					"description": {
																						"content": "The number of requests that can still be made without triggering a failure response.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Limit",
																					"value": "<integer>",
																					"description": {
																						"content": "The average number of requests per minute allowed.",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "X-RateLimit-Burst",
																					"value": "<integer>",
																					"description": {
																						"content": "The maximum number of concurrent API requests allowed.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-Contract-Number",
																						"value": "<integer>",
																						"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId/replace?pretty=true&depth=0",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"k8s",
																						":k8sClusterId",
																						"nodepools",
																						":nodepoolId",
																						"nodes",
																						":nodeId",
																						"replace"
																					],
																					"query": [
																						{
																							"key": "pretty",
																							"value": "true",
																							"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																						},
																						{
																							"key": "depth",
																							"value": "0",
																							"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																						}
																					],
																					"variable": [
																						{
																							"key": "k8sClusterId"
																						},
																						{
																							"key": "nodepoolId"
																						},
																						{
																							"key": "nodeId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get Kubernetes Node by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"k8s",
																		":k8sClusterId",
																		"nodepools",
																		":nodepoolId",
																		"nodes",
																		":nodeId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "k8sClusterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes cluster."
																		},
																		{
																			"key": "nodepoolId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes node pool."
																		},
																		{
																			"key": "nodeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes node."
																		}
																	]
																},
																"description": "Retrieves the K8s node specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"k8s",
																				":k8sClusterId",
																				"nodepools",
																				":nodepoolId",
																				"nodes",
																				":nodeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "k8sClusterId"
																				},
																				{
																					"key": "nodepoolId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"properties\": {\n    \"k8sVersion\": \"<string>\",\n    \"name\": \"<string>\",\n    \"publicIP\": \"<string>\",\n    \"privateIP\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"node\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"state\": \"PROVISIONED\",\n    \"lastSoftwareUpdatedDate\": \"<dateTime>\"\n  }\n}"
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"k8s",
																				":k8sClusterId",
																				"nodepools",
																				":nodepoolId",
																				"nodes",
																				":nodeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "k8sClusterId"
																				},
																				{
																					"key": "nodepoolId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete a Kubernetes Node by ID",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"k8s",
																		":k8sClusterId",
																		"nodepools",
																		":nodepoolId",
																		"nodes",
																		":nodeId"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "k8sClusterId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes cluster."
																		},
																		{
																			"key": "nodepoolId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes node pool."
																		},
																		{
																			"key": "nodeId",
																			"value": "<string>",
																			"description": "(Required) The unique ID of the Kubernetes node."
																		}
																	]
																},
																"description": "Deletes the K8s node specified by its ID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"k8s",
																				":k8sClusterId",
																				"nodepools",
																				":nodepoolId",
																				"nodes",
																				":nodeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "k8sClusterId"
																				},
																				{
																					"key": "nodepoolId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "X-RateLimit-Remaining",
																			"value": "<integer>",
																			"description": {
																				"content": "The number of requests that can still be made without triggering a failure response.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Limit",
																			"value": "<integer>",
																			"description": {
																				"content": "The average number of requests per minute allowed.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "X-RateLimit-Burst",
																			"value": "<integer>",
																			"description": {
																				"content": "The maximum number of concurrent API requests allowed.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Contract-Number",
																				"value": "<integer>",
																				"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes/:nodeId?pretty=true&depth=0",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"k8s",
																				":k8sClusterId",
																				"nodepools",
																				":nodepoolId",
																				"nodes",
																				":nodeId"
																			],
																			"query": [
																				{
																					"key": "pretty",
																					"value": "true",
																					"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																				},
																				{
																					"key": "depth",
																					"value": "0",
																					"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																				}
																			],
																			"variable": [
																				{
																					"key": "k8sClusterId"
																				},
																				{
																					"key": "nodepoolId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Kubernetes Nodes",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId",
																"nodes"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Kubernetes cluster."
																},
																{
																	"key": "nodepoolId",
																	"value": "<string>",
																	"description": "(Required) The unique ID of the Kubernetes node pool."
																}
															]
														},
														"description": "Retrieves the list of all K8s nodes of the specified node pool."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"k8s",
																		":k8sClusterId",
																		"nodepools",
																		":nodepoolId",
																		"nodes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "k8sClusterId"
																		},
																		{
																			"key": "nodepoolId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "X-RateLimit-Remaining",
																	"value": "<integer>",
																	"description": {
																		"content": "The number of requests that can still be made without triggering a failure response.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Limit",
																	"value": "<integer>",
																	"description": {
																		"content": "The average number of requests per minute allowed.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "X-RateLimit-Burst",
																	"value": "<integer>",
																	"description": {
																		"content": "The maximum number of concurrent API requests allowed.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"k8sVersion\": \"<string>\",\n        \"name\": \"<string>\",\n        \"publicIP\": \"<string>\",\n        \"privateIP\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"state\": \"PROVISIONED\",\n        \"lastSoftwareUpdatedDate\": \"<dateTime>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"k8sVersion\": \"<string>\",\n        \"name\": \"<string>\",\n        \"publicIP\": \"<string>\",\n        \"privateIP\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"node\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"state\": \"BUSY\",\n        \"lastSoftwareUpdatedDate\": \"<dateTime>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Contract-Number",
																		"value": "<integer>",
																		"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId/nodes?pretty=true&depth=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"k8s",
																		":k8sClusterId",
																		"nodepools",
																		":nodepoolId",
																		"nodes"
																	],
																	"query": [
																		{
																			"key": "pretty",
																			"value": "true",
																			"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																		},
																		{
																			"key": "depth",
																			"value": "0",
																			"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																		}
																	],
																	"variable": [
																		{
																			"key": "k8sClusterId"
																		},
																		{
																			"key": "nodepoolId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a Kubernetes Node Pool by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools",
														":nodepoolId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes cluster."
														},
														{
															"key": "nodepoolId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes node pool."
														}
													]
												},
												"description": "Retrieves the K8s node pool specified by its ID."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"ut_c\": \"<string>\"\n    },\n    \"annotations\": {\n      \"magna29c\": \"<string>\",\n      \"quif\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify a Kubernetes Node Pool by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"nodeCount\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"serverType\": \"DedicatedCore\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"commodo2\": \"<string>\"\n    },\n    \"annotations\": {\n      \"Utaae\": \"<string>\",\n      \"cupidatat_8\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools",
														":nodepoolId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes cluster."
														},
														{
															"key": "nodepoolId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes node pool."
														}
													]
												},
												"description": "Modifies the K8s node pool specified by its ID."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"nodeCount\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"serverType\": \"DedicatedCore\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"commodo2\": \"<string>\"\n    },\n    \"annotations\": {\n      \"Utaae\": \"<string>\",\n      \"cupidatat_8\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"ut_c\": \"<string>\"\n    },\n    \"annotations\": {\n      \"magna29c\": \"<string>\",\n      \"quif\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"nodeCount\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"serverType\": \"DedicatedCore\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"commodo2\": \"<string>\"\n    },\n    \"annotations\": {\n      \"Utaae\": \"<string>\",\n      \"cupidatat_8\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a Kubernetes Node Pool by ID",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools",
														":nodepoolId"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes cluster."
														},
														{
															"key": "nodepoolId",
															"value": "<string>",
															"description": "(Required) The unique ID of the Kubernetes node pool."
														}
													]
												},
												"description": "Deletes the K8s node pool specified by its ID."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "X-RateLimit-Remaining",
															"value": "<integer>",
															"description": {
																"content": "The number of requests that can still be made without triggering a failure response.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "<integer>",
															"description": {
																"content": "The average number of requests per minute allowed.",
																"type": "text/plain"
															}
														},
														{
															"key": "X-RateLimit-Burst",
															"value": "<integer>",
															"description": {
																"content": "The maximum number of concurrent API requests allowed.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Contract-Number",
																"value": "<integer>",
																"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools/:nodepoolId?pretty=true&depth=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"k8s",
																":k8sClusterId",
																"nodepools",
																":nodepoolId"
															],
															"query": [
																{
																	"key": "pretty",
																	"value": "true",
																	"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
																},
																{
																	"key": "depth",
																	"value": "0",
																	"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
																}
															],
															"variable": [
																{
																	"key": "k8sClusterId"
																},
																{
																	"key": "nodepoolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Kubernetes Node Pools",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId",
												"nodepools"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the Kubernetes cluster."
												}
											]
										},
										"description": "Retrieves a list of K8s node pools of a cluster specified by its ID."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"availabilityZone\": \"ZONE_1\",\n        \"coresCount\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"nodeCount\": \"<integer>\",\n        \"ramSize\": \"<integer>\",\n        \"storageSize\": \"<integer>\",\n        \"storageType\": \"HDD\",\n        \"serverType\": \"DedicatedCore\",\n        \"cpuFamily\": \"<string>\",\n        \"k8sVersion\": \"<string>\",\n        \"maintenanceWindow\": {\n          \"dayOfTheWeek\": \"Monday\",\n          \"time\": \"<string>\"\n        },\n        \"autoScaling\": {\n          \"maxNodeCount\": \"<integer>\",\n          \"minNodeCount\": \"<integer>\"\n        },\n        \"lans\": [\n          {\n            \"id\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"dhcp\": \"<boolean>\",\n            \"routes\": [\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              },\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"dhcp\": \"<boolean>\",\n            \"routes\": [\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              },\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"labels\": {\n          \"ametfa5\": \"<string>\",\n          \"Excepteur_4\": \"<string>\",\n          \"irure4b\": \"<string>\"\n        },\n        \"annotations\": {\n          \"elit_f\": \"<string>\",\n          \"commodo_f0a\": \"<string>\",\n          \"esse_1b\": \"<string>\"\n        },\n        \"publicIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"availableUpgradeVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"TERMINATED\"\n      }\n    },\n    {\n      \"properties\": {\n        \"availabilityZone\": \"ZONE_1\",\n        \"coresCount\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"nodeCount\": \"<integer>\",\n        \"ramSize\": \"<integer>\",\n        \"storageSize\": \"<integer>\",\n        \"storageType\": \"SSD\",\n        \"serverType\": \"DedicatedCore\",\n        \"cpuFamily\": \"<string>\",\n        \"k8sVersion\": \"<string>\",\n        \"maintenanceWindow\": {\n          \"dayOfTheWeek\": \"Saturday\",\n          \"time\": \"<string>\"\n        },\n        \"autoScaling\": {\n          \"maxNodeCount\": \"<integer>\",\n          \"minNodeCount\": \"<integer>\"\n        },\n        \"lans\": [\n          {\n            \"id\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"dhcp\": \"<boolean>\",\n            \"routes\": [\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              },\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"id\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"dhcp\": \"<boolean>\",\n            \"routes\": [\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              },\n              {\n                \"network\": \"<string>\",\n                \"gatewayIp\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"labels\": {\n          \"in_f_\": \"<string>\"\n        },\n        \"annotations\": {\n          \"in1\": \"<string>\",\n          \"Ut_8\": \"<string>\"\n        },\n        \"publicIps\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"availableUpgradeVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"nodepool\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"DESTROYING\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a Kubernetes Node Pool",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"exercitation_6\": \"<string>\",\n      \"Lorema\": \"<string>\"\n    },\n    \"annotations\": {\n      \"voluptateda\": \"<string>\",\n      \"nostrudb\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId",
												"nodepools"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId",
													"value": "<string>",
													"description": "(Required) The unique ID of the Kubernetes cluster."
												}
											]
										},
										"description": "Creates a node pool inside the specified K8s cluster."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"exercitation_6\": \"<string>\",\n      \"Lorema\": \"<string>\"\n    },\n    \"annotations\": {\n      \"voluptateda\": \"<string>\",\n      \"nostrudb\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"ut_c\": \"<string>\"\n    },\n    \"annotations\": {\n      \"magna29c\": \"<string>\",\n      \"quif\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"FAILED_SUSPENDED\"\n  }\n}"
										},
										{
											"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Contract-Number",
														"value": "<integer>",
														"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"availabilityZone\": \"ZONE_2\",\n    \"coresCount\": \"<integer>\",\n    \"datacenterId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"nodeCount\": \"<integer>\",\n    \"ramSize\": \"<integer>\",\n    \"storageSize\": \"<integer>\",\n    \"storageType\": \"SSD\",\n    \"serverType\": \"DedicatedCore\",\n    \"cpuFamily\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Sunday\",\n      \"time\": \"<string>\"\n    },\n    \"autoScaling\": {\n      \"maxNodeCount\": \"<integer>\",\n      \"minNodeCount\": \"<integer>\"\n    },\n    \"lans\": [\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"datacenterId\": \"<string>\",\n        \"dhcp\": \"<boolean>\",\n        \"routes\": [\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          },\n          {\n            \"network\": \"<string>\",\n            \"gatewayIp\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"labels\": {\n      \"exercitation_6\": \"<string>\",\n      \"Lorema\": \"<string>\"\n    },\n    \"annotations\": {\n      \"voluptateda\": \"<string>\",\n      \"nostrudb\": \"<string>\"\n    },\n    \"publicIps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/k8s/:k8sClusterId/nodepools?pretty=true&depth=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														":k8sClusterId",
														"nodepools"
													],
													"query": [
														{
															"key": "pretty",
															"value": "true",
															"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
														},
														{
															"key": "depth",
															"value": "0",
															"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
														}
													],
													"variable": [
														{
															"key": "k8sClusterId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a Kubernetes Cluster by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s",
										":k8sClusterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "k8sClusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the K8s cluster to be retrieved."
										}
									]
								},
								"description": "Retrieves the K8s cluster specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"viableNodePoolVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  },\n  \"entities\": {\n    \"nodepools\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_2\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Friday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"Duis_09\": \"<string>\",\n              \"irure6\": \"<string>\"\n            },\n            \"annotations\": {\n              \"proident_8d\": \"<string>\",\n              \"quis_f\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_1\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Monday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"esse_9\": \"<string>\",\n              \"elit0\": \"<string>\",\n              \"auteb13\": \"<string>\"\n            },\n            \"annotations\": {\n              \"velit980\": \"<string>\",\n              \"fugiat_b65\": \"<string>\",\n              \"dolor6\": \"<string>\",\n              \"eaf4\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          }\n        }\n      ]\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Modify a Kubernetes Cluster by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Thursday\",\n      \"time\": \"<string>\"\n    },\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s",
										":k8sClusterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "k8sClusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the Kubernetes cluster."
										}
									]
								},
								"description": "Modifies the K8s cluster specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Thursday\",\n      \"time\": \"<string>\"\n    },\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"viableNodePoolVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  },\n  \"entities\": {\n    \"nodepools\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_2\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Friday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"Duis_09\": \"<string>\",\n              \"irure6\": \"<string>\"\n            },\n            \"annotations\": {\n              \"proident_8d\": \"<string>\",\n              \"quis_f\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_1\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Monday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"esse_9\": \"<string>\",\n              \"elit0\": \"<string>\",\n              \"auteb13\": \"<string>\"\n            },\n            \"annotations\": {\n              \"velit980\": \"<string>\",\n              \"fugiat_b65\": \"<string>\",\n              \"dolor6\": \"<string>\",\n              \"eaf4\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          }\n        }\n      ]\n    }\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Thursday\",\n      \"time\": \"<string>\"\n    },\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a Kubernetes Cluster by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s",
										":k8sClusterId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "k8sClusterId",
											"value": "<string>",
											"description": "(Required) The unique ID of the Kubernetes cluster."
										}
									]
								},
								"description": "Deletes the K8s cluster specified  by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/:k8sClusterId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												":k8sClusterId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "k8sClusterId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "versions",
					"item": [
						{
							"name": "default",
							"item": [
								{
									"name": "Get Default Kubernetes Version",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/versions/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												"versions",
												"default"
											]
										},
										"description": "Retrieves the current default K8s version to be used by the clusters and node pools."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/versions/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														"versions",
														"default"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "<integer>",
													"description": {
														"content": "The number of requests that can still be made without triggering a failure response.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "<integer>",
													"description": {
														"content": "The average number of requests per minute allowed.",
														"type": "text/plain"
													}
												},
												{
													"key": "X-RateLimit-Burst",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of concurrent API requests allowed.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Any erroneous status code: 401 (auth error), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation error), 500 (server error), 503 (maintenance)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/k8s/versions/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"k8s",
														"versions",
														"default"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Kubernetes Versions",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/k8s/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s",
										"versions"
									]
								},
								"description": "Lists available K8s versions."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												"versions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Any erroneous status code: 401 (auth error), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation error), 500 (server error), 503 (maintenance)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/k8s/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"k8s",
												"versions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Kubernetes Clusters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"k8s"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Retrieves a list of all K8s clusters provisioned under your account."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"k8sVersion\": \"<string>\",\n        \"maintenanceWindow\": {\n          \"dayOfTheWeek\": \"Wednesday\",\n          \"time\": \"<string>\"\n        },\n        \"availableUpgradeVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"viableNodePoolVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"public\": true,\n        \"location\": \"<string>\",\n        \"natGatewayIp\": \"<string>\",\n        \"nodeSubnet\": \"<string>\",\n        \"apiSubnetAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"s3Buckets\": [\n          {\n            \"name\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UNKNOWN\"\n      },\n      \"entities\": {\n        \"nodepools\": {\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"availabilityZone\": \"ZONE_2\",\n                \"coresCount\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"name\": \"<string>\",\n                \"nodeCount\": \"<integer>\",\n                \"ramSize\": \"<integer>\",\n                \"storageSize\": \"<integer>\",\n                \"storageType\": \"SSD\",\n                \"serverType\": \"DedicatedCore\",\n                \"cpuFamily\": \"<string>\",\n                \"k8sVersion\": \"<string>\",\n                \"maintenanceWindow\": {\n                  \"dayOfTheWeek\": \"Friday\",\n                  \"time\": \"<string>\"\n                },\n                \"autoScaling\": {\n                  \"maxNodeCount\": \"<integer>\",\n                  \"minNodeCount\": \"<integer>\"\n                },\n                \"lans\": [\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  }\n                ],\n                \"labels\": {\n                  \"dolore_7be\": \"<string>\",\n                  \"adipisicingcdf\": \"<string>\",\n                  \"adipisicing0a3\": \"<string>\"\n                },\n                \"annotations\": {\n                  \"ullamco_c32\": \"<string>\",\n                  \"aliquip_0\": \"<string>\",\n                  \"est5_2\": \"<string>\"\n                },\n                \"publicIps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"availableUpgradeVersions\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED\"\n              }\n            },\n            {\n              \"properties\": {\n                \"availabilityZone\": \"ZONE_1\",\n                \"coresCount\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"name\": \"<string>\",\n                \"nodeCount\": \"<integer>\",\n                \"ramSize\": \"<integer>\",\n                \"storageSize\": \"<integer>\",\n                \"storageType\": \"SSD\",\n                \"serverType\": \"DedicatedCore\",\n                \"cpuFamily\": \"<string>\",\n                \"k8sVersion\": \"<string>\",\n                \"maintenanceWindow\": {\n                  \"dayOfTheWeek\": \"Wednesday\",\n                  \"time\": \"<string>\"\n                },\n                \"autoScaling\": {\n                  \"maxNodeCount\": \"<integer>\",\n                  \"minNodeCount\": \"<integer>\"\n                },\n                \"lans\": [\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  }\n                ],\n                \"labels\": {\n                  \"irured\": \"<string>\"\n                },\n                \"annotations\": {\n                  \"Duis_795\": \"<string>\",\n                  \"in_\": \"<string>\",\n                  \"ullamco_b0\": \"<string>\"\n                },\n                \"publicIps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"availableUpgradeVersions\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"FAILED_SUSPENDED\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"k8sVersion\": \"<string>\",\n        \"maintenanceWindow\": {\n          \"dayOfTheWeek\": \"Wednesday\",\n          \"time\": \"<string>\"\n        },\n        \"availableUpgradeVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"viableNodePoolVersions\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"public\": true,\n        \"location\": \"<string>\",\n        \"natGatewayIp\": \"<string>\",\n        \"nodeSubnet\": \"<string>\",\n        \"apiSubnetAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"s3Buckets\": [\n          {\n            \"name\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"k8s\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"SUSPENDED\"\n      },\n      \"entities\": {\n        \"nodepools\": {\n          \"id\": \"<string>\",\n          \"type\": \"collection\",\n          \"href\": \"<uri>\",\n          \"items\": [\n            {\n              \"properties\": {\n                \"availabilityZone\": \"ZONE_1\",\n                \"coresCount\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"name\": \"<string>\",\n                \"nodeCount\": \"<integer>\",\n                \"ramSize\": \"<integer>\",\n                \"storageSize\": \"<integer>\",\n                \"storageType\": \"HDD\",\n                \"serverType\": \"DedicatedCore\",\n                \"cpuFamily\": \"<string>\",\n                \"k8sVersion\": \"<string>\",\n                \"maintenanceWindow\": {\n                  \"dayOfTheWeek\": \"Sunday\",\n                  \"time\": \"<string>\"\n                },\n                \"autoScaling\": {\n                  \"maxNodeCount\": \"<integer>\",\n                  \"minNodeCount\": \"<integer>\"\n                },\n                \"lans\": [\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  }\n                ],\n                \"labels\": {\n                  \"aute1\": \"<string>\"\n                },\n                \"annotations\": {\n                  \"ullamco_b52\": \"<string>\"\n                },\n                \"publicIps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"availableUpgradeVersions\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"AVAILABLE\"\n              }\n            },\n            {\n              \"properties\": {\n                \"availabilityZone\": \"ZONE_2\",\n                \"coresCount\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"name\": \"<string>\",\n                \"nodeCount\": \"<integer>\",\n                \"ramSize\": \"<integer>\",\n                \"storageSize\": \"<integer>\",\n                \"storageType\": \"SSD\",\n                \"serverType\": \"DedicatedCore\",\n                \"cpuFamily\": \"<string>\",\n                \"k8sVersion\": \"<string>\",\n                \"maintenanceWindow\": {\n                  \"dayOfTheWeek\": \"Friday\",\n                  \"time\": \"<string>\"\n                },\n                \"autoScaling\": {\n                  \"maxNodeCount\": \"<integer>\",\n                  \"minNodeCount\": \"<integer>\"\n                },\n                \"lans\": [\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"<integer>\",\n                    \"datacenterId\": \"<string>\",\n                    \"dhcp\": \"<boolean>\",\n                    \"routes\": [\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      },\n                      {\n                        \"network\": \"<string>\",\n                        \"gatewayIp\": \"<string>\"\n                      }\n                    ]\n                  }\n                ],\n                \"labels\": {\n                  \"ameta\": \"<string>\"\n                },\n                \"annotations\": {\n                  \"elit9_\": \"<string>\",\n                  \"in_ed\": \"<string>\",\n                  \"culpabc\": \"<string>\"\n                },\n                \"publicIps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"availableUpgradeVersions\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              },\n              \"id\": \"<string>\",\n              \"type\": \"nodepool\",\n              \"href\": \"<uri>\",\n              \"metadata\": {\n                \"etag\": \"<string>\",\n                \"createdDate\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"createdByUserId\": \"<string>\",\n                \"lastModifiedDate\": \"<dateTime>\",\n                \"lastModifiedBy\": \"<string>\",\n                \"lastModifiedByUserId\": \"<string>\",\n                \"state\": \"DESTROYING\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Kubernetes Cluster",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Saturday\",\n      \"time\": \"<string>\"\n    },\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"k8s"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Creates a K8s cluster provisioned under your account."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Saturday\",\n      \"time\": \"<string>\"\n    },\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Tuesday\",\n      \"time\": \"<string>\"\n    },\n    \"availableUpgradeVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"viableNodePoolVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"k8s\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  },\n  \"entities\": {\n    \"nodepools\": {\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"items\": [\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_2\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Friday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"Duis_09\": \"<string>\",\n              \"irure6\": \"<string>\"\n            },\n            \"annotations\": {\n              \"proident_8d\": \"<string>\",\n              \"quis_f\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"FAILED_UPDATING\"\n          }\n        },\n        {\n          \"properties\": {\n            \"availabilityZone\": \"ZONE_1\",\n            \"coresCount\": \"<integer>\",\n            \"datacenterId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"nodeCount\": \"<integer>\",\n            \"ramSize\": \"<integer>\",\n            \"storageSize\": \"<integer>\",\n            \"storageType\": \"SSD\",\n            \"serverType\": \"DedicatedCore\",\n            \"cpuFamily\": \"<string>\",\n            \"k8sVersion\": \"<string>\",\n            \"maintenanceWindow\": {\n              \"dayOfTheWeek\": \"Monday\",\n              \"time\": \"<string>\"\n            },\n            \"autoScaling\": {\n              \"maxNodeCount\": \"<integer>\",\n              \"minNodeCount\": \"<integer>\"\n            },\n            \"lans\": [\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<integer>\",\n                \"datacenterId\": \"<string>\",\n                \"dhcp\": \"<boolean>\",\n                \"routes\": [\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  },\n                  {\n                    \"network\": \"<string>\",\n                    \"gatewayIp\": \"<string>\"\n                  }\n                ]\n              }\n            ],\n            \"labels\": {\n              \"esse_9\": \"<string>\",\n              \"elit0\": \"<string>\",\n              \"auteb13\": \"<string>\"\n            },\n            \"annotations\": {\n              \"velit980\": \"<string>\",\n              \"fugiat_b65\": \"<string>\",\n              \"dolor6\": \"<string>\",\n              \"eaf4\": \"<string>\"\n            },\n            \"publicIps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"availableUpgradeVersions\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"id\": \"<string>\",\n          \"type\": \"nodepool\",\n          \"href\": \"<uri>\",\n          \"metadata\": {\n            \"etag\": \"<string>\",\n            \"createdDate\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"createdByUserId\": \"<string>\",\n            \"lastModifiedDate\": \"<dateTime>\",\n            \"lastModifiedBy\": \"<string>\",\n            \"lastModifiedByUserId\": \"<string>\",\n            \"state\": \"MAINTENANCE\"\n          }\n        }\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"k8sVersion\": \"<string>\",\n    \"maintenanceWindow\": {\n      \"dayOfTheWeek\": \"Saturday\",\n      \"time\": \"<string>\"\n    },\n    \"public\": true,\n    \"location\": \"<string>\",\n    \"natGatewayIp\": \"<string>\",\n    \"nodeSubnet\": \"<string>\",\n    \"apiSubnetAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"s3Buckets\": [\n      {\n        \"name\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\"\n      }\n    ]\n  },\n  \"metadata\": {},\n  \"entities\": {\n    \"nodepools\": {}\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/k8s?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"k8s"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "pccs",
			"item": [
				{
					"name": "{pccId}",
					"item": [
						{
							"name": "Retrieve a Cross Connect",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs",
										":pccId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "pccId",
											"value": "<string>",
											"description": "(Required) The unique ID of the Cross Connect."
										}
									]
								},
								"description": "Retrieve a Cross Connect by the resource ID. Cross Connect ID is in the response body when the Cross Connect is created and in the list of Cross Connects, returned by GET. For contract owner and administrators all cross connects in your contract can be retrieved. For non administrator users it only returns the cross connects you are granted access via the user groups you are member of."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"peers\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ],\n    \"connectableDatacenters\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"forwarding-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Cross Connects",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs",
										":pccId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "pccId",
											"value": "<string>",
											"description": "(Required) The unique ID of the Cross Connect."
										}
									]
								},
								"description": "Remove the specified Cross Connect. Cross connect can be deleted only if it is not connected to any LANs. For non administrator users a cross connect can be deleted only if you are granted access via the user groups you are member of."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Partially modify a Cross Connects",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs",
										":pccId"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "pccId",
											"value": "<string>",
											"description": "(Required) The unique ID of the Cross Connect."
										}
									]
								},
								"description": "Update the properties of the specified Cross Connect.For non administrator users you can only update the cross connects you are granted access via the user groups you are member of"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "Location",
											"value": "https://s/requests/I/status",
											"description": {
												"content": "Callback URL to poll async operation status.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"peers\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ],\n    \"connectableDatacenters\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"forwarding-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pccs/:pccId?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pccs",
												":pccId"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "pccId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Cross Connects",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pccs"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "List all Cross Connects. For contract owner and administrators it returns all cross connects in your contract. For non administrator users it only returns the cross connects you are granted access via the user groups you are member of."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"server\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"peers\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"location\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"location\": \"<string>\"\n          }\n        ],\n        \"connectableDatacenters\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"location\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"location\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"user\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"HIBERNATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"peers\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"location\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"datacenterId\": \"<string>\",\n            \"datacenterName\": \"<string>\",\n            \"location\": \"<string>\"\n          }\n        ],\n        \"connectableDatacenters\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"location\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"location\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"FAILED_DESTROYING\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Cross Connect",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pccs"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Creates a Cross-Connect. Only contract owners, administrators and users with createPcc user privilege can create a cross connect. Please note that connecting a LAN to a cross connect is to be done via the /lan endpoint."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "Location",
									"value": "https://s/requests/I/status",
									"description": {
										"content": "Callback URL to poll async operation status.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"peers\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datacenterId\": \"<string>\",\n        \"datacenterName\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ],\n    \"connectableDatacenters\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"location\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<string>\",\n  \"type\": \"forwarding-rule\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"DEPLOYING\"\n  }\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"request-status\",\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pccs?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pccs"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "labels",
			"item": [
				{
					"name": "{labelurn}",
					"item": [
						{
							"name": "Retrieve labels by URN",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/labels/:labelurn?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"labels",
										":labelurn"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "labelurn",
											"value": "<string>",
											"description": "(Required) The label URN; URN is unique for each label, and consists of:\n\nurn:label:<resource_type>:<resource_uuid>:<key><key>"
										}
									]
								},
								"description": "Retrieve a label by label URN.\n\nThe URN is unique for each label, and consists of:\n\nurn:label:<resource_type>:<resource_uuid>:<key>"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/labels/:labelurn?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"labels",
												":labelurn"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "labelurn"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"key\": \"<string>\",\n    \"value\": \"<string>\",\n    \"resourceId\": \"<string>\",\n    \"resourceType\": \"<string>\",\n    \"resourceHref\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"label\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Contract-Number",
												"value": "<integer>",
												"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/labels/:labelurn?pretty=true&depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"labels",
												":labelurn"
											],
											"query": [
												{
													"key": "pretty",
													"value": "true",
													"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
												},
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "labelurn"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List labels ",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Contract-Number",
								"value": "<integer>",
								"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/labels?pretty=true&depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
								},
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "List all available labels."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/labels?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"labels"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\",\n        \"resourceId\": \"<string>\",\n        \"resourceType\": \"<string>\",\n        \"resourceHref\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    },\n    {\n      \"properties\": {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\",\n        \"resourceId\": \"<string>\",\n        \"resourceType\": \"<string>\",\n        \"resourceHref\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"label\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Contract-Number",
										"value": "<integer>",
										"description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed."
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/labels?pretty=true&depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"labels"
									],
									"query": [
										{
											"key": "pretty",
											"value": "true",
											"description": "Controls whether the response is pretty-printed (with indentations and new lines)."
										},
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "templates",
			"item": [
				{
					"name": "{templateId}",
					"item": [
						{
							"name": "Get Cubes Template by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:templateId?depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":templateId"
									],
									"query": [
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									],
									"variable": [
										{
											"key": "templateId",
											"value": "<string>",
											"description": "(Required) The unique template ID."
										}
									]
								},
								"description": "Retrieves the properties of the Cubes template specified by its ID."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:templateId?depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":templateId"
											],
											"query": [
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "templateId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "<integer>",
											"description": {
												"content": "The number of requests that can still be made without triggering a failure response.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "<integer>",
											"description": {
												"content": "The average number of requests per minute allowed.",
												"type": "text/plain"
											}
										},
										{
											"key": "X-RateLimit-Burst",
											"value": "<integer>",
											"description": {
												"content": "The maximum number of concurrent API requests allowed.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"properties\": {\n    \"cores\": \"<number>\",\n    \"name\": \"<string>\",\n    \"ram\": \"<number>\",\n    \"storageSize\": \"<number>\",\n    \"category\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"type\": \"contract\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"etag\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"state\": \"UPDATING\"\n  }\n}"
								},
								{
									"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:templateId?depth=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":templateId"
											],
											"query": [
												{
													"key": "depth",
													"value": "0",
													"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
												}
											],
											"variable": [
												{
													"key": "templateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Cubes Templates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/templates?depth=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates"
							],
							"query": [
								{
									"key": "depth",
									"value": "0",
									"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
								}
							]
						},
						"description": "Retrieves all available templates.\n\nTemplates provide a pre-defined configuration for Cube servers. \n\n >Templates are read-only and cannot be created, modified, or deleted by users."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates?depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									],
									"query": [
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "<integer>",
									"description": {
										"content": "The number of requests that can still be made without triggering a failure response.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "<integer>",
									"description": {
										"content": "The average number of requests per minute allowed.",
										"type": "text/plain"
									}
								},
								{
									"key": "X-RateLimit-Burst",
									"value": "<integer>",
									"description": {
										"content": "The maximum number of concurrent API requests allowed.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"nodepool\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"properties\": {\n        \"cores\": \"<number>\",\n        \"name\": \"<string>\",\n        \"ram\": \"<number>\",\n        \"storageSize\": \"<number>\",\n        \"category\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"collection\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"UPDATING\"\n      }\n    },\n    {\n      \"properties\": {\n        \"cores\": \"<number>\",\n        \"name\": \"<string>\",\n        \"ram\": \"<number>\",\n        \"storageSize\": \"<number>\",\n        \"category\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"snapshot\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"etag\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"state\": \"BUSY\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 50",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates?depth=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									],
									"query": [
										{
											"key": "depth",
											"value": "0",
											"description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.ionos.com/cloudapi/v6"
		}
	]
}