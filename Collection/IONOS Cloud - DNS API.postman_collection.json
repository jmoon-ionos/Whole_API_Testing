{
	"info": {
		"_postman_id": "8023cce2-46eb-49a3-961a-16d299b4ac22",
		"name": "IONOS Cloud - DNS API",
		"description": "Cloud DNS service helps IONOS Cloud customers to automate DNS Zone and Record management.\n\n\nContact Support:\n Name: IONOS Cloud Support\n Email: support@cloud.ionos.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "zones",
			"item": [
				{
					"name": "{zoneId}",
					"item": [
						{
							"name": "records",
							"item": [
								{
									"name": "{recordId}",
									"item": [
										{
											"name": "Retrieve a record",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "zoneId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the DNS zone."
														},
														{
															"key": "recordId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the record."
														}
													]
												},
												"description": "Returns the record with the specified record ID."
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"record\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"fqdn\": \"<string>\",\n    \"zoneId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"SVCB\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}"
												},
												{
													"name": "### Bad Request\nThe request send to the API was malformed.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Found\nThe resource that was requested could not be found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update a record",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "zoneId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the DNS zone."
														},
														{
															"key": "recordId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the DNS record."
														}
													]
												},
												"description": "Updates or creates a DNS record for the provided record ID."
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"record\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"fqdn\": \"<string>\",\n    \"zoneId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"SVCB\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}"
												},
												{
													"name": "### Bad Request\nThe request send to the API was malformed.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Found\nThe resource that was requested could not be found.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"ALIAS\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a record",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "zoneId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the DNS zone."
														},
														{
															"key": "recordId",
															"value": "<uuid>",
															"description": "(Required) The ID (UUID) of the record."
														}
													]
												},
												"description": "Deletes a specified record from the DNS zone."
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "### Bad Request\nThe request send to the API was malformed.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Not Found\nThe resource that was requested could not be found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/zones/:zoneId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"zones",
																":zoneId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "zoneId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a record",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"records"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Creates a new record for the DNS zone."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"record\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"fqdn\": \"<string>\",\n    \"zoneId\": \"<uuid>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"SVCB\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"type\": \"CAA\",\n    \"content\": \"<string>\",\n    \"ttl\": 3600,\n    \"priority\": 3600,\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve records",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"records"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Returns the list of records for the specific DNS zone."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"CAA\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"RP\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"records"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "zonefile",
							"item": [
								{
									"name": "Retrieve a zone file",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"zonefile"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Returns an exported zone file in BIND format (RFC 1035)."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n  \"examples\": {\n    \"200\": {\n      \"value\": \";Zone: example.com\\n;Exported: Wed Nov 13 10:30:14 UTC 2019\\n\\n$ORIGIN example.com.\\n$TTL 3600\\n\\n@  86400  IN  SOA  ns-de.1and1-dns.de. hostmaster.kundenserver.de. (\\n          2017012400  ; serial\\n          28800  ; refresh\\n          7200  ; retry\\n          604800  ; expire\\n          600 )  ; minimum\\nautodiscover  7200  IN  CNAME  adsredir.1and1.info.\\n@  7200  IN  NS  ns-de.1and1-dns.org.\\n@  7200  IN  NS  ns-de.1and1-dns.com.\\n@  7200  IN  NS  ns-de.1and1-dns.biz.\\n@  7200  IN  NS  ns-de.1and1-dns.de.\\n_domainconnect  3600  IN  CNAME  _domainconnect.1and1.com.\\n\"\n    }\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates a zone with a file",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"zonefile"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Updates a zone with zone file in BIND format (RFC 1035). All records in the zone are replaced with the ones provided."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/plain"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"CAA\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"RP\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/plain"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/plain"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/plain"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/plain"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/zonefile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"zonefile"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "keys",
							"item": [
								{
									"name": "Retrieve a DNSSEC key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"keys"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Get DNSSEC keys for your DNS zone."
									},
									"response": [
										{
											"name": "Success case, dnssec keys returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"dnsseckeys\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"zoneId\": \"<uuid>\",\n    \"items\": [\n      {\n        \"keyTag\": \"<integer>\",\n        \"digestAlgorithmMnemonic\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"keyData\": {\n          \"flags\": \"<integer>\",\n          \"pubKey\": \"<string>\"\n        },\n        \"composedKeyData\": \"<string>\"\n      },\n      {\n        \"keyTag\": \"<integer>\",\n        \"digestAlgorithmMnemonic\": \"<string>\",\n        \"digest\": \"<string>\",\n        \"keyData\": {\n          \"flags\": \"<integer>\",\n          \"pubKey\": \"<string>\"\n        },\n        \"composedKeyData\": \"<string>\"\n      }\n    ]\n  },\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\"\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC\"\n    }\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a DNSSEC key",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"keys"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Enable DNSSEC keys and create associated DNSKEY records for your DNS zone.\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"dnsseckeys\",\n  \"href\": \"<uri>\",\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 2048,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Conflict Error\nYou can only have one DNSSEC per zone, and this zone already has one in place.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"properties\": {\n    \"keyParameters\": {\n      \"algorithm\": \"RSASHA256\",\n      \"kskBits\": 4096,\n      \"zskBits\": 4096\n    },\n    \"nsecParameters\": {\n      \"nsecMode\": \"NSEC3\",\n      \"nsec3Iterations\": \"<integer>\",\n      \"nsec3SaltBits\": \"<integer>\"\n    },\n    \"validity\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a DNSSEC key",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId",
												"keys"
											],
											"variable": [
												{
													"key": "zoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Disable DNSSEC keys and remove associated DNSKEY records for your DNS zone.\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/zones/:zoneId/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"zones",
														":zoneId",
														"keys"
													],
													"variable": [
														{
															"key": "zoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve a zone",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones/:zoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones",
										":zoneId"
									],
									"variable": [
										{
											"key": "zoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Returns a DNS zone by given ID."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  },\n  \"type\": \"zone\"\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a zone",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones/:zoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones",
										":zoneId"
									],
									"variable": [
										{
											"key": "zoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Updates or creates a zone for the provided zone ID.\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  },\n  \"type\": \"zone\"\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a zone",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones/:zoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones",
										":zoneId"
									],
									"variable": [
										{
											"key": "zoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Deletes the specified zone and all of the records it contains."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/zones/:zoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"zones",
												":zoneId"
											],
											"variable": [
												{
													"key": "zoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/zones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zones"
							],
							"query": [
								{
									"key": "filter.state",
									"value": "FAILED",
									"description": "Filter used to fetch all zones in a particular state."
								},
								{
									"key": "filter.zoneName",
									"value": "<string>",
									"description": "Filter used to fetch only the zones that contain the specified zone name."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "Returns a list of the DNS zones for the customer. Default limit is the first 100 items. Use pagination query parameters for listing more items (up to 1000)."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"items\": [\n    {\n      \"href\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"nameservers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"zoneName\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": true\n      },\n      \"type\": \"zone\"\n    },\n    {\n      \"href\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"metadata\": {\n        \"state\": \"PROVISIONING\",\n        \"nameservers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"zoneName\": \"<string>\",\n        \"description\": \"<string>\",\n        \"enabled\": true\n      },\n      \"type\": \"zone\"\n    }\n  ],\n  \"limit\": \"<number>\",\n  \"offset\": \"<number>\",\n  \"type\": \"collection\"\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/zones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a zone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zones"
							]
						},
						"description": "Creates a new zone with default NS and SOA records."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"FAILED\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  },\n  \"type\": \"zone\"\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zones"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "secondaryzones",
			"item": [
				{
					"name": "{secondaryZoneId}",
					"item": [
						{
							"name": "axfr",
							"item": [
								{
									"name": "Get status of zone transfer",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId",
												"axfr"
											],
											"variable": [
												{
													"key": "secondaryZoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Get status of zone transfer. \nNote that Cloud DNS relies on the following Anycast addresses for sending DNS notify messages.\nMake sure to whitelist on your end:\n  - IPv4: 212.227.123.25\n  - IPv6: 2001:8d8:fe:53::5cd:25\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"primaryIp\": {\n        \"format\": \"ipv4\"\n      },\n      \"status\": \"<string>\",\n      \"errorMessage\": \"<string>\"\n    },\n    {\n      \"primaryIp\": {\n        \"format\": \"ipv4\"\n      },\n      \"status\": \"<string>\",\n      \"errorMessage\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Start zone transfer",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId",
												"axfr"
											],
											"variable": [
												{
													"key": "secondaryZoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS zone."
												}
											]
										},
										"description": "Initiate zone transfer.\nNote that Cloud DNS relies on the following Anycast addresses for sending DNS notify messages.\nMake sure to whitelist on your end:\n  - IPv4: 212.227.123.25\n  - IPv6: 2001:8d8:fe:53::5cd:25\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Found\nThe resource that was requested could not be found.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/axfr",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"axfr"
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "records",
							"item": [
								{
									"name": "Retrieve records for a secondary zone",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId",
												"records"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "The maximum number of elements to return. Use together with offset for pagination."
												}
											],
											"variable": [
												{
													"key": "secondaryZoneId",
													"value": "<uuid>",
													"description": "(Required) The ID (UUID) of the DNS secondary zone."
												}
											]
										},
										"description": "Returns the list of records for a secondary zone. Those are the records created for its primary IPs"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"records"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														}
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ]\n  },\n  \"items\": [\n    {\n      \"type\": \"record\",\n      \"metadata\": {\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"rootName\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"SRV\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    },\n    {\n      \"type\": \"record\",\n      \"metadata\": {\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"rootName\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"SVCB\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
										},
										{
											"name": "### Bad Request\nThe request send to the API was malformed.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"records"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														}
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"records"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														}
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"records"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														}
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId/records?offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"secondaryzones",
														":secondaryZoneId",
														"records"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The maximum number of elements to return. Use together with offset for pagination."
														}
													],
													"variable": [
														{
															"key": "secondaryZoneId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve a secondary zone",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones",
										":secondaryZoneId"
									],
									"variable": [
										{
											"key": "secondaryZoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Returns a DNS secondary zone by given ID."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"PROVISIONING\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"zone\"\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a secondary zone",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones",
										":secondaryZoneId"
									],
									"variable": [
										{
											"key": "secondaryZoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Updates or creates a secondary zone for the provided secondary Zone ID."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"PROVISIONING\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"zone\"\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a secondary zone",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones",
										":secondaryZoneId"
									],
									"variable": [
										{
											"key": "secondaryZoneId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the DNS zone."
										}
									]
								},
								"description": "Deletes the specified secondary zone."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/secondaryzones/:secondaryZoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secondaryzones",
												":secondaryZoneId"
											],
											"variable": [
												{
													"key": "secondaryZoneId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve secondary zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/secondaryzones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secondaryzones"
							],
							"query": [
								{
									"key": "filter.state",
									"value": "FAILED",
									"description": "Filter used to fetch all zones in a particular state."
								},
								{
									"key": "filter.zoneName",
									"value": "<string>",
									"description": "Filter used to fetch only the zones that contain the specified zone name."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "Returns a list of the secondary DNS zones for the customer. Default limit is the first 100 items. Use pagination query parameters for listing more items (up to 1000)."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"items\": [\n    {\n      \"href\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"nameservers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"primaryIps\": [\n          {\n            \"format\": \"ipv4\"\n          }\n        ],\n        \"zoneName\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"type\": \"zone\"\n    },\n    {\n      \"href\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"metadata\": {\n        \"state\": \"DESTROYING\",\n        \"nameservers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"primaryIps\": [\n          {\n            \"format\": \"ipv4\"\n          }\n        ],\n        \"zoneName\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"type\": \"zone\"\n    }\n  ],\n  \"limit\": \"<number>\",\n  \"offset\": \"<number>\",\n  \"type\": \"collection\"\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/secondaryzones?filter.state=FAILED&filter.zoneName=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									],
									"query": [
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch all zones in a particular state."
										},
										{
											"key": "filter.zoneName",
											"value": "<string>",
											"description": "Filter used to fetch only the zones that contain the specified zone name."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a secondary zone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/secondaryzones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secondaryzones"
							]
						},
						"description": "Creates a new secondary zone with default NS and SOA records.\nNote that Cloud DNS relies on the following Anycast addresses for sending DNS notify messages.\nMake sure to whitelist on your end:\n  - IPv4: 212.227.123.25\n  - IPv6: 2001:8d8:fe:53::5cd:25\n"
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"href\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"metadata\": {\n    \"state\": \"PROVISIONING\",\n    \"nameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"type\": \"zone\"\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"primaryIps\": [\n      {\n        \"format\": \"ipv4\"\n      }\n    ],\n    \"zoneName\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/secondaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secondaryzones"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "records",
			"item": [
				{
					"name": "Retrieve all records from primary zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"records"
							],
							"query": [
								{
									"key": "filter.zoneId",
									"value": "<uuid>",
									"description": "Filter used to fetch only the records that contain specified zoneId."
								},
								{
									"key": "filter.name",
									"value": "<string>",
									"description": "Filter used to fetch only the records that contain specified record name."
								},
								{
									"key": "filter.state",
									"value": "FAILED",
									"description": "Filter used to fetch only the records that are in certain state."
								},
								{
									"key": "filter.type",
									"value": "LOC",
									"description": "Filter used to fetch only the records with specified type."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "Returns the list of all records for all customer DNS zones with the possibility to filter them."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"records"
									],
									"query": [
										{
											"key": "filter.zoneId",
											"value": "<uuid>",
											"description": "Filter used to fetch only the records that contain specified zoneId."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Filter used to fetch only the records that contain specified record name."
										},
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch only the records that are in certain state."
										},
										{
											"key": "filter.type",
											"value": "LOC",
											"description": "Filter used to fetch only the records with specified type."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"href\": \"<uri>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"CAA\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"record\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"fqdn\": \"<string>\",\n        \"zoneId\": \"<uuid>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"type\": \"RP\",\n        \"content\": \"<string>\",\n        \"ttl\": 3600,\n        \"priority\": 3600,\n        \"enabled\": true\n      }\n    }\n  ],\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"records"
									],
									"query": [
										{
											"key": "filter.zoneId",
											"value": "<uuid>",
											"description": "Filter used to fetch only the records that contain specified zoneId."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Filter used to fetch only the records that contain specified record name."
										},
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch only the records that are in certain state."
										},
										{
											"key": "filter.type",
											"value": "LOC",
											"description": "Filter used to fetch only the records with specified type."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"records"
									],
									"query": [
										{
											"key": "filter.zoneId",
											"value": "<uuid>",
											"description": "Filter used to fetch only the records that contain specified zoneId."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Filter used to fetch only the records that contain specified record name."
										},
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch only the records that are in certain state."
										},
										{
											"key": "filter.type",
											"value": "LOC",
											"description": "Filter used to fetch only the records with specified type."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"records"
									],
									"query": [
										{
											"key": "filter.zoneId",
											"value": "<uuid>",
											"description": "Filter used to fetch only the records that contain specified zoneId."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Filter used to fetch only the records that contain specified record name."
										},
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch only the records that are in certain state."
										},
										{
											"key": "filter.type",
											"value": "LOC",
											"description": "Filter used to fetch only the records with specified type."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/records?filter.zoneId=<uuid>&filter.name=<string>&filter.state=FAILED&filter.type=LOC&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"records"
									],
									"query": [
										{
											"key": "filter.zoneId",
											"value": "<uuid>",
											"description": "Filter used to fetch only the records that contain specified zoneId."
										},
										{
											"key": "filter.name",
											"value": "<string>",
											"description": "Filter used to fetch only the records that contain specified record name."
										},
										{
											"key": "filter.state",
											"value": "FAILED",
											"description": "Filter used to fetch only the records that are in certain state."
										},
										{
											"key": "filter.type",
											"value": "LOC",
											"description": "Filter used to fetch only the records with specified type."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "quota",
			"item": [
				{
					"name": "Retrieve resources quota",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/quota",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"quota"
							]
						},
						"description": "Get quota details for zones, secondary zones, and records."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quota",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quota"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"quotaUsage\": {\n    \"zones\": 0,\n    \"records\": 0,\n    \"secondaryZones\": 0,\n    \"reverseRecords\": 0\n  },\n  \"quotaLimits\": {\n    \"zones\": 0,\n    \"records\": 0,\n    \"secondaryZones\": 0,\n    \"reverseRecords\": 0\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quota",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quota"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quota",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quota"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/quota",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quota"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "reverserecords",
			"item": [
				{
					"name": "{reverserecordId}",
					"item": [
						{
							"name": "Retrieve a reverse DNS record",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords",
										":reverserecordId"
									],
									"variable": [
										{
											"key": "reverserecordId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the reverse DNS record."
										}
									]
								},
								"description": "Returns the record with the specified record ID."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"reverserecord\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a reverse DNS record",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords",
										":reverserecordId"
									],
									"variable": [
										{
											"key": "reverserecordId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the reverse DNS record."
										}
									]
								},
								"description": "Updates or creates a reverse DNS record for the provided reverse DNS record ID.\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"reverserecord\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict Error\nThis IP is not available to create a reverse DNS record.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a reverse DNS record",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords",
										":reverserecordId"
									],
									"variable": [
										{
											"key": "reverserecordId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the reverse DNS record."
										}
									]
								},
								"description": "Deletes a reverse DNS record.\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reverserecords/:reverserecordId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reverserecords",
												":reverserecordId"
											],
											"variable": [
												{
													"key": "reverserecordId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieves existing reverse DNS records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reverserecords?filter.recordIp=<string>&filter.recordIp=<string>&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reverserecords"
							],
							"query": [
								{
									"key": "filter.recordIp",
									"value": "<string>",
									"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
								},
								{
									"key": "filter.recordIp",
									"value": "<string>",
									"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "Returns a list of the reverse records of the customer. Default limit is the first 100 items. Use pagination query parameters to list more items."
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords?filter.recordIp=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									],
									"query": [
										{
											"key": "filter.recordIp",
											"value": "<string>",
											"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"reverserecord\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ip\": {\n          \"format\": \"ipv4\"\n        },\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"reverserecord\",\n      \"href\": \"<uri>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"ip\": {\n          \"format\": \"ipv4\"\n        },\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"href\": \"<uri>\",\n  \"offset\": \"<number>\",\n  \"limit\": \"<number>\",\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords?filter.recordIp=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									],
									"query": [
										{
											"key": "filter.recordIp",
											"value": "<string>",
											"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords?filter.recordIp=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									],
									"query": [
										{
											"key": "filter.recordIp",
											"value": "<string>",
											"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reverserecords?filter.recordIp=<string>&offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									],
									"query": [
										{
											"key": "filter.recordIp",
											"value": "<string>",
											"description": "Filter is used to fetch only the reverse records for the specified IPs.\nIt's an array of IP records. IP can be any valid IPv4 or IPv6 address.\nParameter has to be sent in query as many times as values (filter.recordIp=1.2.3.4&filter.recordIp=2.3.4.5)\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a reverse DNS record",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reverserecords",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reverserecords"
							]
						},
						"description": "Creates a new reverse DNS record. Reverse DNS is applicable to IPv4 addresses within IP Blocks and IPv6 addresses of the VDC.\n"
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"reverserecord\",\n  \"href\": \"<uri>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Conflict Error\nThis IP is not available to create a reverse DNS record.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"ip\": {\n      \"format\": \"ipv4\"\n    },\n    \"description\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reverserecords",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reverserecords"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dns.de-fra.ionos.com"
		}
	]
}