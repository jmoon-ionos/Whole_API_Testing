{
	"info": {
		"_postman_id": "64e94f07-9aa7-4c79-88ac-6d687d20ac44",
		"name": "Certificate Manager Service API",
		"description": "Using the Certificate Manager Service, you can conveniently provision and manage SSL certificates \nwith IONOS services and your internal connected resources. \n\nFor the [Application Load Balancer](https://api.ionos.com/docs/cloud/v6/#Application-Load-Balancers-get-datacenters-datacenterId-applicationloadbalancers),\nyou usually need a certificate to encrypt your HTTPS traffic.\nThe service provides the basic functions of uploading and deleting your certificates for this purpose.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "certificates",
			"item": [
				{
					"name": "{certificateId}",
					"item": [
						{
							"name": "Retrieve Certificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateId"
									],
									"variable": [
										{
											"key": "certificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Certificate."
										}
									]
								},
								"description": "Returns the Certificate by ID."
							},
							"response": [
								{
									"name": "Getting Certificate was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"certificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"commonName\": \"<string>\",\n    \"expired\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"notAfter\": \"<dateTime>\",\n    \"notBefore\": \"<dateTime>\",\n    \"serialNumber\": \"<string>\",\n    \"state\": \"AVAILABLE\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"autoCertificate\": \"<uuid>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"ut labore commodo reprehenderit enim\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates Certificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateId"
									],
									"variable": [
										{
											"key": "certificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Certificate."
										}
									]
								},
								"description": "Changes Certificate with the provided ID.\nValues provides will replace the existing data.\n"
							},
							"response": [
								{
									"name": "Certificate successfully updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"certificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"commonName\": \"<string>\",\n    \"expired\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"notAfter\": \"<dateTime>\",\n    \"notBefore\": \"<dateTime>\",\n    \"serialNumber\": \"<string>\",\n    \"state\": \"AVAILABLE\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"autoCertificate\": \"<uuid>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"ut labore commodo reprehenderit enim\"\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Certificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateId"
									],
									"variable": [
										{
											"key": "certificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Certificate."
										}
									]
								},
								"description": "Deletes the specified Certificate."
							},
							"response": [
								{
									"name": "Deleting Certificate was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateId"
											],
											"variable": [
												{
													"key": "certificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all Certificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificates"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								},
								{
									"key": "filter.commonName",
									"value": "<string>",
									"description": "Filter by the common name (DNS).\n"
								},
								{
									"key": "filter.autoCertificate",
									"value": "<uuid>",
									"description": "Filter by autoCertificateID.\n"
								}
							]
						},
						"description": "This endpoint enables retrieving all Certificate using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested Certificate successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"certificate\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"commonName\": \"<string>\",\n        \"expired\": \"<boolean>\",\n        \"message\": \"<string>\",\n        \"notAfter\": \"<dateTime>\",\n        \"notBefore\": \"<dateTime>\",\n        \"serialNumber\": \"<string>\",\n        \"state\": \"FAILED\",\n        \"subjectAlternativeNames\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"autoCertificate\": \"<uuid>\",\n        \"lastIssuedCertificate\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"certificate\": \"<string>\",\n        \"certificateChain\": \"<string>\",\n        \"privateKey\": \"occaecat\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"certificate\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"commonName\": \"<string>\",\n        \"expired\": \"<boolean>\",\n        \"message\": \"<string>\",\n        \"notAfter\": \"<dateTime>\",\n        \"notBefore\": \"<dateTime>\",\n        \"serialNumber\": \"<string>\",\n        \"state\": \"FAILED\",\n        \"subjectAlternativeNames\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"autoCertificate\": \"<uuid>\",\n        \"lastIssuedCertificate\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"certificate\": \"<string>\",\n        \"certificateChain\": \"<string>\",\n        \"privateKey\": false\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates?offset=0&limit=100&filter.commonName=<string>&filter.autoCertificate=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										},
										{
											"key": "filter.autoCertificate",
											"value": "<uuid>",
											"description": "Filter by autoCertificateID.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Certificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificates"
							]
						},
						"description": "Creates a new Certificate.\n\nThe full Certificate needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "Certificate successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"certificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"commonName\": \"<string>\",\n    \"expired\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"notAfter\": \"<dateTime>\",\n    \"notBefore\": \"<dateTime>\",\n    \"serialNumber\": \"<string>\",\n    \"state\": \"AVAILABLE\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"autoCertificate\": \"<uuid>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"ut labore commodo reprehenderit enim\"\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"certificate\": \"<string>\",\n    \"certificateChain\": \"<string>\",\n    \"privateKey\": \"<string>\"\n  },\n  \"metadata\": {\n    \"mollit9\": \"culpa\",\n    \"sint_05\": 59707966\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "auto-certificates",
			"item": [
				{
					"name": "{autoCertificateId}",
					"item": [
						{
							"name": "Retrieve AutoCertificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates",
										":autoCertificateId"
									],
									"variable": [
										{
											"key": "autoCertificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the AutoCertificate."
										}
									]
								},
								"description": "Returns the AutoCertificate by ID."
							},
							"response": [
								{
									"name": "Getting AutoCertificate was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"autocertificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa4096\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates AutoCertificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates",
										":autoCertificateId"
									],
									"variable": [
										{
											"key": "autoCertificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the AutoCertificate."
										}
									]
								},
								"description": "Changes AutoCertificate with the provided ID.\nValues provides will replace the existing data.\n"
							},
							"response": [
								{
									"name": "AutoCertificate successfully updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"autocertificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa4096\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete AutoCertificate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates",
										":autoCertificateId"
									],
									"variable": [
										{
											"key": "autoCertificateId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the AutoCertificate."
										}
									]
								},
								"description": "Deletes the specified AutoCertificate."
							},
							"response": [
								{
									"name": "Deleting AutoCertificate was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auto-certificates/:autoCertificateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auto-certificates",
												":autoCertificateId"
											],
											"variable": [
												{
													"key": "autoCertificateId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all AutoCertificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auto-certificates"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								},
								{
									"key": "filter.commonName",
									"value": "<string>",
									"description": "Filter by the common name (DNS).\n"
								}
							]
						},
						"description": "This endpoint enables retrieving all AutoCertificate using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested AutoCertificate successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"autocertificate\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"FAILED\",\n        \"message\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastIssuedCertificate\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"provider\": \"<uuid>\",\n        \"commonName\": \"<string>\",\n        \"keyAlgorithm\": \"rsa4096\",\n        \"name\": \"<string>\",\n        \"subjectAlternativeNames\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"autocertificate\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"PROVISIONING\",\n        \"message\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\",\n        \"lastIssuedCertificate\": \"<uuid>\"\n      },\n      \"properties\": {\n        \"provider\": \"<uuid>\",\n        \"commonName\": \"<string>\",\n        \"keyAlgorithm\": \"rsa3072\",\n        \"name\": \"<string>\",\n        \"subjectAlternativeNames\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auto-certificates?offset=0&limit=100&filter.commonName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										},
										{
											"key": "filter.commonName",
											"value": "<string>",
											"description": "Filter by the common name (DNS).\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create AutoCertificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auto-certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auto-certificates"
							]
						},
						"description": "Creates a new AutoCertificate.\n\nThe full AutoCertificate needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "AutoCertificate successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"autocertificate\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\",\n    \"lastIssuedCertificate\": \"<uuid>\"\n  },\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa4096\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"provider\": \"<uuid>\",\n    \"commonName\": \"<string>\",\n    \"keyAlgorithm\": \"rsa3072\",\n    \"name\": \"<string>\",\n    \"subjectAlternativeNames\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"non7_f\": -25063342.75151269,\n    \"culpa__\": -37765289.660700984,\n    \"velit68f\": \"adi\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auto-certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auto-certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "providers",
			"item": [
				{
					"name": "{providerId}",
					"item": [
						{
							"name": "Retrieve Provider",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers/:providerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers",
										":providerId"
									],
									"variable": [
										{
											"key": "providerId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Provider."
										}
									]
								},
								"description": "Returns the Provider by ID."
							},
							"response": [
								{
									"name": "Getting Provider was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"provider\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\"\n    }\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates Provider",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers/:providerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers",
										":providerId"
									],
									"variable": [
										{
											"key": "providerId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Provider."
										}
									]
								},
								"description": "Changes Provider with the provided ID.\nValues provides will replace the existing data.\n"
							},
							"response": [
								{
									"name": "Provider successfully updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"provider\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\"\n    }\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ullamco_c\": \"cillum mollit ullamco\",\n    \"quis02c\": \"nisi minim pariatur velit enim\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Provider",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers/:providerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers",
										":providerId"
									],
									"variable": [
										{
											"key": "providerId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the Provider."
										}
									]
								},
								"description": "Deletes the specified Provider."
							},
							"response": [
								{
									"name": "Deleting Provider was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/providers/:providerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"providers",
												":providerId"
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/providers?offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"providers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of elements to return. Use together with offset for pagination."
								}
							]
						},
						"description": "This endpoint enables retrieving all Provider using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested Provider successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_links\": {\n    \"prev\": \"<uri>\",\n    \"self\": \"<uri>\",\n    \"next\": \"<uri>\"\n  },\n  \"href\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"type\": \"collection\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"provider\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"message\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"server\": \"<string>\",\n        \"externalAccountBinding\": {\n          \"keyId\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"provider\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"state\": \"AVAILABLE\",\n        \"message\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"server\": \"<string>\",\n        \"externalAccountBinding\": {\n          \"keyId\": \"<string>\"\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/providers?offset=0&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first element (of the total list of elements) to include in the response. Use together with limit for pagination."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "The maximum number of elements to return. Use together with offset for pagination."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"providers"
							]
						},
						"description": "Creates a new Provider.\n\nThe full Provider needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "Provider successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"provider\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"state\": \"AVAILABLE\",\n    \"message\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"server\": \"<string>\",\n    \"externalAccountBinding\": {\n      \"keyId\": \"<string>\",\n      \"keySecret\": \"<string>\"\n    }\n  },\n  \"metadata\": {\n    \"qui839\": false,\n    \"adipisicingb\": false\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"providers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://certificate-manager.de-fra.ionos.com"
		}
	]
}