{
	"info": {
		"_postman_id": "ec3ff56e-9af3-47d5-a3ca-7280435528f7",
		"name": "IONOS Cloud - IAM Identity Password Policies API",
		"description": "API for managing Password Policies.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5503703"
	},
	"item": [
		{
			"name": "passwordpolicies",
			"item": [
				{
					"name": "{passwordPolicyId}",
					"item": [
						{
							"name": "Retrieve PasswordPolicy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies",
										":passwordPolicyId"
									],
									"variable": [
										{
											"key": "passwordPolicyId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the PasswordPolicy."
										}
									]
								},
								"description": "Returns the PasswordPolicy by ID."
							},
							"response": [
								{
									"name": "Getting PasswordPolicy was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"passwordpolicy\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Ensure PasswordPolicy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies",
										":passwordPolicyId"
									],
									"variable": [
										{
											"key": "passwordPolicyId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the PasswordPolicy."
										}
									]
								},
								"description": "Ensures that the PasswordPolicy with the provided ID is created or modified.\nThe full PasswordPolicy needs to be provided to ensure\n(either update or create) the PasswordPolicy. Non present data will\nonly be filled with defaults or left empty, but not take\nprevious values into consideration.\n"
							},
							"response": [
								{
									"name": "PasswordPolicy successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"passwordpolicy\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  }\n}"
								},
								{
									"name": "PasswordPolicy successfully ensured.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"passwordpolicy\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  }\n}"
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Conflict\nThe UUID is already taken by another party, follow the guides to generate UUIDs uniquely.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"voluptate_ec\": 51187410.72964427\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete PasswordPolicy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies",
										":passwordPolicyId"
									],
									"variable": [
										{
											"key": "passwordPolicyId",
											"value": "<uuid>",
											"description": "(Required) The ID (UUID) of the PasswordPolicy."
										}
									]
								},
								"description": "Deletes the specified PasswordPolicy."
							},
							"response": [
								{
									"name": "Deleting PasswordPolicy was successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "### Bad Request\nThe request send to the API was malformed.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Not Found\nThe resource that was requested could not be found.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/passwordpolicies/:passwordPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"passwordpolicies",
												":passwordPolicyId"
											],
											"variable": [
												{
													"key": "passwordPolicyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all PasswordPolicy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordpolicies"
							],
							"query": [
								{
									"key": "effectivePolicy",
									"value": "<boolean>",
									"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
								}
							]
						},
						"description": "This endpoint enables retrieving all PasswordPolicy using\npagination and optional filters.\n"
					},
					"response": [
						{
							"name": "Returned all requested PasswordPolicy successfully.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"collection\",\n  \"href\": \"<string>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"passwordpolicy\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"description\": \"<string>\",\n        \"minLength\": \"<integer>\",\n        \"minNumberChars\": 0,\n        \"minUpperChars\": 0,\n        \"minLowerChars\": 0,\n        \"minSpecialChars\": 0\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"passwordpolicy\",\n      \"href\": \"<string>\",\n      \"metadata\": {\n        \"createdDate\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"createdByUserId\": \"<string>\",\n        \"lastModifiedDate\": \"<dateTime>\",\n        \"lastModifiedBy\": \"<string>\",\n        \"lastModifiedByUserId\": \"<string>\",\n        \"resourceURN\": \"<string>\"\n      },\n      \"properties\": {\n        \"description\": \"<string>\",\n        \"minLength\": \"<integer>\",\n        \"minNumberChars\": 0,\n        \"minUpperChars\": 0,\n        \"minLowerChars\": 0,\n        \"minSpecialChars\": 0\n      }\n    }\n  ]\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies?effectivePolicy=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									],
									"query": [
										{
											"key": "effectivePolicy",
											"value": "<boolean>",
											"description": "When set to `true`, then the policy that is in effect for the actor's contract (as defined by the JWT) is returned.\nATM this has the only effect that if no policy is defined for the user/contract, then the IONOS default policy is returned.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create PasswordPolicy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/passwordpolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordpolicies"
							]
						},
						"description": "Creates a new PasswordPolicy.\n\nThe full PasswordPolicy needs to be provided to create the object.\nOptional data will be filled with defaults or left empty.\n"
					},
					"response": [
						{
							"name": "PasswordPolicy successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"passwordpolicy\",\n  \"href\": \"<string>\",\n  \"metadata\": {\n    \"createdDate\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"createdByUserId\": \"<string>\",\n    \"lastModifiedDate\": \"<dateTime>\",\n    \"lastModifiedBy\": \"<string>\",\n    \"lastModifiedByUserId\": \"<string>\",\n    \"resourceURN\": \"<string>\"\n  },\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  }\n}"
						},
						{
							"name": "### Bad Request\nThe request send to the API was malformed.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unauthorized\nThe request is missing authorization information or the authorization information provided are expired.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Not Allowed\nThe user issuing the request does not have the needed permissions.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unsupported Media Type\nThe request has an unsupported media type.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unprocessable Entity\nThe request was well-formed but was unable to be followed due to semantic errors.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Too Many Requests\nThe user has sent too many requests in a given amount of time.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Internal Server Error\nAn internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "### Unexpected Internal Server Error\nAn unexpected internal error occurred. We apologize for the inconvenience!\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"properties\": {\n    \"description\": \"<string>\",\n    \"minLength\": \"<integer>\",\n    \"minNumberChars\": 0,\n    \"minUpperChars\": 0,\n    \"minLowerChars\": 0,\n    \"minSpecialChars\": 0\n  },\n  \"metadata\": {\n    \"commodo_1\": \"est aliqua\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordpolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordpolicies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"messages\": [\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"errorCode\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://iam.ionos.com"
		}
	]
}